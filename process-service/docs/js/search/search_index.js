var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BookProcessResultInterface.html",[0,1.07,1,1.284]],["body/interfaces/BookProcessResultInterface.html",[0,1.343,1,2.004,2,1.948,3,1.119,4,0.928,5,0.928,6,1.948,7,1.948,8,2.398,9,3.833,10,1.515,11,0.76,12,2.004,13,3.396,14,4.171,15,0.76,16,0.068,17,1.343,18,2.398,19,3.082,20,1.119,21,0.056,22,0.056]],["title/interfaces/BookRequestInterface.html",[0,1.07,10,0.892]],["body/interfaces/BookRequestInterface.html",[0,1.219,2,1.768,3,1.016,4,0.842,5,0.842,6,1.768,10,1.309,11,0.69,12,1.885,15,1.039,16,0.068,20,1.016,21,0.053,22,0.053,23,2.177,24,1.835,25,3.277,26,4.212,27,4.212,28,4.212,29,2.025,30,3.988]],["title/controllers/LibraryProcessController.html",[31,1.284,32,1.284]],["body/controllers/LibraryProcessController.html",[3,0.688,4,0.57,5,0.57,10,1.485,11,0.467,15,0.68,16,0.071,17,1.556,20,0.688,21,0.041,22,0.041,24,1.202,31,1.442,32,1.442,33,1.474,34,2.055,35,1.474,36,1.743,37,2.503,38,2.53,39,3.251,40,1.894,41,3.961,42,4.088,43,2.758,44,1.894,45,1.743,46,1.894,47,1.442,48,1.202,49,3.571,50,1.743,51,1.894,52,1.894,53,1.894,54,1.474,55,0.991,56,1.002,57,1.894,58,1.894,59,3.251,60,1.894,61,3.251,62,0.991,63,1.474,64,0.57,65,1.894,66,1.474,67,1.894,68,1.894,69,2.146,70,1.743,71,1.894,72,1.556,73,2.758,74,2.758,75,2.758,76,2.758,77,2.758,78,2.758,79,2.146,80,2.758,81,1.894,82,1.894]],["title/modules/LibraryProcessModule.html",[83,1.551,84,1.284]],["body/modules/LibraryProcessModule.html",[3,0.61,4,0.505,5,0.505,16,0.072,17,1.763,20,0.61,21,0.037,22,0.037,32,1.584,33,1.962,48,0.732,55,0.878,56,1.377,62,0.878,64,0.505,72,0.732,83,2.281,84,1.982,85,1.061,86,0.878,87,1.306,88,1.306,89,0.878,90,2.809,91,2.357,92,1.306,93,1.306,94,1.962,95,1.306,96,1.306,97,1.679,98,1.679,99,1.679,100,2.62,101,1.306,102,1.679,103,1.319,104,1.594,105,1.306,106,2.522,107,1.594,108,1.319,109,1.061,110,1.594,111,1.679,112,1.679,113,2.522,114,0.732,115,1.306,116,1.679,117,1.679,118,1.679,119,2.809,120,1.679,121,1.679,122,2.522,123,1.679,124,2.522,125,1.679,126,2.522,127,2.522,128,3.029,129,1.962,130,2.522,131,2.522,132,3.029,133,1.306,134,1.679,135,1.679,136,1.679,137,1.679,138,1.679,139,0.878,140,2.522,141,0.878,142,1.679,143,1.679,144,1.679,145,1.679,146,1.679,147,1.679,148,1.679,149,1.679,150,1.679]],["title/injectables/LibraryProcessService.html",[56,0.892,151,1.284]],["body/injectables/LibraryProcessService.html",[1,0.939,3,0.396,4,0.328,5,0.328,7,1.992,10,1.349,11,0.269,13,0.849,15,0.778,16,0.071,17,1.452,18,2.709,20,0.396,21,0.026,22,0.026,24,1.373,25,1.78,29,1.517,34,2.106,36,1.135,37,2.279,38,1.78,45,1.992,47,1.648,48,1.373,50,1.852,54,0.849,55,0.571,56,0.652,62,0.571,63,0.849,64,0.328,66,1.397,69,0.849,70,2.106,72,1.452,79,0.849,103,0.571,105,0.849,107,1.676,108,1.196,114,1.155,115,0.849,129,0.849,139,1.532,141,0.939,151,0.939,152,1.091,153,0.849,154,1.795,155,1.795,156,2.453,157,1.795,158,2.288,159,1.795,160,1.397,161,0.849,162,2.288,163,2.288,164,2.651,165,1.091,166,1.795,167,1.091,168,2.651,169,2.709,170,1.795,171,1.091,172,1.091,173,1.795,174,1.091,175,1.795,176,1.091,177,1.091,178,3.152,179,1.795,180,1.091,181,1.091,182,1.795,183,0.849,184,1.091,185,1.091,186,1.091,187,1.091,188,1.091,189,1.091,190,1.795,191,1.091,192,1.091,193,3.332,194,1.795,195,1.091,196,1.091,197,2.651,198,1.091,199,1.091,200,1.091,201,1.091,202,1.795,203,1.091,204,1.091,205,1.091,206,0.849,207,1.091,208,1.795,209,1.091,210,1.091,211,1.795,212,1.091,213,1.795,214,1.795,215,1.795,216,2.288,217,1.795,218,1.091,219,1.091,220,2.288,221,1.091,222,1.091,223,1.091,224,1.091,225,1.091,226,1.091,227,1.091,228,1.397,229,1.091,230,1.795,231,1.091,232,1.091,233,1.091,234,1.091,235,1.091,236,1.091,237,1.091,238,1.091,239,1.091,240,1.091,241,1.091,242,1.091,243,1.091]],["title/classes/LockUtil.html",[64,0.739,114,1.07]],["body/classes/LockUtil.html",[3,0.617,4,0.511,5,0.511,11,0.419,15,0.835,16,0.071,17,0.74,20,0.617,21,0.037,22,0.037,24,1.58,29,1.949,36,1.607,37,2.406,45,2.292,47,1.896,48,1.58,50,2.14,64,0.511,70,1.927,72,0.74,107,2.14,108,1.771,114,1.108,119,2.373,139,1.594,141,0.888,156,3.159,160,1.979,161,1.321,169,2.635,206,1.321,244,1.698,245,1.321,246,3.049,247,2.543,248,2.543,249,2.543,250,3.386,251,1.698,252,1.698,253,3.386,254,3.386,255,2.543,256,1.698,257,1.073,258,1.073,259,3.049,260,2.543,261,2.543,262,1.698,263,1.698,264,2.543,265,1.698,266,2.543,267,1.698,268,2.543,269,1.698,270,1.698,271,1.698,272,1.698,273,1.698,274,3.049,275,1.698,276,1.698,277,1.698,278,1.698,279,1.698,280,1.698]],["title/coverage.html",[281,2.09]],["body/coverage.html",[0,1.422,1,1.259,5,0.725,6,2.063,7,1.522,8,1.873,10,0.874,15,0.594,16,0.069,21,0.048,22,0.048,23,1.873,31,1.259,32,1.259,34,2.063,35,1.873,56,0.874,64,0.725,89,1.259,103,1.259,104,1.522,109,1.522,110,1.522,114,1.049,141,1.259,151,1.259,153,1.873,228,3.61,245,1.873,281,1.522,282,2.407,283,2.407,284,2.407,285,1.873,286,1.873,287,3.703,288,1.873,289,4.375,290,1.873,291,1.873,292,3.97,293,2.881,294,2.881,295,1.873,296,2.407,297,2.407,298,2.407,299,2.407,300,2.407,301,1.873,302,2.407,303,2.407]],["title/dependencies.html",[86,1.538,304,1.612]],["body/dependencies.html",[16,0.071,21,0.056,22,0.056,55,1.587,62,1.587,86,1.587,101,2.362,108,1.587,183,2.362,305,4.142,306,3.036,307,3.036,308,3.036,309,3.036,310,3.036,311,3.036,312,3.036,313,3.036,314,3.036,315,3.036,316,3.036,317,3.036,318,3.036,319,3.036,320,3.036,321,3.036,322,3.036,323,3.036]],["title/miscellaneous/functions.html",[324,1.083,325,2.288]],["body/miscellaneous/functions.html",[11,0.776,15,0.776,16,0.062,21,0.057,22,0.057,24,1.371,29,1.691,47,1.645,48,1.371,89,2.201,110,2.661,257,1.989,258,1.989,285,2.448,286,3.021,288,3.021,290,2.448,301,2.448,324,1.645,325,2.448,326,3.146,327,3.146,328,3.146,329,3.146,330,3.146,331,2.448]],["title/index.html",[11,0.511,332,2.071,333,2.071]],["body/index.html",[4,0.711,16,0.069,21,0.047,22,0.047,281,1.492,331,1.837,334,2.36,335,2.36,336,3.22,337,2.36,338,2.36,339,2.36,340,2.36,341,2.36,342,2.36,343,1.837,344,3.665,345,2.36,346,2.36,347,2.36,348,2.36,349,3.665,350,4.353,351,2.36,352,2.36,353,4.253,354,2.36,355,2.36,356,3.22,357,2.36,358,2.36,359,2.36,360,2.36,361,3.22,362,3.22,363,2.36,364,2.36,365,2.36,366,3.22,367,3.22,368,2.36,369,2.36,370,2.36,371,2.36,372,2.36,373,1.837,374,2.36,375,2.36,376,2.36,377,2.36,378,2.36,379,2.36,380,2.36,381,2.36,382,2.36,383,2.36,384,1.837,385,2.36,386,2.36,387,2.36,388,2.36,389,2.36,390,2.36,391,1.837]],["title/modules.html",[85,2.09]],["body/modules.html",[16,0.062,21,0.062,22,0.062,84,1.891,85,2.286,373,2.815,392,3.617,393,3.617,394,3.617]],["title/overview.html",[395,2.573]],["body/overview.html",[2,1.978,16,0.062,21,0.057,22,0.057,31,1.637,56,1.525,64,0.942,83,2.446,84,2.294,86,1.637,87,2.436,88,2.436,89,1.637,90,2.436,91,2.436,92,2.436,93,2.436,94,3.011,95,2.436,96,2.436,151,1.637,395,2.436,396,4.387,397,3.13]],["title/properties.html",[12,1.538,304,1.612]],["body/properties.html",[12,1.836,16,0.069,21,0.061,22,0.061,343,2.733,384,2.733,391,2.733,398,3.512,399,3.512,400,3.512]],["title/miscellaneous/variables.html",[324,1.083,401,2.288]],["body/miscellaneous/variables.html",[11,0.613,15,0.929,16,0.071,21,0.049,22,0.049,29,1.753,72,1.64,100,2.596,103,1.968,104,2.379,109,2.108,133,3.13,139,1.3,257,2.542,258,2.542,291,1.935,293,1.935,294,3.13,295,2.929,324,1.3,401,1.935,402,3.764,403,2.487,404,3.336,405,2.487,406,2.487,407,2.487,408,2.487,409,2.487,410,2.487,411,2.487,412,2.487,413,2.487,414,2.487]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":228,"title":{},"body":{"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":399,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":210,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["0/1",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":396,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":235,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["2",{"_index":397,"title":{},"body":{"overview.html":{}}}],["3",{"_index":195,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["3.1.1",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["4.6.12",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":221,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["60000",{"_index":260,"title":{},"body":{"classes/LockUtil.html":{}}}],["6379",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.1",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":189,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["acquireexclusivelock",{"_index":246,"title":{},"body":{"classes/LockUtil.html":{}}}],["acquireexclusivelock(lockkey",{"_index":252,"title":{},"body":{"classes/LockUtil.html":{}}}],["amazing",{"_index":374,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["amqpclient",{"_index":163,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["amqplib",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":352,"title":{},"body":{"index.html":{}}}],["applications",{"_index":342,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":67,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["array",{"_index":30,"title":{},"body":{"interfaces/BookRequestInterface.html":{}}}],["async",{"_index":37,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["author",{"_index":384,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":70,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["backers",{"_index":375,"title":{},"body":{"index.html":{}}}],["book",{"_index":18,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/LibraryProcessService.html":{}}}],["bookname",{"_index":172,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookname.tolowercase().replace",{"_index":187,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookprocessresult",{"_index":230,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookprocessresultinterface",{"_index":1,"title":{"interfaces/BookProcessResultInterface.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["bookrequest",{"_index":175,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookrequest.id",{"_index":217,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookrequest.requested_book",{"_index":216,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["bookrequestinterface",{"_index":10,"title":{"interfaces/BookRequestInterface.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["books",{"_index":202,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["boolean",{"_index":14,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/LibraryProcessModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":394,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":392,"title":{},"body":{"modules.html":{}}}],["building",{"_index":337,"title":{},"body":{"index.html":{}}}],["catch",{"_index":78,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["catch((reason",{"_index":137,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["catch(async",{"_index":237,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["channel",{"_index":73,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["channel.ack(orginalmessage",{"_index":77,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["class",{"_index":64,"title":{"classes/LockUtil.html":{}},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":244,"title":{},"body":{"classes/LockUtil.html":{}}}],["client",{"_index":132,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["client.isready",{"_index":135,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["clientproxy",{"_index":164,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["clientsmodule",{"_index":112,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["clientsmodule.register",{"_index":144,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["cluster_libraryprocessmodule",{"_index":92,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["cluster_libraryprocessmodule_providers",{"_index":93,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["common/config",{"_index":111,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["common/constants",{"_index":105,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{}}}],["common/interfaces",{"_index":63,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["common/utils",{"_index":115,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{}}}],["configmodule",{"_index":99,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["configmodule.forroot",{"_index":117,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["configservice",{"_index":100,"title":{},"body":{"modules/LibraryProcessModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('redis_host",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis_pass",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis_port",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":136,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["connection",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["console.error(reason",{"_index":138,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["const",{"_index":72,"title":{},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":160,"title":{},"body":{"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["constructor(private",{"_index":65,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["constructor(redis",{"_index":161,"title":{},"body":{"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["context",{"_index":41,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["context.getchannelref",{"_index":74,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["context.getmessage",{"_index":76,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["controller",{"_index":31,"title":{"controllers/LibraryProcessController.html":{}},"body":{"controllers/LibraryProcessController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":33,"title":{},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{}}}],["core",{"_index":102,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["count",{"_index":201,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["coverage",{"_index":281,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createclient",{"_index":106,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["ctx",{"_index":59,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["data",{"_index":49,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["default",{"_index":257,"title":{},"body":{"classes/LockUtil.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defenv",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":45,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/LibraryProcessModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":343,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["documentation",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["durable",{"_index":150,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["e2e",{"_index":363,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":338,"title":{},"body":{"index.html":{}}}],["env",{"_index":121,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["env.config.ts",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envfilepath",{"_index":120,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["error",{"_index":79,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["error('failed",{"_index":219,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["example",{"_index":349,"title":{},"body":{"index.html":{}}}],["exist",{"_index":200,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["exists",{"_index":13,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/LibraryProcessService.html":{}}}],["existscount",{"_index":193,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["exlock",{"_index":143,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["express",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["exredislock",{"_index":269,"title":{},"body":{"classes/LockUtil.html":{}}}],["extends",{"_index":9,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["failed",{"_index":213,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["false",{"_index":125,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{}}}],["finally",{"_index":232,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["framework",{"_index":336,"title":{},"body":{"index.html":{}}}],["function",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":325,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":188,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["getexistscount",{"_index":154,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["getexistscount(normalizedbookname",{"_index":166,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["getnormalizedbookname",{"_index":155,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["getnormalizedbookname(bookname",{"_index":170,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["getting",{"_index":332,"title":{"index.html":{}},"body":{}}],["global",{"_index":126,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["grow",{"_index":370,"title":{},"body":{"index.html":{}}}],["here",{"_index":381,"title":{},"body":{"index.html":{}}}],["host",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":388,"title":{},"body":{"index.html":{}}}],["id",{"_index":25,"title":{},"body":{"interfaces/BookRequestInterface.html":{},"injectables/LibraryProcessService.html":{}}}],["identifier",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":123,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["imports",{"_index":116,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["inject",{"_index":129,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{}}}],["inject('lock_module",{"_index":185,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["inject('redis_module",{"_index":184,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["inject(library_request_service",{"_index":186,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["injectable",{"_index":151,"title":{"injectables/LibraryProcessService.html":{}},"body":{"injectables/LibraryProcessService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":152,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["installation",{"_index":348,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":351,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"overview.html":{}}}],["isglobal",{"_index":118,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["isnan(parseint(savedcount",{"_index":192,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["join",{"_index":377,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":385,"title":{},"body":{"index.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["library",{"_index":57,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["library_request_service",{"_index":103,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libraryprocesscontroller",{"_index":32,"title":{"controllers/LibraryProcessController.html":{}},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"coverage.html":{}}}],["libraryprocessmodule",{"_index":84,"title":{"modules/LibraryProcessModule.html":{}},"body":{"modules/LibraryProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["libraryprocessservice",{"_index":56,"title":{"injectables/LibraryProcessService.html":{}},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":391,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":367,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lock_module",{"_index":140,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["locker",{"_index":162,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["lockkey",{"_index":259,"title":{},"body":{"classes/LockUtil.html":{}}}],["lockprefixkey",{"_index":250,"title":{},"body":{"classes/LockUtil.html":{}}}],["locktime",{"_index":254,"title":{},"body":{"classes/LockUtil.html":{}}}],["lockutil",{"_index":114,"title":{"classes/LockUtil.html":{}},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{}}}],["lockutil(redis",{"_index":142,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["lockvalue",{"_index":253,"title":{},"body":{"classes/LockUtil.html":{}}}],["logger",{"_index":54,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["logger.error",{"_index":238,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["logger.error(error",{"_index":80,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["logger.log",{"_index":197,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["manager",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":194,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["math.random",{"_index":209,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["messagepattern",{"_index":60,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["messagepattern(`book.request",{"_index":68,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["messagepattern(`book.return",{"_index":81,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["messagepattern(book.request",{"_index":44,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["messagepattern(book.return",{"_index":52,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["metadata",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":36,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["millis",{"_index":268,"title":{},"body":{"classes/LockUtil.html":{}}}],["miscellaneous",{"_index":324,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":366,"title":{},"body":{"index.html":{}}}],["mock",{"_index":199,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["mode",{"_index":356,"title":{},"body":{"index.html":{}}}],["module",{"_index":83,"title":{"modules/LibraryProcessModule.html":{}},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/LibraryProcessModule.html":{},"modules.html":{}}}],["more",{"_index":380,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":386,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":241,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["nest",{"_index":344,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":390,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":101,"title":{},"body":{"modules/LibraryProcessModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":62,"title":{},"body":{"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":141,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{}}}],["node.js",{"_index":335,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["node_env(defenv",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizedbookname",{"_index":168,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["npm",{"_index":350,"title":{},"body":{"index.html":{}}}],["null",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":255,"title":{},"body":{"classes/LockUtil.html":{}}}],["nx",{"_index":276,"title":{},"body":{"classes/LockUtil.html":{}}}],["object",{"_index":127,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["ok",{"_index":278,"title":{},"body":{"classes/LockUtil.html":{}}}],["open",{"_index":368,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":146,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["orginalmessage",{"_index":75,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["overview",{"_index":395,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":304,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":47,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/functions.html":{}}}],["parseint(savedcount",{"_index":205,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["password",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":61,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["please",{"_index":378,"title":{},"body":{"index.html":{}}}],["port",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":156,"title":{},"body":{"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["process",{"_index":7,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["process.controller.ts",{"_index":35,"title":{},"body":{"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["process.controller.ts:16",{"_index":46,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["process.controller.ts:31",{"_index":53,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["process.env.env_files",{"_index":124,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["process.env.node_env",{"_index":122,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["process.module.ts",{"_index":98,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["process.service",{"_index":58,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["process.service.ts",{"_index":153,"title":{},"body":{"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["process.service.ts:13",{"_index":165,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process.service.ts:22",{"_index":171,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process.service.ts:25",{"_index":167,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process.service.ts:40",{"_index":174,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process.service.ts:78",{"_index":177,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process.service.ts:90",{"_index":180,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["process_queue",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["process_result_queue",{"_index":104,"title":{},"body":{"modules/LibraryProcessModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["processbook",{"_index":157,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["processbook(bookrequest",{"_index":173,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["processrequestedbook",{"_index":38,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["processrequestedbook(data",{"_index":40,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["processrequestedbook(request",{"_index":176,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["processreturnbook",{"_index":159,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["processreturnbook(request",{"_index":179,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["processreturnedbook",{"_index":39,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["processreturnedbook(data",{"_index":51,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["production",{"_index":358,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":334,"title":{},"body":{"index.html":{}}}],["project",{"_index":369,"title":{},"body":{"index.html":{}}}],["promise",{"_index":169,"title":{},"body":{"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["promise((resolve",{"_index":206,"title":{},"body":{"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"properties.html":{}}}],["provide",{"_index":130,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["public",{"_index":158,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["px",{"_index":277,"title":{},"body":{"classes/LockUtil.html":{}}}],["queue",{"_index":148,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["queue.constant.ts",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queueoptions",{"_index":149,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["read",{"_index":379,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":66,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["redis",{"_index":108,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"dependencies.html":{}}}],["redis://${host}:${port",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis://:${password}@${host}:${port",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_module",{"_index":128,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["redisclienttype",{"_index":107,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["redisconfig",{"_index":109,"title":{},"body":{"modules/LibraryProcessModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisconfig(configservice",{"_index":134,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["refkey",{"_index":247,"title":{},"body":{"classes/LockUtil.html":{}}}],["refkey(target",{"_index":261,"title":{},"body":{"classes/LockUtil.html":{}}}],["reflect",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":207,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["reject(new",{"_index":218,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["releaseexclusivelock",{"_index":248,"title":{},"body":{"classes/LockUtil.html":{}}}],["releaseexclusivelock(lockkey",{"_index":264,"title":{},"body":{"classes/LockUtil.html":{}}}],["repository",{"_index":347,"title":{},"body":{"index.html":{}}}],["request",{"_index":178,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["request.id",{"_index":240,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["request.interface",{"_index":19,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["request.interface.ts",{"_index":23,"title":{},"body":{"interfaces/BookRequestInterface.html":{},"coverage.html":{}}}],["request.requested_book",{"_index":239,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["requested",{"_index":198,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["requested_book",{"_index":26,"title":{},"body":{"interfaces/BookRequestInterface.html":{}}}],["requester_name",{"_index":27,"title":{},"body":{"interfaces/BookRequestInterface.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}],["resolve",{"_index":234,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["response",{"_index":214,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["result.interface.ts",{"_index":8,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"coverage.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":242,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["return",{"_index":139,"title":{},"body":{"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{}}}],["rmq_config",{"_index":110,"title":{},"body":{"modules/LibraryProcessModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rmqcontext",{"_index":42,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["run",{"_index":353,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":204,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["savedcount",{"_index":190,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["scalable",{"_index":339,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":223,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["server",{"_index":340,"title":{},"body":{"index.html":{}}}],["service",{"_index":215,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["settimeout(async",{"_index":224,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["settimeout(resolve",{"_index":272,"title":{},"body":{"classes/LockUtil.html":{}}}],["side",{"_index":341,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":211,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["simulatefailedstate",{"_index":208,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["sleep",{"_index":249,"title":{},"body":{"classes/LockUtil.html":{}}}],["sleep(millis",{"_index":266,"title":{},"body":{"classes/LockUtil.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"modules/LibraryProcessModule.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"index.html":{}}}],["sponsors",{"_index":372,"title":{},"body":{"index.html":{}}}],["src/.../amqp",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../node",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rabbit.config.ts",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../redis.config.ts",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/common/config/node",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/config/rabbit.config.ts",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/config/redis.config.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/amqp",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interfaces/book",{"_index":6,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"coverage.html":{}}}],["src/common/utils/lock.util.ts",{"_index":245,"title":{},"body":{"classes/LockUtil.html":{},"coverage.html":{}}}],["src/common/utils/lock.util.ts:12",{"_index":267,"title":{},"body":{"classes/LockUtil.html":{}}}],["src/common/utils/lock.util.ts:15",{"_index":262,"title":{},"body":{"classes/LockUtil.html":{}}}],["src/common/utils/lock.util.ts:19",{"_index":256,"title":{},"body":{"classes/LockUtil.html":{}}}],["src/common/utils/lock.util.ts:3",{"_index":251,"title":{},"body":{"classes/LockUtil.html":{}}}],["src/common/utils/lock.util.ts:36",{"_index":265,"title":{},"body":{"classes/LockUtil.html":{}}}],["src/core/library",{"_index":34,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"coverage.html":{}}}],["src/library",{"_index":97,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["src/main.ts",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":354,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":357,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":359,"title":{},"body":{"index.html":{}}}],["started",{"_index":333,"title":{"index.html":{}},"body":{}}],["starter",{"_index":346,"title":{},"body":{"index.html":{}}}],["statements",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":382,"title":{},"body":{"index.html":{}}}],["string",{"_index":29,"title":{},"body":{"interfaces/BookRequestInterface.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":373,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":393,"title":{},"body":{"modules.html":{}}}],["table",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":28,"title":{},"body":{"interfaces/BookRequestInterface.html":{}}}],["target",{"_index":263,"title":{},"body":{"classes/LockUtil.html":{}}}],["test",{"_index":362,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":365,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":364,"title":{},"body":{"index.html":{}}}],["tests",{"_index":361,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":371,"title":{},"body":{"index.html":{}}}],["this.amqpclient.emit('book.process.result",{"_index":231,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.appservice.processrequestedbook(data",{"_index":71,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["this.appservice.processreturnbook(data",{"_index":82,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["this.getexistscount(normalizedbookname",{"_index":227,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.getnormalizedbookname",{"_index":225,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.locker.acquireexclusivelock(normalizedbookname",{"_index":226,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.locker.releaseexclusivelock(normalizedbookname",{"_index":233,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.lockprefixkey",{"_index":271,"title":{},"body":{"classes/LockUtil.html":{}}}],["this.lockprefixkey}:${target}:ref",{"_index":273,"title":{},"body":{"classes/LockUtil.html":{}}}],["this.processbook(request",{"_index":236,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.redis",{"_index":270,"title":{},"body":{"classes/LockUtil.html":{}}}],["this.redis.decr(normalizedbookname",{"_index":229,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.redis.del(this.refkey(lockkey",{"_index":280,"title":{},"body":{"classes/LockUtil.html":{}}}],["this.redis.get(normalizedbookname",{"_index":191,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.redis.incr(this.getnormalizedbookname(request.requested_book",{"_index":243,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.redis.set(normalizedbookname",{"_index":196,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["this.redis.set(this.refkey(lockkey",{"_index":275,"title":{},"body":{"classes/LockUtil.html":{}}}],["this.sleep(50",{"_index":279,"title":{},"body":{"classes/LockUtil.html":{}}}],["time",{"_index":222,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["timeoutvalue",{"_index":220,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["touch",{"_index":383,"title":{},"body":{"index.html":{}}}],["transport",{"_index":113,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["transport.rmq",{"_index":145,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["true",{"_index":119,"title":{},"body":{"modules/LibraryProcessModule.html":{},"classes/LockUtil.html":{}}}],["trx",{"_index":274,"title":{},"body":{"classes/LockUtil.html":{}}}],["try",{"_index":69,"title":{},"body":{"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{}}}],["twitter",{"_index":389,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"controllers/LibraryProcessController.html":{},"injectables/LibraryProcessService.html":{},"classes/LockUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":345,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":212,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["unit",{"_index":360,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":400,"title":{},"body":{"properties.html":{}}}],["url",{"_index":133,"title":{},"body":{"modules/LibraryProcessModule.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":147,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["use",{"_index":203,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["usefactory",{"_index":131,"title":{},"body":{"modules/LibraryProcessModule.html":{}}}],["uuid",{"_index":183,"title":{},"body":{"injectables/LibraryProcessService.html":{},"dependencies.html":{}}}],["uuid_v4",{"_index":182,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["v4",{"_index":181,"title":{},"body":{"injectables/LibraryProcessService.html":{}}}],["value",{"_index":258,"title":{},"body":{"classes/LockUtil.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":401,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":398,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":355,"title":{},"body":{"index.html":{}}}],["website",{"_index":387,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":376,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/LibraryProcessModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BookProcessResultInterface.html":{"url":"interfaces/BookProcessResultInterface.html","title":"interface - BookProcessResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookProcessResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/book-process-result.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BookRequestInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exists:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BookRequestInterface } from './book-request.interface';\n\nexport interface BookProcessResultInterface extends BookRequestInterface {\n  exists: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookRequestInterface.html":{"url":"interfaces/BookRequestInterface.html","title":"interface - BookRequestInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookRequestInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/book-request.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            requested_book\n                                        \n                                \n                                \n                                        \n                                            requester_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requested_book\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requested_book:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requester_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requester_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BookRequestInterface {\n  requester_name: string;\n  requested_book: string;\n  tags?: Array;\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibraryProcessController.html":{"url":"controllers/LibraryProcessController.html","title":"controller - LibraryProcessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibraryProcessController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/library-process.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                processRequestedBook\n                            \n                            \n                                    \n                                    Async\n                                processReturnedBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processRequestedBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processRequestedBook(data: BookRequestInterface, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(book.request)\n                \n            \n\n                    \n                        \n                            Defined in src/core/library-process.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processReturnedBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processReturnedBook(data: BookRequestInterface, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(book.return)\n                \n            \n\n                    \n                        \n                            Defined in src/core/library-process.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger } from '@nestjs/common';\nimport { LibraryProcessService } from './library-process.service';\nimport {\n  Ctx,\n  MessagePattern,\n  Payload,\n  RmqContext,\n} from '@nestjs/microservices';\nimport { BookRequestInterface } from 'common/interfaces';\n\n@Controller()\nexport class LibraryProcessController {\n  constructor(private readonly appService: LibraryProcessService) {}\n\n  @MessagePattern(`book.request`)\n  async processRequestedBook(\n    @Payload() data: BookRequestInterface,\n    @Ctx() context: RmqContext,\n  ) {\n    try {\n      await this.appService.processRequestedBook(data);\n      const channel = context.getChannelRef();\n      const orginalMessage = context.getMessage();\n      channel.ack(orginalMessage);\n    } catch (error) {\n      Logger.error(error);\n    }\n  }\n\n  @MessagePattern(`book.return`)\n  async processReturnedBook(\n    @Payload() data: BookRequestInterface,\n    @Ctx() context: RmqContext,\n  ) {\n    try {\n      await this.appService.processReturnBook(data);\n      const channel = context.getChannelRef();\n      const orginalMessage = context.getMessage();\n      channel.ack(orginalMessage);\n    } catch (error) {\n      Logger.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryProcessModule.html":{"url":"modules/LibraryProcessModule.html","title":"module - LibraryProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    LibraryProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryProcessModule\n\n\n\ncluster_LibraryProcessModule_providers\n\n\n\n\nLibraryProcessService\n\nLibraryProcessService\n\n\n\nLibraryProcessModule\n\nLibraryProcessModule\n\nLibraryProcessModule -->\n\nLibraryProcessService->LibraryProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/library-process.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LibraryProcessService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LibraryProcessController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { LibraryProcessController, LibraryProcessService } from 'core';\nimport {\n  LIBRARY_REQUEST_SERVICE,\n  PROCESS_RESULT_QUEUE,\n} from 'common/constants';\nimport { createClient, RedisClientType } from 'redis';\nimport { RedisConfig, RMQ_CONFIG } from 'common/config';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { LockUtil } from 'common/utils';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env${\n        process.env.NODE_ENV ? '.' + process.env.NODE_ENV : ''\n      }`,\n      ignoreEnvFile: process.env.ENV_FILES\n        ? process.env.ENV_FILES !== 'true'\n        : false,\n    }),\n    {\n      global: true,\n      module: Object,\n      exports: ['REDIS_MODULE'],\n      providers: [\n        {\n          inject: [ConfigService],\n          provide: 'REDIS_MODULE',\n          useFactory: (configService: ConfigService) => {\n            const client = createClient({ url: RedisConfig(configService) });\n            if (!client.isReady) {\n              client\n                .connect()\n                .then()\n                .catch((reason) => {\n                  console.error(reason);\n                });\n            }\n            return client;\n          },\n        },\n      ],\n    },\n    {\n      global: true,\n      module: Object,\n      exports: ['LOCK_MODULE'],\n      providers: [\n        {\n          inject: ['REDIS_MODULE'],\n          provide: 'LOCK_MODULE',\n          useFactory: (redis: RedisClientType) => new LockUtil(redis, 'ExLock'),\n        },\n      ],\n    },\n    ClientsModule.register([\n      {\n        name: LIBRARY_REQUEST_SERVICE,\n        transport: Transport.RMQ,\n        options: {\n          urls: [RMQ_CONFIG()],\n          queue: PROCESS_RESULT_QUEUE,\n          queueOptions: {\n            durable: true,\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [LibraryProcessController],\n  providers: [LibraryProcessService],\n})\nexport class LibraryProcessModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryProcessService.html":{"url":"injectables/LibraryProcessService.html","title":"injectable - LibraryProcessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryProcessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/library-process.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getExistsCount\n                            \n                            \n                                getNormalizedBookName\n                            \n                            \n                                    Private\n                                processBook\n                            \n                            \n                                    Public\n                                    Async\n                                processRequestedBook\n                            \n                            \n                                    Async\n                                processReturnBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisClientType, locker: LockUtil, amqpClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/core/library-process.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    RedisClientType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locker\n                                                  \n                                                        \n                                                                        LockUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amqpClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getExistsCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getExistsCount(normalizedBookName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/library-process.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                normalizedBookName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNormalizedBookName\n                        \n                    \n                \n            \n            \n                \ngetNormalizedBookName(bookName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/library-process.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBook(bookRequest: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/library-process.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        processRequestedBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processRequestedBook(request: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/library-process.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processReturnBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processReturnBook(request: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/library-process.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport {\n  BookProcessResultInterface,\n  BookRequestInterface,\n} from 'common/interfaces';\nimport { LIBRARY_REQUEST_SERVICE } from 'common/constants';\nimport { RedisClientType } from 'redis';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { LockUtil } from 'common/utils';\nimport { v4 as uuid_v4 } from 'uuid';\n\n@Injectable()\nexport class LibraryProcessService {\n  constructor(\n    @Inject('REDIS_MODULE')\n    private readonly redis: RedisClientType,\n    @Inject('LOCK_MODULE')\n    private readonly locker: LockUtil,\n    @Inject(LIBRARY_REQUEST_SERVICE) private amqpClient: ClientProxy,\n  ) {}\n\n  getNormalizedBookName(bookName: string): string {\n    return bookName.toLowerCase().replace(/ /g, '_');\n  }\n  async getExistsCount(normalizedBookName: string): Promise {\n    const savedCount = await this.redis.get(normalizedBookName);\n    if (isNaN(parseInt(savedCount))) {\n      const existsCount = Math.floor(Math.random() * 3);\n      await this.redis.set(normalizedBookName, existsCount);\n      Logger.log(\n        `new book requested. mock exist count of book: there are ${existsCount} books for ${normalizedBookName}`,\n      );\n      return existsCount;\n    }\n    Logger.log(\n      `use saved book. there are ${savedCount} books for ${normalizedBookName}`,\n    );\n    return parseInt(savedCount);\n  }\n  private processBook(bookRequest: BookRequestInterface): Promise {\n    return new Promise((resolve, reject) => {\n      const simulateFailedState = Math.random() > 0.6;\n      if (simulateFailedState) {\n        Logger.log(\n          `Simulate unexpected Error. Failed to process book and no response from process service for book request: ${bookRequest.requested_book} with id: ${bookRequest.id}`,\n        );\n        return reject(new Error('Failed to process book'));\n      }\n      const timeoutValue = Math.floor(Math.random() * 60);\n      Logger.log(\n        `Simulate response time ${timeoutValue} seconds to process book request: ${bookRequest.requested_book} with id: ${bookRequest.id}`,\n      );\n\n      setTimeout(async () => {\n        const normalizedBookName = this.getNormalizedBookName(\n          bookRequest.requested_book,\n        );\n        try {\n          await this.locker.acquireExclusiveLock(normalizedBookName, uuid_v4());\n          const existsCount = await this.getExistsCount(normalizedBookName);\n          if (existsCount > 0) {\n            await this.redis.DECR(normalizedBookName);\n          }\n\n          const bookProcessResult: BookProcessResultInterface = {\n            ...bookRequest,\n            exists: existsCount > 0,\n          };\n          this.amqpClient.emit('book.process.result', bookProcessResult);\n        } finally {\n          await this.locker.releaseExclusiveLock(normalizedBookName);\n        }\n        resolve();\n      }, timeoutValue * 1000);\n    });\n  }\n\n  public async processRequestedBook(\n    request: BookRequestInterface,\n  ): Promise {\n    this.processBook(request)\n      .then()\n      .catch(async () => {\n        Logger.error(\n          `Failed to process book: ${request.requested_book} with id: ${request.id}. need retry from request service to process.`,\n        );\n      });\n  }\n\n  async processReturnBook(request: BookRequestInterface): Promise {\n    await this.redis.INCR(this.getNormalizedBookName(request.requested_book));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LockUtil.html":{"url":"classes/LockUtil.html","title":"class - LockUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LockUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/lock.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acquireExclusiveLock\n                            \n                            \n                                    Private\n                                refKey\n                            \n                            \n                                    Async\n                                releaseExclusiveLock\n                            \n                            \n                                    Private\n                                sleep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisClientType, lockPrefixKey: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/lock.util.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    RedisClientType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockPrefixKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acquireExclusiveLock\n                        \n                    \n                \n            \n            \n                \n                        \n                    acquireExclusiveLock(lockKey: string, lockValue: string, lockTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/utils/lock.util.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                lockKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                lockValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                lockTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    60000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    refKey(target: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/utils/lock.util.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseExclusiveLock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseExclusiveLock(lockKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/utils/lock.util.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lockKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sleep\n                        \n                    \n                \n            \n            \n                \n                        \n                    sleep(millis)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/utils/lock.util.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                millis\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RedisClientType } from 'redis';\n\nexport class LockUtil {\n  constructor(\n    private redis: RedisClientType,\n    private lockPrefixKey = 'ExRedisLock:',\n  ) {\n    this.redis = redis;\n    this.lockPrefixKey = lockPrefixKey;\n  }\n\n  private sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  private refKey(target: string) {\n    return `${this.lockPrefixKey}:${target}:ref`;\n  }\n\n  async acquireExclusiveLock(\n    lockKey: string,\n    lockValue: string,\n    lockTime = 60000,\n  ): Promise {\n    while (true) {\n      const trx = await this.redis.set(this.refKey(lockKey), lockValue, {\n        NX: true,\n        PX: lockTime,\n      });\n      if (!!trx && trx === 'OK') {\n        return true;\n      }\n      await this.sleep(50);\n    }\n  }\n\n  async releaseExclusiveLock(lockKey: string): Promise {\n    await this.redis.DEL(this.refKey(lockKey));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/config/node-env.config.ts\n            \n            function\n            NODE_ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/config/rabbit.config.ts\n            \n            function\n            RMQ_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/config/redis.config.ts\n            \n            variable\n            RedisConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/amqp-queue.constant.ts\n            \n            variable\n            LIBRARY_REQUEST_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/amqp-queue.constant.ts\n            \n            variable\n            PROCESS_QUEUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/amqp-queue.constant.ts\n            \n            variable\n            PROCESS_RESULT_QUEUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interfaces/book-process-result.interface.ts\n            \n            interface\n            BookProcessResultInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/book-request.interface.ts\n            \n            interface\n            BookRequestInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/utils/lock.util.ts\n            \n            class\n            LockUtil\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/library-process.controller.ts\n            \n            controller\n            LibraryProcessController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/library-process.service.ts\n            \n            injectable\n            LibraryProcessService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/microservices : ^10.3.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.3\n        \n            redis : ^4.6.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            NODE_ENV   (src/.../node-env.config.ts)\n                        \n                        \n                            RMQ_CONFIG   (src/.../rabbit.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/config/node-env.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NODE_ENV\n                        \n                    \n                \n            \n            \n                \nNODE_ENV(defenv: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defenv\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'development'\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/config/rabbit.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RMQ_CONFIG\n                        \n                    \n                \n            \n            \n                \nRMQ_CONFIG()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LibraryProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryProcessModule\n\n\n\ncluster_LibraryProcessModule_providers\n\n\n\n\nLibraryProcessService\n\nLibraryProcessService\n\n\n\nLibraryProcessModule\n\nLibraryProcessModule\n\nLibraryProcessModule -->\n\nLibraryProcessService->LibraryProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LIBRARY_REQUEST_SERVICE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            PROCESS_QUEUE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            PROCESS_RESULT_QUEUE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            RedisConfig   (src/.../redis.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/amqp-queue.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LIBRARY_REQUEST_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LIBRARY_REQUEST_SERVICE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROCESS_QUEUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'process_queue'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROCESS_RESULT_QUEUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'process_result_queue'\n                    \n                \n\n\n        \n    \n\n    src/common/config/redis.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RedisConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService: ConfigService): string => {\n  const password = configService.get('REDIS_PASS', '');\n  const host = configService.get('REDIS_HOST', 'localhost');\n  const port = configService.get('REDIS_PORT', 6379);\n\n  let url = null;\n  if (!password) {\n    url = `redis://${host}:${port}`;\n  } else {\n    url = `redis://:${password}@${host}:${port}`;\n  }\n  return url;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
