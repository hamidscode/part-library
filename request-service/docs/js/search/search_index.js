var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BaseEntity.html",[0,0.123,1,1.995]],["body/classes/BaseEntity.html",[0,0.134,1,2.878,2,0.883,3,0.298,4,0.266,5,0.266,6,3.247,7,2.878,8,5.671,9,0.175,10,1.322,11,2.78,12,3.839,13,1.888,14,2.779,15,3.839,16,0.638,17,4.299,18,3.226,19,0.718,20,5.059,21,0.513,22,0.024,23,0.401,24,0.337,25,0.366,26,3.247,27,3.67,28,3.821,29,1.322,30,3.821,31,2.665,32,3.821,33,0.53,34,1.439,35,2.587,36,1.872,37,0.298,38,3.821,39,3.821,40,3.821,41,2.136,42,3.821,43,3.821,44,3.821,45,3.821,46,3.821,47,3.821,48,3.821,49,0.017,50,0.017]],["title/classes/BaseFactory.html",[0,0.123,51,2.374]],["body/classes/BaseFactory.html",[0,0.105,1,1.708,2,0.694,3,0.235,4,0.209,5,0.209,9,0.138,13,1,16,0.716,18,3.409,19,0.659,21,0.774,22,0.024,23,0.604,24,0.309,25,0.551,27,1.708,29,1.306,33,0.524,35,2.032,36,1.471,37,0.235,41,2.052,49,0.014,50,0.014,51,2.901,52,2.551,53,0.99,54,2.356,55,2.901,56,3.641,57,4.246,58,3.641,59,2.551,60,3.1,61,3.966,62,3.002,63,3.641,64,3.641,65,4.631,66,3.002,67,3.368,68,1.26,69,2.936,70,3.641,71,3.002,72,2.551,73,3.368,74,3.002,75,3.641,76,3.002,77,1.855,78,1.708,79,0.834,80,1.581,81,2.551,82,3.217,83,1.427,84,1.919,85,1.708,86,4.285,87,3.002,88,2.138,89,3.002,90,1.814,91,3.002,92,3.002,93,3.002,94,3.002,95,4.285,96,3.002,97,2.551,98,1.471,99,4.285,100,3.002,101,3.217,102,3.002,103,3.002,104,3.002]],["title/interfaces/BaseMapper.html",[60,1.995,105,1.604]],["body/interfaces/BaseMapper.html",[3,0.344,4,0.307,5,0.307,9,0.202,10,1.449,18,2.505,19,0.634,21,0.745,22,0.023,23,0.581,24,0.325,25,0.609,37,0.344,49,0.018,50,0.018,53,1.282,60,3.154,67,4.204,68,1.282,85,2.505,105,2.014,106,2.721,107,3.742,108,5.413,109,4.711,110,4.711,111,4.711,112,4.403,113,6.564,114,4.711,115,4.403,116,4.163,117,1.466]],["title/classes/BaseRepository.html",[0,0.123,118,2.374]],["body/classes/BaseRepository.html",[0,0.095,1,1.553,2,0.631,3,0.213,4,0.19,5,0.19,9,0.125,13,1.577,16,0.668,19,0.663,21,0.779,22,0.024,23,0.608,24,0.311,25,0.555,29,1.516,33,0.582,36,1.338,37,0.213,49,0.013,50,0.013,53,0.925,54,2.373,59,2.32,60,2.966,61,3.703,63,3.4,68,1.283,69,3.123,73,3.703,78,1.553,79,0.758,80,1.438,81,2.32,83,1.332,84,1.848,88,2.375,90,1.848,101,3.004,118,2.708,119,2.32,120,3.4,121,3.757,122,4.024,123,3.4,124,3.4,125,2.73,126,3.4,127,2.73,128,3.4,129,2.73,130,2.32,131,3.222,132,2.73,133,3.4,134,3.4,135,2.73,136,3.4,137,2.73,138,1.687,139,1.848,140,2.32,141,0.966,142,1.605,143,2.73,144,3.757,145,2.73,146,2.05,147,2.73,148,4,149,4.735,150,2.73,151,4,152,4,153,2.73,154,2.73,155,2.73,156,2.73,157,2.73,158,2.73,159,2.73,160,2.73,161,2.73,162,2.73,163,2.05,164,2.73,165,2.73]],["title/classes/BaseSchema.html",[0,0.123,78,1.995]],["body/classes/BaseSchema.html",[0,0.132,2,0.874,3,0.295,4,0.263,5,0.263,9,0.287,10,1.312,14,2.764,19,0.687,22,0.024,24,0.352,25,0.48,27,3.877,29,0.988,31,2.646,33,0.527,35,2.558,36,1.852,37,0.295,41,1.891,49,0.016,50,0.016,78,2.857,97,4.793,98,2.945,101,4.235,166,3.212,167,5.64,168,5.022,169,3.779,170,3.209,171,4.793,172,3.659,173,3.779,174,3.4,175,3.4,176,2.857,177,3.779,178,3.779,179,5.108,180,2.15]],["title/interfaces/BookProcessResultInterface.html",[105,1.604,181,2.167]],["body/interfaces/BookProcessResultInterface.html",[3,0.384,4,0.343,5,0.343,7,3.377,9,0.226,10,1.551,22,0.023,24,0.264,33,0.516,37,0.384,49,0.019,50,0.019,105,2.249,106,3.04,181,3.668,182,3.693,183,3.33,184,4.18,185,2.915,186,6.62,187,6.375,188,1.451,189,4.919]],["title/classes/BookRequestDto.html",[0,0.123,190,2.374]],["body/classes/BookRequestDto.html",[0,0.173,2,0.857,3,0.29,4,0.259,5,0.259,9,0.17,10,1.296,14,2.738,19,0.639,22,0.023,24,0.343,25,0.474,29,1.757,31,2.612,33,0.52,37,0.29,49,0.016,50,0.016,98,3.046,170,3.178,174,2.511,175,4.331,176,2.821,190,3.357,191,5.069,192,3.151,193,3.453,194,3.453,195,5.587,196,4.804,197,4.959,198,3.708,199,3.708,200,4.214,201,3.708,202,3.708,203,3.708,204,3.708,205,3.708,206,3.708,207,4.959,208,5.587,209,4.959,210,5.965,211,3.151,212,5.965,213,2.785,214,3.151,215,3.708,216,3.151,217,3.708,218,3.151,219,3.708]],["title/classes/BookRequestEntity.html",[0,0.123,220,0.917]],["body/classes/BookRequestEntity.html",[0,0.116,1,3.612,2,0.769,3,0.26,4,0.232,5,0.232,7,2.62,9,0.153,10,1.203,11,2.825,12,3.118,13,1.533,14,2.256,15,3.118,16,0.555,17,3.913,18,3.005,19,0.761,21,0.447,22,0.023,23,0.349,24,0.357,25,0.318,26,2.826,27,3.523,29,1.565,31,1.752,33,0.483,37,0.26,49,0.015,50,0.015,141,1.177,220,1.203,221,5.395,222,2.826,223,3.005,224,2.783,225,3.966,226,3.966,227,2.26,228,4.605,229,3.326,230,3.326,231,3.326,232,1.87,233,3.326,234,4.281,235,3.326,236,3.326,237,3.326,238,3.326,239,3.326,240,3.326,241,3.326,242,3.326,243,3.326,244,3.326,245,3.326,246,3.326,247,1.892,248,3.326,249,3.326,250,3.326,251,3.326]],["title/injectables/BookRequestFactory.html",[252,0.974,253,1.718]],["body/injectables/BookRequestFactory.html",[0,0.118,3,0.264,4,0.235,5,0.235,7,2.646,9,0.155,13,1.124,16,0.777,18,3.263,19,0.688,21,0.808,22,0.024,23,0.631,24,0.323,25,0.576,29,1.216,33,0.652,36,1.654,37,0.264,49,0.015,50,0.015,51,4.315,53,1.075,54,2.299,55,3.149,56,3.953,57,3.953,58,3.953,61,3.545,64,2.868,65,3.953,67,3.289,68,1.326,69,2.608,70,2.868,72,2.868,73,2.874,75,2.868,77,2.085,79,0.937,80,1.778,82,2.534,83,1.124,142,1.354,180,1.92,220,0.882,234,4.308,252,1.292,253,2.279,254,1.543,255,3.953,256,2.868,257,2.868,258,2.845,259,4.875,260,3.374,261,3.374,262,3.374,263,3.374,264,3.374,265,0.995,266,2.868,267,1.92,268,3.374,269,2.868,270,2.868]],["title/interfaces/BookRequestInterface.html",[105,1.604,185,1.604]],["body/interfaces/BookRequestInterface.html",[3,0.359,4,0.32,5,0.32,9,0.211,10,1.488,13,2.153,14,3.168,22,0.023,24,0.347,25,0.619,29,1.828,31,3.258,37,0.359,49,0.019,50,0.019,105,2.1,106,2.838,182,3.449,185,2.603,193,3.996,194,3.996,271,3.903]],["title/injectables/BookRequestMapper.html",[252,0.974,258,1.604]],["body/injectables/BookRequestMapper.html",[0,0.107,3,0.24,4,0.214,5,0.214,9,0.141,11,2.49,12,2.077,13,1.022,14,2.133,15,2.077,16,0.845,19,0.629,21,0.679,22,0.024,23,0.53,24,0.271,25,0.484,33,0.633,35,2.077,36,1.503,37,0.24,41,2.073,49,0.014,50,0.014,53,1.006,60,2.476,67,1.896,68,1.169,79,0.852,84,1.022,85,3.131,90,1.832,108,4.298,109,3.698,110,3.698,111,3.698,114,3.698,117,1.449,141,1.086,185,2.517,220,1.71,223,2.476,224,2.293,225,2.304,226,2.304,227,1.862,232,1.086,247,1.745,252,1.208,254,1.403,258,1.99,265,0.905,267,3.531,272,4.938,273,2.607,274,4.298,275,3.068,276,3.068,277,3.068,278,3.068,279,3.068,280,3.068,281,1.616,282,1.616,283,3.068,284,3.068,285,4.352,286,3.068,287,4.352,288,3.068,289,4.352,290,3.068,291,4.352,292,3.068,293,4.352,294,3.068,295,4.352,296,3.068,297,4.352,298,3.068,299,4.352,300,3.068,301,3.068,302,3.068,303,2.607,304,3.068]],["title/injectables/BookRequestRepository.html",[252,0.974,305,1.718]],["body/injectables/BookRequestRepository.html",[0,0.079,3,0.177,4,0.158,5,0.158,7,1.979,9,0.104,13,1.158,16,0.581,19,0.681,21,0.8,22,0.024,23,0.625,24,0.319,25,0.57,29,1.71,33,0.609,36,1.11,37,0.177,49,0.011,50,0.011,53,0.804,54,2.362,61,2.935,68,1.343,69,3.032,73,3.591,79,0.629,80,1.194,82,1.702,83,0.755,84,1.41,90,1.41,118,3.934,120,2.956,121,2.355,122,2.956,123,2.956,124,2.956,126,1.926,128,1.926,130,1.926,131,2.15,133,1.926,134,1.926,136,1.926,138,1.4,139,1.534,141,0.802,142,0.909,172,1.979,180,1.289,220,0.592,223,3.076,224,2.966,227,2.192,232,1.681,234,3.847,252,0.966,254,1.036,257,1.926,258,2.473,259,4.036,265,0.668,266,1.926,267,1.289,269,1.926,270,1.926,305,1.705,306,4.354,307,1.926,308,4.234,309,4.234,310,4.234,311,2.266,312,2.266,313,3.934,314,3.591,315,3.934,316,2.266,317,2.15,318,4.036,319,4.749,320,2.266,321,2.266,322,2.266,323,2.266,324,1.702,325,2.266,326,2.266,327,2.266,328,2.266,329,2.266,330,2.266,331,3.479,332,3.479,333,3.479,334,2.266,335,1.926,336,2.266,337,2.266]],["title/injectables/BookRequestRetryJob.html",[252,0.974,338,1.995]],["body/injectables/BookRequestRetryJob.html",[0,0.097,3,0.216,4,0.193,5,0.193,9,0.127,13,1.344,16,0.674,19,0.545,21,0.64,22,0.024,23,0.5,24,0.256,25,0.456,33,0.659,34,1.04,37,0.216,41,1.52,49,0.013,50,0.013,53,0.933,54,2.062,68,0.933,79,0.767,83,1.746,84,1.587,88,2.492,98,1.354,117,2.003,141,0.978,142,2.103,146,3.03,170,2.296,183,1.87,185,1.263,188,0.815,220,0.722,232,0.978,252,1.121,254,1.263,265,0.815,281,1.455,303,2.348,338,2.296,339,4.456,340,2.348,341,4.035,342,4.035,343,2.763,344,2.663,345,4.516,346,4.516,347,3.58,348,3.55,349,2.763,350,4.035,351,6.289,352,4.035,353,2.763,354,4.035,355,4.035,356,2.763,357,2.074,358,1.572,359,1.87,360,2.763,361,2.296,362,2.126,363,1.455,364,2.074,365,2.763,366,1.707,367,1.87,368,1.707,369,2.763,370,2.074,371,4.035,372,2.763,373,2.04,374,2.074,375,4.035,376,2.074,377,2.074,378,2.763,379,2.763,380,2.763,381,2.763,382,3.429,383,4.035,384,2.763,385,2.763,386,2.763,387,2.348,388,4.035,389,3.429,390,4.035,391,3.429,392,2.074,393,2.763,394,2.348,395,2.763]],["title/classes/BookRequestSchema.html",[0,0.123,267,1.995]],["body/classes/BookRequestSchema.html",[0,0.11,2,0.727,3,0.246,4,0.219,5,0.219,7,1.789,9,0.269,10,1.157,13,1.047,19,0.696,22,0.024,24,0.352,27,3.631,29,1.719,33,0.538,37,0.246,49,0.015,50,0.015,53,1.024,68,0.727,78,2.519,84,1.047,85,3.165,90,1.047,98,3.258,141,1.113,170,3.336,171,4.984,172,2.519,174,2.129,175,4.452,176,3.631,179,5.17,180,1.789,193,3.168,194,3.168,227,2.193,232,2.076,247,1.789,267,2.519,274,4.356,396,5.312,397,2.673,398,5.126,399,5.126,400,5.564,401,5.564,402,3.145,403,3.145,404,3.145,405,3.145,406,3.763,407,3.145,408,3.145,409,3.145,410,3.145,411,3.145]],["title/injectables/BookRequestUseCase.html",[252,0.974,412,1.847]],["body/injectables/BookRequestUseCase.html",[0,0.084,3,0.188,4,0.168,5,0.168,9,0.111,13,1.215,16,0.609,19,0.561,21,0.659,22,0.024,23,0.514,24,0.263,25,0.469,29,1.448,33,0.668,34,0.908,37,0.188,41,2.167,49,0.012,50,0.012,53,0.843,54,2.147,68,1.017,77,2.719,79,0.67,83,1.633,84,1.754,88,2.371,90,1.465,117,1.633,138,1.491,139,1.633,141,0.854,142,1.967,176,1.372,183,1.633,185,2.243,188,0.711,193,2.254,194,2.254,220,0.63,224,1.271,232,0.854,247,1.372,252,1.013,254,1.103,258,1.103,265,0.711,281,1.271,344,2.631,345,4.161,346,4.321,347,3.303,348,3.32,358,1.372,359,1.633,362,2.584,363,1.271,364,1.811,366,1.491,367,1.633,370,1.811,373,1.561,374,3.303,376,1.811,382,2.05,387,2.05,389,3.1,391,3.1,392,1.811,394,2.05,412,1.922,413,3.566,414,3.955,415,4.476,416,1.811,417,3.1,418,3.1,419,3.648,420,2.05,421,2.412,422,3.648,423,2.412,424,3.1,425,2.412,426,3.648,427,2.412,428,3.648,429,1.372,430,2.254,431,1.491,432,2.05,433,1.633,434,3.648,435,3.1,436,3.1,437,1.633,438,2.719,439,3.648,440,3.648,441,1.633,442,3.648,443,2.412,444,1.633,445,3.648,446,2.412,447,3.1,448,2.412,449,2.412,450,3.648,451,3.1,452,2.412,453,2.412,454,2.412,455,2.412,456,2.05,457,3.1,458,2.412]],["title/injectables/BookReservationUseCase.html",[252,0.974,459,1.718]],["body/injectables/BookReservationUseCase.html",[0,0.098,3,0.218,4,0.195,5,0.195,9,0.128,13,1.756,14,1.37,16,0.68,19,0.549,21,0.645,22,0.024,23,0.503,24,0.257,25,0.459,29,1.255,33,0.672,34,1.053,37,0.218,41,2.111,49,0.013,50,0.013,53,0.941,54,2.07,68,0.941,77,1.728,79,0.776,83,1.756,84,1.598,88,2.398,90,0.931,141,0.99,142,2.115,144,2.756,176,1.591,181,3.259,193,1.728,194,1.728,220,0.731,232,0.99,252,1.13,254,1.279,265,0.825,281,1.473,344,2.761,345,4.392,346,4.533,347,3.605,348,3.57,358,1.591,361,2.316,362,2.529,363,1.473,364,2.1,366,1.728,367,1.893,370,2.1,373,2.398,374,3.057,376,3.057,377,2.1,413,3.57,414,3.959,416,2.1,420,2.376,432,2.376,433,1.893,437,1.893,438,1.728,456,2.376,459,1.995,460,4.481,461,4.071,462,3.46,463,2.796,464,4.071,465,2.796,466,2.796,467,3.46,468,2.796,469,2.796,470,1.893,471,2.796,472,2.796,473,2.756,474,2.796,475,4.08,476,2.796,477,2.796,478,2.796,479,2.1,480,2.376,481,2.796,482,2.796,483,2.796,484,2.796,485,2.796]],["title/classes/ChangeBookRequestStatusCommand.html",[0,0.123,361,1.995]],["body/classes/ChangeBookRequestStatusCommand.html",[0,0.135,2,0.891,3,0.301,4,0.269,5,0.269,9,0.177,10,1.329,11,2.717,16,0.849,19,0.693,21,0.517,22,0.023,23,0.404,24,0.305,25,0.369,33,0.533,37,0.301,49,0.017,50,0.017,79,1.07,98,2.492,117,2.277,141,1.364,172,2.192,188,2.017,220,1.77,227,2.694,232,2.229,317,2.381,361,2.894,486,4.728,487,3.891,488,3.274,489,5.351,490,2.608,491,3.853,492,3.853,493,3.853,494,3.853]],["title/classes/ChangeBookRequestStatusEvent.html",[0,0.123,495,2.167]],["body/classes/ChangeBookRequestStatusEvent.html",[0,0.157,2,1.038,3,0.351,4,0.313,5,0.313,9,0.206,10,1.467,11,2.251,16,0.75,19,0.642,21,0.603,22,0.023,23,0.471,24,0.301,25,0.429,33,0.471,37,0.351,49,0.018,50,0.018,79,1.246,117,2.242,188,1.986,220,1.821,487,3.783,490,3.039,495,3.468,496,4.597,497,3.815,498,4.489,499,4.489,500,3.371]],["title/classes/ChangeBookRequestStatusEventHandler.html",[0,0.123,501,2.374]],["body/classes/ChangeBookRequestStatusEventHandler.html",[0,0.124,2,0.818,3,0.276,4,0.247,5,0.247,9,0.162,13,1.178,16,0.591,19,0.549,21,0.645,22,0.024,23,0.504,24,0.258,25,0.46,33,0.642,34,1.332,37,0.276,49,0.016,50,0.016,53,1.111,68,0.818,83,1.178,117,2.187,141,1.252,188,1.937,227,1.514,232,1.252,265,1.044,282,2.531,363,1.864,368,2.187,377,2.657,437,2.395,487,3.371,495,3.616,496,4.096,501,3.253,502,4.973,503,2.657,504,4.636,505,4.083,506,3.538,507,3.324,508,3.007,509,4.083,510,3.538,511,3.007,512,2.187,513,3.007,514,3.007,515,3.538,516,2.657,517,3.007,518,3.007,519,3.007,520,3.007,521,2.657,522,3.007,523,3.007,524,3.007,525,2.657,526,3.538,527,3.538,528,5.455,529,3.007,530,3.538,531,2.657,532,2.657,533,3.538,534,4.804,535,3.538]],["title/classes/ChangeBookRequestStatusHandler.html",[0,0.123,536,2.374]],["body/classes/ChangeBookRequestStatusHandler.html",[0,0.096,2,0.635,3,0.215,4,0.191,5,0.191,9,0.126,16,0.671,19,0.543,21,0.638,22,0.024,23,0.498,24,0.255,25,0.455,27,2.286,33,0.63,34,1.034,37,0.215,41,2.095,49,0.013,50,0.013,53,0.929,54,1.682,68,0.929,69,1.969,79,0.763,83,1.338,84,1.582,88,1.175,90,1.582,117,2.125,141,0.972,142,1.612,144,2.72,188,1.908,220,1.569,227,2.487,232,1.851,247,1.562,253,2.848,265,0.81,282,2.117,361,2.974,363,1.447,373,1.719,429,1.562,437,2.72,438,2.936,441,1.859,470,1.859,473,1.859,475,4.939,480,4.038,486,3.926,487,3.231,489,3.414,495,2.483,512,1.697,514,3.414,536,2.72,537,2.334,538,4.038,539,4.038,540,3.217,541,2.334,542,5.102,543,2.746,544,2.334,545,2.746,546,2.334,547,2.746,548,2.334,549,4.038,550,2.746,551,2.746,552,4.443,553,2.334,554,3.017,555,2.746,556,2.746,557,2.746,558,2.334,559,2.746,560,2.746,561,2.334]],["title/classes/CreateBookRequestCommand.html",[0,0.123,430,2.167]],["body/classes/CreateBookRequestCommand.html",[0,0.16,2,1.058,3,0.358,4,0.319,5,0.319,9,0.21,10,1.485,11,2.279,16,0.764,19,0.65,21,0.615,22,0.023,23,0.48,24,0.304,25,0.438,33,0.48,37,0.358,49,0.019,50,0.019,79,1.271,188,1.996,220,1.827,430,3.51,490,3.099,500,3.437,562,4.638,563,3.817,564,3.89,565,4.578,566,4.578]],["title/classes/CreateBookRequestEvent.html",[0,0.123,567,2.167]],["body/classes/CreateBookRequestEvent.html",[0,0.16,2,1.058,3,0.358,4,0.319,5,0.319,9,0.21,10,1.485,11,2.279,16,0.764,19,0.65,21,0.615,22,0.023,23,0.48,24,0.304,25,0.438,33,0.48,37,0.358,49,0.019,50,0.019,79,1.271,188,1.996,220,1.827,490,3.099,500,3.437,563,3.817,567,3.51,568,4.638,569,3.89,570,4.578,571,4.578]],["title/classes/CreateBookRequestEventHandler.html",[0,0.123,572,2.374]],["body/classes/CreateBookRequestEventHandler.html",[0,0.145,2,0.96,3,0.324,4,0.29,5,0.29,9,0.19,19,0.475,21,0.558,22,0.023,23,0.435,24,0.223,25,0.397,33,0.619,34,1.564,37,0.324,41,1.564,49,0.018,50,0.018,53,1.235,55,2.811,68,0.96,117,1.383,188,1.947,265,1.225,282,2.814,368,2.566,503,3.118,504,5.018,505,4.539,508,3.529,509,4.539,511,3.529,512,2.566,513,3.529,517,3.529,518,3.529,519,3.529,520,3.529,521,3.118,522,3.529,523,3.529,524,3.529,525,3.118,529,3.529,531,3.118,532,3.118,563,3.301,567,3.852,568,4.011,572,3.616,573,5.018,574,4.153,575,4.153,576,4.153]],["title/classes/CreateBookRequestHandler.html",[0,0.123,577,2.374]],["body/classes/CreateBookRequestHandler.html",[0,0.104,2,0.688,3,0.232,4,0.207,5,0.207,9,0.137,16,0.711,19,0.569,21,0.668,22,0.024,23,0.521,24,0.267,25,0.476,33,0.645,34,1.121,37,0.232,41,1.604,49,0.014,50,0.014,53,0.984,54,1.76,55,2.015,67,2.632,68,0.984,69,2.087,79,0.826,83,1.418,84,1.656,88,1.273,90,0.991,117,1.912,141,1.054,142,1.708,144,2.883,188,1.992,220,1.698,227,2.457,232,1.054,247,1.693,253,2.928,265,0.878,282,2.243,363,1.568,373,1.273,429,1.693,430,3.354,438,1.839,444,3.675,512,1.839,538,4.226,539,3.619,540,3.366,541,2.529,542,5.228,544,3.619,546,2.529,548,2.529,549,4.613,552,2.529,553,2.529,558,2.529,561,2.529,562,4.076,563,3.354,567,1.839,577,2.883,578,2.235,579,2.529,580,2.976,581,5.428,582,4.258,583,4.258,584,2.235,585,4.258,586,2.976,587,2.976,588,2.976,589,2.529,590,2.976,591,2.976,592,2.976,593,2.976,594,2.976]],["title/interfaces/FilterType.html",[105,1.604,131,2.167]],["body/interfaces/FilterType.html",[3,0.196,4,0.175,5,0.175,9,0.115,10,0.982,22,0.024,23,0.394,24,0.301,25,0.614,29,1.177,31,2.635,33,0.263,36,1.229,37,0.196,49,0.016,50,0.012,61,2.322,73,3.091,98,1.841,105,1.147,106,1.55,116,2.821,131,2.322,163,2.821,196,2.821,218,3.192,313,3.807,314,3.475,315,3.386,595,2.131,596,6.421,597,6.244,598,5.623,599,5.002,600,3.757,601,3.757,602,3.757,603,3.757,604,5.002,605,3.757,606,3.192,607,3.757,608,5.002,609,5.002,610,5.623,611,3.757,612,3.757,613,3.757,614,3.757,615,3.757,616,3.757,617,5.002,618,3.757,619,3.757,620,5.002,621,3.757,622,3.757,623,3.757,624,3.757,625,3.757,626,3.192,627,3.757,628,3.757,629,3.757,630,3.757,631,3.757,632,5.002,633,3.757,634,3.757,635,3.757,636,2.821,637,5.623,638,3.757,639,3.757,640,3.757,641,3.757,642,5.002,643,3.757,644,5.002,645,3.192,646,3.757,647,5.002,648,3.757,649,3.757,650,3.757,651,3.757,652,3.757]],["title/classes/GetAllBookRequestsHandler.html",[0,0.123,653,2.374]],["body/classes/GetAllBookRequestsHandler.html",[0,0.126,2,0.831,3,0.281,4,0.251,5,0.251,9,0.165,16,0.6,19,0.555,21,0.652,22,0.024,23,0.509,24,0.26,25,0.465,33,0.645,34,1.353,37,0.281,49,0.016,50,0.016,53,1.122,54,1.946,68,0.831,69,2.379,79,0.998,83,1.196,84,1.196,88,2.353,90,1.196,138,3,139,2.433,188,1.912,220,0.939,223,3.128,224,2.897,282,2.558,305,3.106,313,3.987,315,3.987,429,2.044,431,3.639,457,5.227,516,2.698,540,3.722,653,3.287,654,3.398,655,4.129,656,3.053,657,4.673,658,3.053,659,3.593,660,3.053,661,3.593,662,4.129,663,3.053,664,3.593,665,3.593,666,3.593,667,3.593,668,3.593]],["title/classes/GetAllBookRequestsQuery.html",[0,0.123,431,2.167]],["body/classes/GetAllBookRequestsQuery.html",[0,0.13,2,0.862,3,0.291,4,0.26,5,0.26,9,0.171,10,1.301,11,2.769,16,0.831,19,0.712,21,0.501,22,0.023,23,0.391,24,0.334,25,0.644,29,1.737,37,0.291,49,0.016,50,0.016,188,2.036,223,3.543,224,3.149,313,4.217,314,4.107,315,4.217,324,4.489,431,3.076,654,3.96,655,4.811,669,3.168,670,3.728,671,3.728,672,3.728,673,3.728,674,3.728,675,3.728]],["title/classes/GetBookRequestHandler.html",[0,0.123,676,2.374]],["body/classes/GetBookRequestHandler.html",[0,0.134,2,0.886,3,0.299,4,0.267,5,0.267,9,0.176,16,0.64,19,0.58,21,0.681,22,0.024,23,0.531,24,0.272,25,0.485,33,0.634,34,1.443,37,0.299,49,0.017,50,0.017,53,1.172,54,2.01,68,0.886,69,2.483,79,1.064,83,1.276,84,1.276,88,2.168,90,1.276,117,2.012,188,1.943,220,1.324,282,2.67,305,3.164,362,3.183,373,1.639,429,2.18,435,3.256,436,3.256,447,3.256,516,2.877,540,3.431,578,2.877,579,3.256,654,3.509,657,4.826,658,3.256,660,4.307,662,2.877,663,3.256,676,3.431,677,4.264,678,3.831,679,3.831,680,3.831,681,3.831,682,3.831,683,3.831,684,3.831]],["title/classes/GetBookRequestQuery.html",[0,0.123,362,1.847]],["body/classes/GetBookRequestQuery.html",[0,0.146,2,0.963,3,0.325,4,0.29,5,0.29,9,0.191,10,1.399,11,2.65,16,0.894,18,3.55,19,0.676,21,0.559,22,0.023,23,0.437,24,0.317,25,0.566,33,0.561,37,0.325,49,0.018,50,0.018,141,1.474,185,1.905,188,2.007,227,2.762,232,2.285,281,2.194,324,3.128,362,2.819,373,2.67,654,3.856,677,4.686,685,3.54,686,4.165,687,4.165,688,4.165,689,4.165]],["title/controllers/LibraryController.html",[690,2.167,691,2.167]],["body/controllers/LibraryController.html",[0,0.058,3,0.129,4,0.115,5,0.115,9,0.076,10,1.147,12,3.639,13,1.926,14,1.948,15,2.692,16,0.276,19,0.455,21,0.534,22,0.024,23,0.494,24,0.374,25,0.38,29,1.807,31,2.311,33,0.417,37,0.129,41,1.498,49,0.009,50,0.009,53,0.626,54,2.047,68,0.919,77,2.457,83,0.902,85,2.262,90,1.324,117,0.902,121,1.833,142,1.086,163,2.033,170,2.262,174,3.516,175,2.97,190,2.692,213,1.241,223,3.058,224,2.832,225,2.582,226,2.582,227,2.623,265,0.488,314,1.021,373,1.159,406,3.379,412,1.812,417,2.301,418,2.301,424,1.405,438,2.457,441,2.692,444,2.692,459,1.685,462,2.301,467,1.405,470,2.692,473,2.692,554,3.899,589,1.405,626,3.729,690,1.673,691,1.673,692,0.94,693,1.405,694,1.653,695,1.653,696,2.708,697,1.653,698,1.653,699,1.653,700,1.653,701,1.405,702,1.653,703,1.653,704,2.708,705,1.653,706,1.653,707,1.653,708,4.388,709,1.653,710,1.653,711,4.388,712,1.653,713,1.653,714,1.653,715,1.653,716,1.241,717,1.241,718,1.653,719,1.653,720,3.439,721,4.388,722,2.986,723,3.379,724,3.976,725,1.653,726,1.653,727,5.193,728,3.976,729,3.976,730,3.976,731,1.653,732,1.653,733,1.653,734,1.653,735,1.653,736,1.653,737,1.653,738,1.653,739,1.653]],["title/modules/LibraryModule.html",[740,2.633,741,2.374]],["body/modules/LibraryModule.html",[0,0.097,3,0.216,4,0.193,5,0.193,22,0.024,23,0.423,33,0.694,34,1.04,37,0.216,49,0.013,50,0.013,79,0.767,80,2.126,98,2.569,176,2.296,180,1.572,253,2.569,258,2.398,265,0.815,305,2.569,335,2.348,338,2.983,344,2.398,348,1.87,358,2.296,363,1.455,366,1.707,392,2.074,412,2.762,429,1.572,433,1.87,459,2.569,507,2.762,691,1.707,692,2.983,716,2.074,717,2.074,740,3.58,741,4.667,742,2.074,743,1.87,744,2.348,745,2.348,746,1.87,747,4.051,748,2.348,749,2.348,750,2.348,751,3.429,752,2.348,753,2.348,754,2.763,755,1.707,756,2.763,757,4.739,758,2.348,759,2.763,760,2.763,761,2.074,762,3.03,763,2.074,764,3.03,765,2.763,766,3.03,767,3.03,768,3.03,769,3.03,770,3.03,771,3.03,772,3.03,773,3.03,774,2.763,775,2.763,776,4.035,777,1.87,778,2.732,779,3.03,780,2.763,781,2.763,782,2.763,783,2.763,784,2.763,785,2.763,786,4.035,787,2.763,788,4.035,789,2.763,790,3.429,791,4.035,792,2.763,793,2.763,794,2.763,795,2.763,796,2.348,797,2.763,798,2.763,799,2.763,800,2.763,801,2.763,802,2.763,803,2.763,804,2.763]],["title/controllers/LibraryProcessController.html",[690,2.167,755,2.167]],["body/controllers/LibraryProcessController.html",[0,0.138,3,0.309,4,0.275,5,0.275,9,0.181,16,0.66,19,0.452,21,0.531,22,0.024,23,0.414,24,0.212,25,0.378,33,0.641,37,0.309,49,0.017,50,0.017,53,1.196,54,2.041,68,0.913,83,1.316,84,1.722,88,1.691,117,1.92,142,1.585,170,2.248,181,3.78,265,1.166,281,2.082,368,2.442,373,2.213,459,2.825,470,2.675,473,2.675,554,2.967,690,3.196,692,2.248,701,3.358,716,2.967,717,2.967,755,3.196,777,2.675,805,4.395,806,3.358,807,5.765,808,6.116,809,5.172,810,3.951,811,5.172,812,3.951,813,5.172,814,3.951,815,3.951,816,3.951,817,3.951,818,3.951,819,3.951,820,3.951]],["title/injectables/NoticeProxy.html",[252,0.974,507,1.847]],["body/injectables/NoticeProxy.html",[0,0.14,3,0.312,4,0.279,5,0.279,9,0.183,11,2.621,16,0.968,19,0.663,21,0.7,22,0.023,23,0.546,24,0.279,25,0.499,29,1.707,33,0.419,37,0.312,49,0.017,50,0.017,53,1.205,68,1.205,252,1.447,254,1.828,265,1.179,368,2.47,479,3.001,507,2.745,512,3.22,525,3.913,722,3.001,821,3.397,822,5.211,823,5.211,824,3.997,825,5.211,826,3.997,827,6.143,828,5.211,829,3.997,830,5.211,831,3.997,832,6.533,833,5.211,834,5.211,835,5.211,836,4.428,837,5.211]],["title/injectables/ProcessBookProxy.html",[252,0.974,344,1.604]],["body/injectables/ProcessBookProxy.html",[0,0.136,3,0.304,4,0.272,5,0.272,9,0.179,11,2.602,16,0.856,19,0.655,21,0.769,22,0.024,23,0.6,24,0.307,25,0.548,33,0.638,37,0.304,49,0.017,50,0.017,53,1.184,68,1.184,90,1.706,142,1.563,185,3.024,252,1.423,254,1.782,265,1.149,281,2.052,344,2.343,373,2.603,433,2.638,777,2.638,778,2.638,790,3.311,838,5.169,839,3.311,840,5.124,841,5.124,842,3.896,843,6.083,844,3.896,845,5.124,846,5.124,847,3.896,848,5.124,849,3.896,850,3.896,851,3.896,852,3.896]],["title/coverage.html",[853,3.586]],["body/coverage.html",[0,0.228,1,1.129,5,0.138,6,1.686,22,0.024,24,0.106,41,0.747,49,0.01,50,0.01,51,1.343,52,1.686,60,1.129,78,1.129,80,1.045,105,2.021,107,1.686,116,2.92,117,1.905,118,1.343,119,1.686,131,1.226,166,1.686,181,1.226,182,2.355,183,1.343,184,1.686,185,0.907,188,1.979,190,1.343,191,1.686,192,1.686,220,0.518,221,1.686,222,1.686,252,1.543,253,0.972,255,1.686,256,1.686,258,0.907,267,1.129,271,1.686,272,1.686,273,1.686,305,0.972,306,1.686,307,1.686,318,6.069,338,1.129,339,1.686,340,1.686,344,0.907,357,1.49,358,1.129,359,1.343,361,1.129,362,1.045,396,1.686,397,1.686,412,1.045,413,2.633,414,2.355,415,1.686,416,2.355,430,1.226,431,1.226,459,0.972,460,1.686,486,2.355,487,2.732,488,1.686,495,1.226,496,2.355,497,1.686,501,1.343,502,1.686,503,2.355,507,1.045,536,1.343,537,1.686,562,2.355,563,2.732,564,1.686,567,1.226,568,2.355,569,1.686,572,1.343,573,1.686,577,1.343,578,2.355,595,1.686,653,1.343,654,2.732,655,2.355,656,1.686,669,1.686,676,1.343,677,2.355,685,1.686,690,1.938,691,1.226,692,1.129,693,1.686,746,1.343,755,1.226,761,1.49,762,1.49,763,1.49,764,1.49,766,1.49,767,1.49,768,1.49,769,1.49,770,1.49,771,1.49,772,1.49,773,1.49,778,1.343,779,1.49,805,1.686,806,1.686,821,1.686,838,1.686,839,1.686,853,1.49,854,1.984,855,1.984,856,1.984,857,5.118,858,5.557,859,5.118,860,1.984,861,1.984,862,1.686,863,6.708,864,6.786,865,3.889,866,1.686,867,1.686,868,1.686,869,4.42,870,1.686,871,1.686,872,1.984,873,1.686,874,1.686,875,3.136,876,1.686,877,1.686,878,1.686,879,1.984,880,1.686,881,1.686,882,1.686,883,1.686,884,1.686,885,1.686,886,1.686,887,1.686,888,3.305,889,1.686,890,1.686,891,3.756,892,3.756,893,1.686,894,1.686,895,3.305,896,1.984,897,1.984,898,1.686,899,1.686,900,1.984,901,1.984]],["title/dependencies.html",[743,2.853,902,2.493]],["body/dependencies.html",[0,0.162,22,0.024,34,1.747,49,0.019,50,0.019,180,2.639,211,3.942,213,3.483,265,1.368,366,2.867,367,3.141,743,3.141,758,3.942,777,3.141,903,4.639,904,4.639,905,4.639,906,6.213,907,4.639,908,4.639,909,4.639,910,4.639,911,4.639,912,4.639,913,4.639,914,4.639,915,4.639,916,4.639,917,4.639,918,4.639,919,4.639,920,4.639,921,4.639,922,4.639,923,4.639,924,4.639,925,4.639,926,4.639]],["title/miscellaneous/enumerations.html",[927,1.438,928,3.582]],["body/miscellaneous/enumerations.html",[9,0.224,22,0.023,49,0.019,50,0.019,140,5.023,232,2.092,317,4.248,441,4.001,444,4.001,645,5.023,722,4.438,723,5.023,927,2.393,928,4.151,929,4.884,930,4.884,931,5.91,932,4.884,933,5.91,934,4.884]],["title/miscellaneous/functions.html",[636,3.165,927,1.438]],["body/miscellaneous/functions.html",[9,0.229,21,0.67,22,0.021,23,0.523,24,0.267,25,0.477,29,1.565,49,0.02,50,0.02,172,2.838,317,3.083,636,3.747,746,4.342,764,4.816,884,4.24,885,5.088,886,5.088,887,4.24,898,4.24,927,2.445,935,4.99,936,4.99,937,4.99,938,4.99,939,4.99,940,4.24]],["title/index.html",[9,0.135,941,2.934,942,2.934]],["body/index.html",[4,0.283,22,0.023,49,0.017,50,0.017,196,4.384,521,3.045,531,3.045,584,3.045,606,3.446,836,3.446,853,3.045,940,3.446,943,4.056,944,4.056,945,5.26,946,4.056,947,4.056,948,4.056,949,4.056,950,4.056,951,4.056,952,5.838,953,4.056,954,4.056,955,4.056,956,6.677,957,4.056,958,6.559,959,4.056,960,4.056,961,5.26,962,4.056,963,4.056,964,4.056,965,4.056,966,5.26,967,5.26,968,4.056,969,4.056,970,4.056,971,5.26,972,5.26,973,4.056,974,4.056,975,4.056,976,4.056,977,4.056,978,3.446,979,4.056,980,4.056,981,4.056,982,4.056,983,4.056,984,4.056,985,4.056,986,4.056,987,3.446,988,4.056,989,4.056,990,4.056,991,4.056,992,4.056,993,4.056,994,3.446]],["title/modules.html",[742,3.586]],["body/modules.html",[22,0.021,49,0.021,50,0.021,741,3.712,742,4.117,978,4.659,995,5.483,996,5.483,997,5.483]],["title/overview.html",[998,4.058]],["body/overview.html",[2,0.999,22,0.023,49,0.018,50,0.018,106,2.67,146,3.244,253,2.948,254,1.976,258,2.751,305,2.948,338,3.422,344,2.751,412,3.169,451,3.672,459,2.948,507,3.169,692,2.458,740,4.114,741,4.868,743,2.925,744,3.672,745,3.672,746,2.925,747,3.672,748,3.672,749,3.672,750,3.672,751,4.656,752,3.672,753,3.672,998,3.672,999,4.321,1000,4.321,1001,4.321]],["title/properties.html",[10,1.102,902,2.493]],["body/properties.html",[10,1.328,22,0.023,49,0.02,50,0.02,200,4.318,214,4.318,216,4.318,584,3.815,987,4.318,994,4.318,1002,5.081,1003,5.081,1004,5.081,1005,5.081,1006,6.052,1007,5.081,1008,5.081,1009,5.081,1010,5.081,1011,5.081,1012,5.081,1013,5.081,1014,5.081,1015,5.081]],["title/miscellaneous/typealiases.html",[927,1.438,1016,4.215]],["body/miscellaneous/typealiases.html",[9,0.237,22,0.02,24,0.349,49,0.02,50,0.02,121,4.41,138,3.781,927,2.536,1017,5.176,1018,6.119,1019,6.515,1020,6.119,1021,5.176,1022,6.119]],["title/miscellaneous/variables.html",[927,1.438,1023,3.582]],["body/miscellaneous/variables.html",[9,0.095,22,0.024,23,0.216,24,0.352,29,1.578,49,0.011,50,0.011,80,1.702,84,2.043,85,1.172,90,1.503,172,3.836,220,0.539,253,1.01,258,0.942,305,1.01,314,1.273,317,4.167,338,1.172,344,0.942,357,2.993,358,2.268,359,2.699,412,1.086,413,1.395,459,1.01,479,1.547,501,1.395,507,1.086,532,1.547,536,1.395,572,1.395,577,1.395,653,1.395,662,1.547,676,1.395,691,1.273,692,1.838,755,1.273,757,4.42,761,2.426,762,2.426,763,2.426,766,2.426,767,2.426,768,2.426,769,2.426,770,2.426,771,2.426,772,2.426,773,2.426,778,2.699,779,2.993,796,1.751,862,1.751,866,1.751,867,1.751,868,1.751,870,1.751,871,1.751,873,1.751,874,2.746,876,1.751,877,1.751,878,1.751,880,1.751,881,1.751,882,2.746,883,1.751,888,1.751,889,2.746,890,2.746,891,1.751,892,4.166,893,3.388,894,3.388,895,1.751,899,1.751,927,1.01,1023,1.751,1024,2.061,1025,6.137,1026,4.514,1027,2.061,1028,3.986,1029,3.986,1030,2.061,1031,2.061,1032,2.061,1033,3.231,1034,2.061,1035,5.924,1036,2.061,1037,2.061,1038,5.202,1039,2.061,1040,2.061,1041,2.061,1042,2.061,1043,5.79,1044,3.986,1045,2.061,1046,2.061,1047,2.061,1048,2.061,1049,2.061,1050,4.903,1051,2.061,1052,3.231,1053,3.231,1054,2.061,1055,2.061,1056,2.061,1057,2.061,1058,2.061,1059,4.514,1060,2.061,1061,2.061,1062,2.061,1063,2.061,1064,2.061]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"injectables/BookRequestRepository.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1003,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":146,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRetryJob.html":{},"overview.html":{}}}],["1/4",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":453,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["10.0.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":319,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["1000",{"_index":389,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{}}}],["120",{"_index":450,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["127.0.0.1:27017",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":388,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["19",{"_index":1000,"title":{},"body":{"overview.html":{}}}],["2",{"_index":451,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"overview.html":{}}}],["2023",{"_index":217,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["25",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":390,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["3.1.1",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1001,"title":{},"body":{"overview.html":{}}}],["4.1.14",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":393,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["5.4.0",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["6379",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":999,"title":{},"body":{"overview.html":{}}}],["85",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":101,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{}}}],["abstract",{"_index":81,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{}}}],["action",{"_index":651,"title":{},"body":{"interfaces/FilterType.html":{}}}],["aggregateroot",{"_index":8,"title":{},"body":{"classes/BaseEntity.html":{}}}],["alias",{"_index":612,"title":{},"body":{"interfaces/FilterType.html":{}}}],["aliases",{"_index":1017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.ts",{"_index":1019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":440,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["amazing",{"_index":979,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["amqpclient",{"_index":845,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["amqplib",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["apiproperty",{"_index":212,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["apiproperty({type",{"_index":195,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["apiresponse",{"_index":708,"title":{},"body":{"controllers/LibraryController.html":{}}}],["apitags",{"_index":707,"title":{},"body":{"controllers/LibraryController.html":{}}}],["apitags('library",{"_index":718,"title":{},"body":{"controllers/LibraryController.html":{}}}],["app",{"_index":836,"title":{},"body":{"injectables/NoticeProxy.html":{},"index.html":{}}}],["app_port",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/services",{"_index":363,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"modules/LibraryModule.html":{}}}],["application/services/proxies",{"_index":432,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["application/use",{"_index":716,"title":{},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{}}}],["applications",{"_index":951,"title":{},"body":{"index.html":{}}}],["array",{"_index":31,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"interfaces/BookRequestInterface.html":{},"interfaces/FilterType.html":{},"controllers/LibraryController.html":{}}}],["arrayminsize",{"_index":206,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["arrayminsize(0",{"_index":219,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["asc",{"_index":933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["association",{"_index":608,"title":{},"body":{"interfaces/FilterType.html":{}}}],["associations",{"_index":601,"title":{},"body":{"interfaces/FilterType.html":{}}}],["assumed",{"_index":529,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["async",{"_index":54,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["attempts",{"_index":382,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{}}}],["attribute",{"_index":620,"title":{},"body":{"interfaces/FilterType.html":{}}}],["author",{"_index":987,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authsource=admin",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":88,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryProcessController.html":{}}}],["backers",{"_index":980,"title":{},"body":{"index.html":{}}}],["backoff",{"_index":394,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{}}}],["badrequestexception",{"_index":549,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["base.entity",{"_index":239,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["base.factory",{"_index":268,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["base.mapper",{"_index":280,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["base.repository",{"_index":330,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["base.schema",{"_index":410,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["baseentity",{"_index":1,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"coverage.html":{}}}],["baseentity:5",{"_index":236,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["baseentity:6",{"_index":235,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["baseentity:7",{"_index":238,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["baseentity:8",{"_index":237,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["basefactory",{"_index":51,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{},"coverage.html":{}}}],["basefactory:14",{"_index":261,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["basefactory:22",{"_index":263,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["basefactory:39",{"_index":264,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["basefactory:43",{"_index":262,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["basemapper",{"_index":60,"title":{"interfaces/BaseMapper.html":{}},"body":{"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestMapper.html":{},"coverage.html":{}}}],["baserepository",{"_index":118,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{},"coverage.html":{}}}],["baserepository:16",{"_index":326,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["baserepository:20",{"_index":325,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["baserepository:26",{"_index":328,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["baserepository:32",{"_index":329,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["baserepository:38",{"_index":327,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["baseschema",{"_index":78,"title":{"classes/BaseSchema.html":{}},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestSchema.html":{},"coverage.html":{}}}],["body",{"_index":709,"title":{},"body":{"controllers/LibraryController.html":{}}}],["book",{"_index":188,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"coverage.html":{}}}],["book.proxy.ts",{"_index":839,"title":{},"body":{"injectables/ProcessBookProxy.html":{},"coverage.html":{}}}],["book.proxy.ts:12",{"_index":847,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["book.proxy.ts:16",{"_index":849,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["book.proxy.ts:7",{"_index":844,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["book/:id",{"_index":734,"title":{},"body":{"controllers/LibraryController.html":{}}}],["book/:id')@httpcode(httpstatus.ok)@apiresponse({schema",{"_index":705,"title":{},"body":{"controllers/LibraryController.html":{}}}],["book_requests",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookprocessresult",{"_index":466,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookprocessresult.exists",{"_index":476,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookprocessresult.id",{"_index":474,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookprocessresultinterface",{"_index":181,"title":{"interfaces/BookProcessResultInterface.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/BookReservationUseCase.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["bookrequest",{"_index":373,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/ProcessBookProxy.html":{}}}],["bookrequest.apply(bookrequestcreateevent",{"_index":594,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["bookrequest.apply(bookrequestrejectevent",{"_index":560,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["bookrequest.commit",{"_index":561,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["bookrequest.id",{"_index":447,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/GetBookRequestHandler.html":{}}}],["bookrequest.id.tostring",{"_index":482,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookrequest.requested_book",{"_index":435,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/GetBookRequestHandler.html":{}}}],["bookrequest.requestedbook",{"_index":483,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookrequest.requester_name",{"_index":436,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/GetBookRequestHandler.html":{}}}],["bookrequest.requestername",{"_index":484,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookrequest.tags",{"_index":485,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["bookrequestcreateevent",{"_index":592,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["bookrequestdto",{"_index":190,"title":{"classes/BookRequestDto.html":{}},"body":{"classes/BookRequestDto.html":{},"controllers/LibraryController.html":{},"coverage.html":{}}}],["bookrequestentity",{"_index":220,"title":{"classes/BookRequestEntity.html":{}},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookrequestentity.reservedat",{"_index":556,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["bookrequestentity.returnedat",{"_index":555,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["bookrequestentity.status",{"_index":552,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["bookrequestfactory",{"_index":253,"title":{"injectables/BookRequestFactory.html":{}},"body":{"injectables/BookRequestFactory.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bookrequestinterface",{"_index":185,"title":{"interfaces/BookRequestInterface.html":{}},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"classes/GetBookRequestQuery.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{}}}],["bookrequestmapper",{"_index":258,"title":{"injectables/BookRequestMapper.html":{}},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestUseCase.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bookrequestmapper.convertrequesttoentity(bookrequest",{"_index":446,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["bookrequestmodel",{"_index":259,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["bookrequestrejectevent",{"_index":559,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["bookrequestrepository",{"_index":305,"title":{"injectables/BookRequestRepository.html":{}},"body":{"injectables/BookRequestRepository.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bookrequestretryjob",{"_index":338,"title":{"injectables/BookRequestRetryJob.html":{}},"body":{"injectables/BookRequestRetryJob.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bookrequestschema",{"_index":267,"title":{"classes/BookRequestSchema.html":{}},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"coverage.html":{}}}],["bookrequestschema.getschema",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookrequestschema.name",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookrequestusecase",{"_index":412,"title":{"injectables/BookRequestUseCase.html":{}},"body":{"injectables/BookRequestUseCase.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bookreservationusecase",{"_index":459,"title":{"injectables/BookReservationUseCase.html":{}},"body":{"injectables/BookReservationUseCase.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":187,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["bootstrap",{"_index":746,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":997,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":995,"title":{},"body":{"modules.html":{}}}],["building",{"_index":946,"title":{},"body":{"index.html":{}}}],["bull",{"_index":367,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":780,"title":{},"body":{"modules/LibraryModule.html":{}}}],["bullmodule.forrootasync",{"_index":794,"title":{},"body":{"modules/LibraryModule.html":{}}}],["bullmodule.registerqueue",{"_index":799,"title":{},"body":{"modules/LibraryModule.html":{}}}],["case.ts",{"_index":416,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"coverage.html":{}}}],["case.ts:16",{"_index":463,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["case.ts:22",{"_index":421,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["case.ts:25",{"_index":465,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["case.ts:31",{"_index":427,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["case.ts:53",{"_index":468,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["case.ts:86",{"_index":425,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["case.ts:97",{"_index":423,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["cases",{"_index":717,"title":{},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{}}}],["cases/book",{"_index":414,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"coverage.html":{}}}],["cases/index.ts",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":473,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["change",{"_index":514,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["changebookrequeststatuscommand",{"_index":361,"title":{"classes/ChangeBookRequestStatusCommand.html":{}},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{}}}],["changebookrequeststatuscommand(bookrequest",{"_index":477,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["changebookrequeststatusevent",{"_index":495,"title":{"classes/ChangeBookRequestStatusEvent.html":{}},"body":{"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{}}}],["changebookrequeststatuseventhandler",{"_index":501,"title":{"classes/ChangeBookRequestStatusEventHandler.html":{}},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changebookrequeststatushandler",{"_index":536,"title":{"classes/ChangeBookRequestStatusHandler.html":{}},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":527,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["channel",{"_index":815,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["channel.ack(orginalmessage",{"_index":819,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["check",{"_index":585,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["checkbookrequeststatus",{"_index":539,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["checkbookrequeststatus(bookrequestentity",{"_index":544,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["checkexistbyid",{"_index":120,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["checkexistbyid(id",{"_index":126,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["checks",{"_index":581,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["class",{"_index":0,"title":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"overview.html":{}}}],["clientproxy",{"_index":843,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["clientsmodule",{"_index":775,"title":{},"body":{"modules/LibraryModule.html":{}}}],["clientsmodule.register",{"_index":800,"title":{},"body":{"modules/LibraryModule.html":{}}}],["cluster_librarymodule",{"_index":749,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_providers",{"_index":750,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["collection",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":642,"title":{},"body":{"interfaces/FilterType.html":{}}}],["columns",{"_index":635,"title":{},"body":{"interfaces/FilterType.html":{}}}],["commandbus",{"_index":345,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["commandhandler",{"_index":548,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["commandhandler(changebookrequeststatuscommand",{"_index":551,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["commandhandler(createbookrequestcommand",{"_index":588,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["commandhandlers",{"_index":768,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company!this",{"_index":1007,"title":{},"body":{"properties.html":{}}}],["company.it",{"_index":1009,"title":{},"body":{"properties.html":{}}}],["configmodule",{"_index":756,"title":{},"body":{"modules/LibraryModule.html":{}}}],["configmodule.forroot",{"_index":782,"title":{},"body":{"modules/LibraryModule.html":{}}}],["configservice",{"_index":757,"title":{},"body":{"modules/LibraryModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('mongo_db",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mongo_host",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mongo_pass",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mongo_query",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mongo_uri",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mongo_user",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis_host",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis_pass",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis_port",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":84,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryProcessController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["constructor(amqpclient",{"_index":842,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["constructor(bookrequest",{"_index":686,"title":{},"body":{"classes/GetBookRequestQuery.html":{}}}],["constructor(bookrequestentity",{"_index":490,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{}}}],["constructor(bookrequestfactory",{"_index":541,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["constructor(bookrequestmapper",{"_index":257,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["constructor(bookrequestrepository",{"_index":658,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["constructor(commandbus",{"_index":420,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["constructor(initial",{"_index":17,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BookRequestEntity.html":{}}}],["constructor(mapper",{"_index":59,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{}}}],["constructor(noticeproxy",{"_index":506,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["constructor(private",{"_index":516,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["constructor(processbookproxy",{"_index":343,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["constructor(public",{"_index":500,"title":{},"body":{"classes/ChangeBookRequestStatusEvent.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{}}}],["constructor(requestername",{"_index":670,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["context",{"_index":807,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["context.getchannelref",{"_index":816,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["context.getmessage",{"_index":818,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["controller",{"_index":690,"title":{"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}},"body":{"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["controllers",{"_index":692,"title":{},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["convertentitytoschema",{"_index":109,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{}}}],["convertentitytoschema(entity",{"_index":111,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{}}}],["convertrequesttoentity",{"_index":108,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{}}}],["convertrequesttoentity(request",{"_index":277,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["convertschematoentity",{"_index":110,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{}}}],["convertschematoentity(schema",{"_index":114,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{}}}],["count",{"_index":121,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{},"controllers/LibraryController.html":{},"miscellaneous/typealiases.html":{}}}],["count(where",{"_index":128,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["coverage",{"_index":853,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrsmodule",{"_index":774,"title":{},"body":{"modules/LibraryModule.html":{}}}],["cqrsmodule.forroot",{"_index":793,"title":{},"body":{"modules/LibraryModule.html":{}}}],["create",{"_index":55,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["create(entity",{"_index":64,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["createbookrequestcommand",{"_index":430,"title":{"classes/CreateBookRequestCommand.html":{}},"body":{"injectables/BookRequestUseCase.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestHandler.html":{},"coverage.html":{}}}],["createbookrequestevent",{"_index":567,"title":{"classes/CreateBookRequestEvent.html":{}},"body":{"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"coverage.html":{}}}],["createbookrequestevent(bookrequest",{"_index":593,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["createbookrequesteventhandler",{"_index":572,"title":{"classes/CreateBookRequestEventHandler.html":{}},"body":{"classes/CreateBookRequestEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createbookrequesthandler",{"_index":577,"title":{"classes/CreateBookRequestHandler.html":{}},"body":{"classes/CreateBookRequestHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":575,"title":{},"body":{"classes/CreateBookRequestEventHandler.html":{}}}],["created_at",{"_index":167,"title":{},"body":{"classes/BaseSchema.html":{}}}],["createdat",{"_index":12,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"controllers/LibraryController.html":{}}}],["ctx",{"_index":811,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["data",{"_index":95,"title":{},"body":{"classes/BaseFactory.html":{}}}],["database",{"_index":532,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":27,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseSchema.html":{},"classes/BookRequestEntity.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["declarations",{"_index":745,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["decorators",{"_index":170,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["default",{"_index":172,"title":{},"body":{"classes/BaseSchema.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultjoboptions",{"_index":797,"title":{},"body":{"modules/LibraryModule.html":{}}}],["defenv",{"_index":939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["delay",{"_index":387,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{}}}],["delete",{"_index":93,"title":{},"body":{"classes/BaseFactory.html":{}}}],["dependencies",{"_index":743,"title":{"dependencies.html":{}},"body":{"modules/LibraryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":645,"title":{},"body":{"interfaces/FilterType.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":584,"title":{},"body":{"classes/CreateBookRequestHandler.html":{},"index.html":{},"properties.html":{}}}],["destroyeone",{"_index":56,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["destroyeone(id",{"_index":70,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["developed",{"_index":1010,"title":{},"body":{"properties.html":{}}}],["development",{"_index":940,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["direction",{"_index":644,"title":{},"body":{"interfaces/FilterType.html":{}}}],["disable",{"_index":518,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["documentation",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["domain/models",{"_index":79,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"modules/LibraryModule.html":{}}}],["domain/services",{"_index":429,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"modules/LibraryModule.html":{}}}],["durable",{"_index":804,"title":{},"body":{"modules/LibraryModule.html":{}}}],["e2e",{"_index":968,"title":{},"body":{"index.html":{}}}],["each",{"_index":218,"title":{},"body":{"classes/BookRequestDto.html":{},"interfaces/FilterType.html":{}}}],["eager",{"_index":621,"title":{},"body":{"interfaces/FilterType.html":{}}}],["eagerly",{"_index":602,"title":{},"body":{"interfaces/FilterType.html":{}}}],["efficient",{"_index":947,"title":{},"body":{"index.html":{}}}],["eg",{"_index":615,"title":{},"body":{"interfaces/FilterType.html":{}}}],["element",{"_index":637,"title":{},"body":{"interfaces/FilterType.html":{}}}],["email",{"_index":833,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["entities",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":67,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"classes/CreateBookRequestHandler.html":{}}}],["entity.createdat",{"_index":296,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.requestedbook",{"_index":288,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.requestername",{"_index":286,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.reservedat",{"_index":292,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.returnedat",{"_index":294,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.status",{"_index":290,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.tags",{"_index":300,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entity.updatedat",{"_index":298,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["entitytype",{"_index":65,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["enum",{"_index":406,"title":{},"body":{"classes/BookRequestSchema.html":{},"controllers/LibraryController.html":{}}}],["enumerations",{"_index":928,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":785,"title":{},"body":{"modules/LibraryModule.html":{}}}],["env.config.ts",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envfilepath",{"_index":784,"title":{},"body":{"modules/LibraryModule.html":{}}}],["equal",{"_index":582,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["error",{"_index":554,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["error.message",{"_index":728,"title":{},"body":{"controllers/LibraryController.html":{}}}],["error.response",{"_index":727,"title":{},"body":{"controllers/LibraryController.html":{}}}],["error.status",{"_index":729,"title":{},"body":{"controllers/LibraryController.html":{}}}],["escaped",{"_index":632,"title":{},"body":{"interfaces/FilterType.html":{}}}],["eslint",{"_index":517,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["eslint/no",{"_index":522,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["etc",{"_index":837,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["evaluate",{"_index":1011,"title":{},"body":{"properties.html":{}}}],["event",{"_index":511,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["event.bookrequestentity.id",{"_index":526,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["event.bookrequestentity.requestername",{"_index":534,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["event.bookrequestentity.status",{"_index":528,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["eventpublisher",{"_index":542,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["events",{"_index":771,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventshandler",{"_index":513,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["eventshandler(changebookrequeststatusevent",{"_index":515,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["eventshandler(createbookrequestevent",{"_index":574,"title":{},"body":{"classes/CreateBookRequestEventHandler.html":{}}}],["example",{"_index":196,"title":{},"body":{"classes/BookRequestDto.html":{},"interfaces/FilterType.html":{},"index.html":{}}}],["execute",{"_index":540,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["execute(query",{"_index":660,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["execute(undefined",{"_index":546,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["exists",{"_index":186,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["exports",{"_index":748,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["express",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{}}}],["factories",{"_index":766,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":176,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{}}}],["filter",{"_index":133,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["filter.include",{"_index":157,"title":{},"body":{"classes/BaseRepository.html":{}}}],["filter.order",{"_index":152,"title":{},"body":{"classes/BaseRepository.html":{}}}],["filter.order.push(['_id",{"_index":153,"title":{},"body":{"classes/BaseRepository.html":{}}}],["filter.where",{"_index":151,"title":{},"body":{"classes/BaseRepository.html":{}}}],["filterquery",{"_index":73,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{}}}],["filtertype",{"_index":131,"title":{"interfaces/FilterType.html":{}},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{},"coverage.html":{}}}],["find(filter.where",{"_index":156,"title":{},"body":{"classes/BaseRepository.html":{}}}],["findall",{"_index":122,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findall(filter",{"_index":130,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findandcountall",{"_index":138,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestUseCase.html":{},"classes/GetAllBookRequestsHandler.html":{},"miscellaneous/typealiases.html":{}}}],["findbyrequestedbook",{"_index":308,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["findbyrequestedbook(requestedbook",{"_index":312,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["findbyrequestername",{"_index":309,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["findbyrequestername(requestername",{"_index":320,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["findone",{"_index":123,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findone(where",{"_index":134,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findonebyid",{"_index":124,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findonebyid(id",{"_index":136,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{}}}],["findonerequest",{"_index":310,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["findonerequest(requestedbook",{"_index":322,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["first",{"_index":641,"title":{},"body":{"interfaces/FilterType.html":{}}}],["found",{"_index":456,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["framework",{"_index":945,"title":{},"body":{"index.html":{}}}],["function",{"_index":116,"title":{},"body":{"interfaces/BaseMapper.html":{},"interfaces/FilterType.html":{},"coverage.html":{}}}],["functions",{"_index":636,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/FilterType.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":638,"title":{},"body":{"interfaces/FilterType.html":{}}}],["get('my",{"_index":696,"title":{},"body":{"controllers/LibraryController.html":{}}}],["get('request/:id",{"_index":731,"title":{},"body":{"controllers/LibraryController.html":{}}}],["get('request/:id')@httpcode(httpstatus.ok)@apiresponse({schema",{"_index":699,"title":{},"body":{"controllers/LibraryController.html":{}}}],["getallbookrequestshandler",{"_index":653,"title":{"classes/GetAllBookRequestsHandler.html":{}},"body":{"classes/GetAllBookRequestsHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getallbookrequestsquery",{"_index":431,"title":{"classes/GetAllBookRequestsQuery.html":{}},"body":{"injectables/BookRequestUseCase.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"coverage.html":{}}}],["getallbookrequestsquery(requestername",{"_index":458,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["getbookrequesthandler",{"_index":676,"title":{"classes/GetBookRequestHandler.html":{}},"body":{"classes/GetBookRequestHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getbookrequestquery",{"_index":362,"title":{"classes/GetBookRequestQuery.html":{}},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"coverage.html":{}}}],["getmyrequests",{"_index":417,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"controllers/LibraryController.html":{}}}],["getmyrequests(@param('name",{"_index":738,"title":{},"body":{"controllers/LibraryController.html":{}}}],["getmyrequests(name",{"_index":695,"title":{},"body":{"controllers/LibraryController.html":{}}}],["getmyrequests(requestername",{"_index":422,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["getrequestbyid",{"_index":418,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"controllers/LibraryController.html":{}}}],["getrequestbyid(@param('id",{"_index":732,"title":{},"body":{"controllers/LibraryController.html":{}}}],["getrequestbyid(id",{"_index":424,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"controllers/LibraryController.html":{}}}],["getschema",{"_index":400,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["getting",{"_index":941,"title":{"index.html":{}},"body":{}}],["given",{"_index":650,"title":{},"body":{"interfaces/FilterType.html":{}}}],["grow",{"_index":975,"title":{},"body":{"index.html":{}}}],["hamid",{"_index":200,"title":{},"body":{"classes/BookRequestDto.html":{},"properties.html":{}}}],["handle",{"_index":505,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["handle(event",{"_index":509,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["handler.ts",{"_index":503,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":508,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["handler.ts:13",{"_index":510,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["here",{"_index":984,"title":{},"body":{"index.html":{}}}],["host",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":710,"title":{},"body":{"controllers/LibraryController.html":{}}}],["httpcode(httpstatus.ok",{"_index":720,"title":{},"body":{"controllers/LibraryController.html":{}}}],["httpexception",{"_index":711,"title":{},"body":{"controllers/LibraryController.html":{}}}],["https://nestjs.com",{"_index":991,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":712,"title":{},"body":{"controllers/LibraryController.html":{}}}],["httpstatus.expectation_failed",{"_index":730,"title":{},"body":{"controllers/LibraryController.html":{}}}],["httpstatus.ok",{"_index":724,"title":{},"body":{"controllers/LibraryController.html":{}}}],["icommandhandler",{"_index":538,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["id",{"_index":13,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"controllers/LibraryController.html":{}}}],["identifier",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":504,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["ignoreenvfile",{"_index":787,"title":{},"body":{"modules/LibraryModule.html":{}}}],["implements",{"_index":282,"title":{},"body":{"injectables/BookRequestMapper.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["imports",{"_index":781,"title":{},"body":{"modules/LibraryModule.html":{}}}],["include",{"_index":596,"title":{},"body":{"interfaces/FilterType.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["infrastructure/config",{"_index":765,"title":{},"body":{"modules/LibraryModule.html":{}}}],["infrastructure/constants",{"_index":433,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{},"injectables/ProcessBookProxy.html":{}}}],["infrastructure/constants/bull.constant",{"_index":360,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["infrastructure/database",{"_index":139,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestUseCase.html":{},"classes/GetAllBookRequestsHandler.html":{}}}],["infrastructure/enum",{"_index":141,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{}}}],["infrastructure/interfaces",{"_index":281,"title":{},"body":{"injectables/BookRequestMapper.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryProcessController.html":{},"injectables/ProcessBookProxy.html":{}}}],["inherited",{"_index":234,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["initial",{"_index":26,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BookRequestEntity.html":{}}}],["initial?.createdat",{"_index":44,"title":{},"body":{"classes/BaseEntity.html":{}}}],["initial?.id",{"_index":40,"title":{},"body":{"classes/BaseEntity.html":{}}}],["initial?.requestedbook",{"_index":244,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["initial?.requestername",{"_index":242,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["initial?.reservedat",{"_index":249,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["initial?.returnedat",{"_index":251,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["initial?.status",{"_index":246,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["initial?.tags",{"_index":48,"title":{},"body":{"classes/BaseEntity.html":{}}}],["initial?.updatedat",{"_index":46,"title":{},"body":{"classes/BaseEntity.html":{}}}],["inject",{"_index":790,"title":{},"body":{"modules/LibraryModule.html":{},"injectables/ProcessBookProxy.html":{}}}],["inject(library_process_service",{"_index":850,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["injectable",{"_index":252,"title":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{}}}],["injectables",{"_index":254,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"overview.html":{}}}],["injectmodel",{"_index":266,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["injectmodel(bookrequestschema.name",{"_index":269,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["injectqueue",{"_index":364,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["injectqueue(request_failed_queue",{"_index":370,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["installation",{"_index":955,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":957,"title":{},"body":{"index.html":{}}}],["interface",{"_index":105,"title":{"interfaces/BaseMapper.html":{},"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"interfaces/FilterType.html":{}},"body":{"interfaces/BaseMapper.html":{},"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"interfaces/FilterType.html":{},"coverage.html":{}}}],["interfaces",{"_index":106,"title":{},"body":{"interfaces/BaseMapper.html":{},"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"interfaces/FilterType.html":{},"overview.html":{}}}],["ioutput",{"_index":1020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["iqueryhandler",{"_index":657,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["isarray",{"_index":207,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["isglobal",{"_index":783,"title":{},"body":{"modules/LibraryModule.html":{}}}],["isnotempty",{"_index":208,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["isoptional",{"_index":209,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["isstring",{"_index":210,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["items",{"_index":626,"title":{},"body":{"interfaces/FilterType.html":{},"controllers/LibraryController.html":{}}}],["job",{"_index":351,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["job.attemptsmade",{"_index":383,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["job.data",{"_index":371,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["job.opts.attempts",{"_index":385,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["job.retry",{"_index":395,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["jobid",{"_index":452,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["jobs",{"_index":772,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":606,"title":{},"body":{"interfaces/FilterType.html":{},"index.html":{}}}],["kamil",{"_index":988,"title":{},"body":{"index.html":{}}}],["knowledge",{"_index":1013,"title":{},"body":{"properties.html":{}}}],["left",{"_index":605,"title":{},"body":{"interfaces/FilterType.html":{}}}],["legend",{"_index":744,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["library",{"_index":1005,"title":{},"body":{"properties.html":{}}}],["library_process_service",{"_index":778,"title":{},"body":{"modules/LibraryModule.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["library_request_service",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["librarycontroller",{"_index":691,"title":{"controllers/LibraryController.html":{}},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["librarymodule",{"_index":741,"title":{"modules/LibraryModule.html":{}},"body":{"modules/LibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["libraryprocesscontroller",{"_index":755,"title":{"controllers/LibraryProcessController.html":{}},"body":{"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":994,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":972,"title":{},"body":{"index.html":{}}}],["limit",{"_index":315,"title":{},"body":{"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{}}}],["limit(filter.limit",{"_index":160,"title":{},"body":{"classes/BaseRepository.html":{}}}],["limits",{"_index":624,"title":{},"body":{"interfaces/FilterType.html":{}}}],["line",{"_index":520,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["list",{"_index":600,"title":{},"body":{"interfaces/FilterType.html":{}}}],["literal",{"_index":1022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":603,"title":{},"body":{"interfaces/FilterType.html":{}}}],["loading",{"_index":622,"title":{},"body":{"interfaces/FilterType.html":{}}}],["localhost",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":368,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{}}}],["logger.error",{"_index":378,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["logger.error(error",{"_index":820,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["logger.log",{"_index":525,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"injectables/NoticeProxy.html":{}}}],["manager",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["many",{"_index":625,"title":{},"body":{"interfaces/FilterType.html":{}}}],["mapper",{"_index":63,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{}}}],["mappers",{"_index":80,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mastering",{"_index":197,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["matched",{"_index":648,"title":{},"body":{"interfaces/FilterType.html":{}}}],["matching",{"_index":50,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messagepattern",{"_index":812,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["messagepattern('book.process.result",{"_index":809,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["metadata",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":53,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["minutes",{"_index":391,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{}}}],["miscellaneous",{"_index":927,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":971,"title":{},"body":{"index.html":{}}}],["mode",{"_index":961,"title":{},"body":{"index.html":{}}}],["model",{"_index":61,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{}}}],["model._id",{"_index":94,"title":{},"body":{"classes/BaseFactory.html":{}}}],["model1",{"_index":610,"title":{},"body":{"interfaces/FilterType.html":{}}}],["model2",{"_index":611,"title":{},"body":{"interfaces/FilterType.html":{}}}],["modeldefinition",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modeltype",{"_index":149,"title":{},"body":{"classes/BaseRepository.html":{}}}],["module",{"_index":740,"title":{"modules/LibraryModule.html":{}},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["modules",{"_index":742,"title":{"modules.html":{}},"body":{"modules/LibraryModule.html":{},"modules.html":{}}}],["mongoconfig",{"_index":762,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongodb://${host}/${database}?${query",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb://${username}:${password}@${host}/${database}?${query",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":36,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{}}}],["mongoosemodule",{"_index":760,"title":{},"body":{"modules/LibraryModule.html":{}}}],["mongoosemodule.forfeature(schemas",{"_index":792,"title":{},"body":{"modules/LibraryModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":789,"title":{},"body":{"modules/LibraryModule.html":{}}}],["mongoosemodulefactoryoptions",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monitor/express",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":983,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":989,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":618,"title":{},"body":{"interfaces/FilterType.html":{}}}],["nest",{"_index":952,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":993,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":215,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["nestjs'})@isstring()@isnotempty",{"_index":198,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["nestjs/bull",{"_index":366,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":265,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":758,"title":{},"body":{"modules/LibraryModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":34,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":777,"title":{},"body":{"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/ProcessBookProxy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":180,"title":{},"body":{"classes/BaseSchema.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":213,"title":{},"body":{"classes/BookRequestDto.html":{},"controllers/LibraryController.html":{},"dependencies.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseSchema.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{},"coverage.html":{}}}],["newrequest",{"_index":445,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["newrequest.id",{"_index":448,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["newstatus",{"_index":475,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["next",{"_index":519,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["node.js",{"_index":944,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["node_env(defenv",{"_index":938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nodejs/nestjs",{"_index":1012,"title":{},"body":{"properties.html":{}}}],["notacceptableexception",{"_index":428,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["notacceptableexception('book",{"_index":439,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["notfoundexception",{"_index":469,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["notfoundexception('book",{"_index":478,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["noticeproxy",{"_index":507,"title":{"injectables/NoticeProxy.html":{}},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"modules/LibraryModule.html":{},"injectables/NoticeProxy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["notification",{"_index":832,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["npm",{"_index":956,"title":{},"body":{"index.html":{}}}],["null",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":314,"title":{},"body":{"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsQuery.html":{},"controllers/LibraryController.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":721,"title":{},"body":{"controllers/LibraryController.html":{}}}],["open",{"_index":973,"title":{},"body":{"index.html":{}}}],["operation",{"_index":628,"title":{},"body":{"interfaces/FilterType.html":{}}}],["optional",{"_index":25,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":335,"title":{},"body":{"injectables/BookRequestRepository.html":{},"modules/LibraryModule.html":{}}}],["order",{"_index":597,"title":{},"body":{"interfaces/FilterType.html":{}}}],["orderenum",{"_index":140,"title":{},"body":{"classes/BaseRepository.html":{},"miscellaneous/enumerations.html":{}}}],["orderenum.desc",{"_index":154,"title":{},"body":{"classes/BaseRepository.html":{}}}],["ordering",{"_index":630,"title":{},"body":{"interfaces/FilterType.html":{}}}],["orginalmessage",{"_index":817,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["out",{"_index":753,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["overview",{"_index":998,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":902,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":589,"title":{},"body":{"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.redis_port",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":1006,"title":{},"body":{"properties.html":{}}}],["partial",{"_index":18,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"classes/GetBookRequestQuery.html":{}}}],["password",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":713,"title":{},"body":{"controllers/LibraryController.html":{}}}],["patch('/return",{"_index":704,"title":{},"body":{"controllers/LibraryController.html":{}}}],["payload",{"_index":813,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["pending",{"_index":444,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{},"miscellaneous/enumerations.html":{}}}],["pendingrequest",{"_index":442,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["please",{"_index":982,"title":{},"body":{"index.html":{}}}],["populate",{"_index":598,"title":{},"body":{"interfaces/FilterType.html":{}}}],["populate(filter.populate",{"_index":161,"title":{},"body":{"classes/BaseRepository.html":{}}}],["populateoptions",{"_index":647,"title":{},"body":{"interfaces/FilterType.html":{}}}],["port",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":714,"title":{},"body":{"controllers/LibraryController.html":{}}}],["post('/request",{"_index":719,"title":{},"body":{"controllers/LibraryController.html":{}}}],["post('/request')@httpcode(httpstatus.ok)@apiresponse({schema",{"_index":702,"title":{},"body":{"controllers/LibraryController.html":{}}}],["prefix",{"_index":694,"title":{},"body":{"controllers/LibraryController.html":{}}}],["presentation/controllers",{"_index":759,"title":{},"body":{"modules/LibraryModule.html":{}}}],["presentation/dtos",{"_index":715,"title":{},"body":{"controllers/LibraryController.html":{}}}],["private",{"_index":142,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/ProcessBookProxy.html":{}}}],["process",{"_index":183,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"coverage.html":{}}}],["process(remove_no_result_job",{"_index":352,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["process(retry_request_job",{"_index":355,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["process.controller.ts",{"_index":806,"title":{},"body":{"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["process.controller.ts:18",{"_index":810,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["process.env.env_files",{"_index":788,"title":{},"body":{"modules/LibraryModule.html":{}}}],["process.env.node_env",{"_index":786,"title":{},"body":{"modules/LibraryModule.html":{}}}],["process.env.port",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_pass",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process_queue",{"_index":779,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["process_result_queue",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["processbookproxy",{"_index":344,"title":{"injectables/ProcessBookProxy.html":{}},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["processing",{"_index":380,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processor",{"_index":365,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processor(request_failed_queue",{"_index":369,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processremovenoresultjob",{"_index":341,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processremovenoresultjob(job",{"_index":350,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processrequestbook",{"_index":840,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["processrequestbook(bookrequest",{"_index":846,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["processretryjob",{"_index":342,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processretryjob(job",{"_index":354,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["processreturnbook",{"_index":841,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["processreturnbook(bookrequest",{"_index":848,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["production",{"_index":963,"title":{},"body":{"index.html":{}}}],["programming",{"_index":216,"title":{},"body":{"classes/BookRequestDto.html":{},"properties.html":{}}}],["progressive",{"_index":943,"title":{},"body":{"index.html":{}}}],["project",{"_index":974,"title":{},"body":{"index.html":{}}}],["projectiontype",{"_index":599,"title":{},"body":{"interfaces/FilterType.html":{}}}],["promise",{"_index":69,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["prop",{"_index":179,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestSchema.html":{}}}],["prop({type",{"_index":171,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestSchema.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"interfaces/BaseMapper.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"interfaces/BookRequestInterface.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"properties.html":{}}}],["protected",{"_index":82,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["provide",{"_index":633,"title":{},"body":{"interfaces/FilterType.html":{}}}],["provided",{"_index":631,"title":{},"body":{"interfaces/FilterType.html":{}}}],["providers",{"_index":747,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["proxies",{"_index":769,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestQuery.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["push",{"_index":835,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["query",{"_index":662,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"miscellaneous/variables.html":{}}}],["query.bookrequest",{"_index":681,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["query.status",{"_index":684,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["querybus",{"_index":346,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["queryhandler",{"_index":663,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["queryhandler(getallbookrequestsquery",{"_index":665,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["queryhandler(getbookrequestquery",{"_index":680,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["queryhandlers",{"_index":770,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["queue",{"_index":348,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{}}}],["queue.constant.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["queueoptions",{"_index":803,"title":{},"body":{"modules/LibraryModule.html":{}}}],["read",{"_index":531,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"index.html":{}}}],["readonly",{"_index":83,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["redis",{"_index":795,"title":{},"body":{"modules/LibraryModule.html":{}}}],["redis://${host}:${port",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis://:${password}@${host}:${port",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_config",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redis_options",{"_index":763,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redis_options(configservice",{"_index":796,"title":{},"body":{"modules/LibraryModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":334,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["rejected",{"_index":722,"title":{},"body":{"controllers/LibraryController.html":{},"injectables/NoticeProxy.html":{},"miscellaneous/enumerations.html":{}}}],["remove",{"_index":472,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["remove_no_result_job",{"_index":357,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["removeoncomplete",{"_index":392,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"modules/LibraryModule.html":{}}}],["removeonfail",{"_index":798,"title":{},"body":{"modules/LibraryModule.html":{}}}],["repositories",{"_index":767,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":954,"title":{},"body":{"index.html":{}}}],["request",{"_index":117,"title":{},"body":{"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["request(@body",{"_index":725,"title":{},"body":{"controllers/LibraryController.html":{}}}],["request(bookrequest",{"_index":701,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["request.command",{"_index":587,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["request.command.ts",{"_index":564,"title":{},"body":{"classes/CreateBookRequestCommand.html":{},"coverage.html":{}}}],["request.command.ts:3",{"_index":565,"title":{},"body":{"classes/CreateBookRequestCommand.html":{}}}],["request.command.ts:4",{"_index":566,"title":{},"body":{"classes/CreateBookRequestCommand.html":{}}}],["request.dto.ts",{"_index":192,"title":{},"body":{"classes/BookRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:14",{"_index":202,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["request.dto.ts:19",{"_index":199,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["request.dto.ts:30",{"_index":205,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["request.entity.ts",{"_index":222,"title":{},"body":{"classes/BookRequestEntity.html":{},"coverage.html":{}}}],["request.entity.ts:5",{"_index":230,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["request.entity.ts:6",{"_index":229,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["request.entity.ts:7",{"_index":233,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["request.entity.ts:8",{"_index":231,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["request.entity.ts:9",{"_index":228,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["request.event",{"_index":573,"title":{},"body":{"classes/CreateBookRequestEventHandler.html":{},"coverage.html":{}}}],["request.event.ts",{"_index":569,"title":{},"body":{"classes/CreateBookRequestEvent.html":{},"coverage.html":{}}}],["request.event.ts:3",{"_index":570,"title":{},"body":{"classes/CreateBookRequestEvent.html":{}}}],["request.event.ts:4",{"_index":571,"title":{},"body":{"classes/CreateBookRequestEvent.html":{}}}],["request.factory.ts",{"_index":256,"title":{},"body":{"injectables/BookRequestFactory.html":{},"coverage.html":{}}}],["request.factory.ts:12",{"_index":260,"title":{},"body":{"injectables/BookRequestFactory.html":{}}}],["request.handler.ts",{"_index":578,"title":{},"body":{"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestHandler.html":{},"coverage.html":{}}}],["request.handler.ts:12",{"_index":579,"title":{},"body":{"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestHandler.html":{}}}],["request.handler.ts:23",{"_index":580,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["request.handler.ts:30",{"_index":586,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["request.handler.ts:9",{"_index":678,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["request.id",{"_index":375,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["request.interface",{"_index":189,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{}}}],["request.interface.ts",{"_index":271,"title":{},"body":{"interfaces/BookRequestInterface.html":{},"coverage.html":{}}}],["request.mapper.ts",{"_index":273,"title":{},"body":{"injectables/BookRequestMapper.html":{},"coverage.html":{}}}],["request.mapper.ts:11",{"_index":275,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.mapper.ts:14",{"_index":276,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.mapper.ts:30",{"_index":279,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.mapper.ts:46",{"_index":278,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.query",{"_index":679,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["request.query.ts",{"_index":685,"title":{},"body":{"classes/GetBookRequestQuery.html":{},"coverage.html":{}}}],["request.query.ts:4",{"_index":687,"title":{},"body":{"classes/GetBookRequestQuery.html":{}}}],["request.query.ts:6",{"_index":688,"title":{},"body":{"classes/GetBookRequestQuery.html":{}}}],["request.query.ts:7",{"_index":689,"title":{},"body":{"classes/GetBookRequestQuery.html":{}}}],["request.repository.ts",{"_index":307,"title":{},"body":{"injectables/BookRequestRepository.html":{},"coverage.html":{}}}],["request.repository.ts:14",{"_index":311,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["request.repository.ts:23",{"_index":321,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["request.repository.ts:38",{"_index":316,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["request.repository.ts:53",{"_index":323,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["request.requested_book",{"_index":303,"title":{},"body":{"injectables/BookRequestMapper.html":{},"injectables/BookRequestRetryJob.html":{}}}],["request.requester_name",{"_index":302,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.schema.ts",{"_index":397,"title":{},"body":{"classes/BookRequestSchema.html":{},"coverage.html":{}}}],["request.schema.ts:10",{"_index":403,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.schema.ts:13",{"_index":402,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.schema.ts:21",{"_index":407,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.schema.ts:24",{"_index":404,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.schema.ts:27",{"_index":405,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.schema.ts:29",{"_index":408,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["request.tags",{"_index":304,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["request.use",{"_index":415,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"coverage.html":{}}}],["request/create",{"_index":563,"title":{},"body":{"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"coverage.html":{}}}],["request/get",{"_index":677,"title":{},"body":{"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"coverage.html":{}}}],["request_failed_queue",{"_index":358,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":443,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["requested_book",{"_index":193,"title":{},"body":{"classes/BookRequestDto.html":{},"interfaces/BookRequestInterface.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["requestedbook",{"_index":223,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"controllers/LibraryController.html":{}}}],["requester",{"_index":827,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["requester_name",{"_index":194,"title":{},"body":{"classes/BookRequestDto.html":{},"interfaces/BookRequestInterface.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["requestername",{"_index":224,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestUseCase.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"controllers/LibraryController.html":{}}}],["requestonebook",{"_index":419,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["requestonebook(bookrequest",{"_index":426,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["requests",{"_index":457,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/GetAllBookRequestsHandler.html":{}}}],["requests.handler.ts",{"_index":656,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"coverage.html":{}}}],["requests.handler.ts:11",{"_index":659,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["requests.handler.ts:14",{"_index":661,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["requests.query",{"_index":664,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["requests.query.ts",{"_index":669,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{},"coverage.html":{}}}],["requests.query.ts:1",{"_index":671,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["requests.query.ts:3",{"_index":674,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["requests.query.ts:4",{"_index":673,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["requests.query.ts:5",{"_index":675,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["requests.query.ts:6",{"_index":672,"title":{},"body":{"classes/GetAllBookRequestsQuery.html":{}}}],["requests/:name",{"_index":737,"title":{},"body":{"controllers/LibraryController.html":{}}}],["requests/:name')@apiresponse({schema",{"_index":697,"title":{},"body":{"controllers/LibraryController.html":{}}}],["requests/get",{"_index":655,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"coverage.html":{}}}],["required",{"_index":175,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestSchema.html":{},"controllers/LibraryController.html":{}}}],["res",{"_index":87,"title":{},"body":{"classes/BaseFactory.html":{}}}],["reservation",{"_index":479,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"injectables/NoticeProxy.html":{},"miscellaneous/variables.html":{}}}],["reservation.use",{"_index":460,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"coverage.html":{}}}],["reservationstatusenum",{"_index":232,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"miscellaneous/enumerations.html":{}}}],["reservationstatusenum.pending",{"_index":247,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["reservationstatusenum.rejected",{"_index":377,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["reservationstatusenum.reserved",{"_index":437,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["reservationstatusenum.returned",{"_index":480,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["reserved",{"_index":441,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"controllers/LibraryController.html":{},"miscellaneous/enumerations.html":{}}}],["reserved_at",{"_index":398,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["reservedat",{"_index":225,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"controllers/LibraryController.html":{}}}],["reservedbook",{"_index":434,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["reserveonebook",{"_index":461,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["reserveonebook(bookprocessresult",{"_index":464,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["reset",{"_index":752,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["response",{"_index":379,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["result",{"_index":144,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["result.interface.ts",{"_index":184,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"coverage.html":{}}}],["result.map((x",{"_index":164,"title":{},"body":{"classes/BaseRepository.html":{}}}],["results",{"_index":49,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":627,"title":{},"body":{"interfaces/FilterType.html":{}}}],["retry.job.ts",{"_index":340,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"coverage.html":{}}}],["retry.job.ts:22",{"_index":349,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["retry.job.ts:32",{"_index":353,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["retry.job.ts:55",{"_index":356,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["retry_request_job",{"_index":359,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["retrying",{"_index":381,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["retryqueue",{"_index":347,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["return",{"_index":90,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"injectables/ProcessBookProxy.html":{},"miscellaneous/variables.html":{}}}],["returnbook",{"_index":462,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"controllers/LibraryController.html":{}}}],["returnbook(@param('id",{"_index":735,"title":{},"body":{"controllers/LibraryController.html":{}}}],["returnbook(id",{"_index":467,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"controllers/LibraryController.html":{}}}],["returned",{"_index":723,"title":{},"body":{"controllers/LibraryController.html":{},"miscellaneous/enumerations.html":{}}}],["returned_at",{"_index":399,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["returnedat",{"_index":226,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"controllers/LibraryController.html":{}}}],["returns",{"_index":68,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetBookRequestHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{}}}],["rmq_config",{"_index":764,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rmqcontext",{"_index":808,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["rows",{"_index":163,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/FilterType.html":{},"controllers/LibraryController.html":{}}}],["run",{"_index":958,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":948,"title":{},"body":{"index.html":{}}}],["schema",{"_index":85,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"injectables/BookRequestMapper.html":{},"classes/BookRequestSchema.html":{},"controllers/LibraryController.html":{},"miscellaneous/variables.html":{}}}],["schema._id",{"_index":283,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema._id.tostring",{"_index":301,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.created_at",{"_index":295,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.requested_book",{"_index":287,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.requester_name",{"_index":285,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.reserved_at",{"_index":291,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.returned_at",{"_index":293,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.status",{"_index":289,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.tags",{"_index":299,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schema.updated_at",{"_index":297,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["schemafactory",{"_index":409,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["schemafactory.createforclass(this",{"_index":411,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["schemas",{"_index":761,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":113,"title":{},"body":{"interfaces/BaseMapper.html":{}}}],["schemetype",{"_index":92,"title":{},"body":{"classes/BaseFactory.html":{}}}],["second",{"_index":643,"title":{},"body":{"interfaces/FilterType.html":{}}}],["sekandari",{"_index":214,"title":{},"body":{"classes/BookRequestDto.html":{},"properties.html":{}}}],["sekandari'})@isstring()@isnotempty",{"_index":201,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["selected",{"_index":649,"title":{},"body":{"interfaces/FilterType.html":{}}}],["sending",{"_index":830,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["sendrejectrequestnotification",{"_index":822,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["sendrejectrequestnotification(requester",{"_index":825,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["sendreservenotification",{"_index":823,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["sendreservenotification(requester",{"_index":828,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["server",{"_index":949,"title":{},"body":{"index.html":{}}}],["set",{"_index":613,"title":{},"body":{"interfaces/FilterType.html":{}}}],["several",{"_index":634,"title":{},"body":{"interfaces/FilterType.html":{}}}],["side",{"_index":950,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1004,"title":{},"body":{"properties.html":{}}}],["single",{"_index":607,"title":{},"body":{"interfaces/FilterType.html":{}}}],["skills",{"_index":1014,"title":{},"body":{"properties.html":{}}}],["skip",{"_index":313,"title":{},"body":{"injectables/BookRequestRepository.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{}}}],["skip(filter.skip",{"_index":159,"title":{},"body":{"classes/BaseRepository.html":{}}}],["sms",{"_index":834,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["sort(filter.order",{"_index":158,"title":{},"body":{"classes/BaseRepository.html":{}}}],["sortorder",{"_index":652,"title":{},"body":{"interfaces/FilterType.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"index.html":{}}}],["specific",{"_index":590,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["specifies",{"_index":629,"title":{},"body":{"interfaces/FilterType.html":{}}}],["specify",{"_index":619,"title":{},"body":{"interfaces/FilterType.html":{}}}],["sponsors",{"_index":977,"title":{},"body":{"index.html":{}}}],["src/.../amqp",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bull.constant.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../find",{"_index":1018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mongo.config.ts",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.enum.ts",{"_index":929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../rabbit.config.ts",{"_index":937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../redis.config.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reservation",{"_index":930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/application/services/commands/change",{"_index":486,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{}}}],["src/application/services/commands/create",{"_index":562,"title":{},"body":{"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestHandler.html":{},"coverage.html":{}}}],["src/application/services/commands/index.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/services/events/change",{"_index":496,"title":{},"body":{"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"coverage.html":{}}}],["src/application/services/events/create",{"_index":568,"title":{},"body":{"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"coverage.html":{}}}],["src/application/services/events/index.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/services/jobs/book",{"_index":339,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"coverage.html":{}}}],["src/application/services/jobs/index.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/services/proxies/index.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/services/proxies/notice.proxy.ts",{"_index":821,"title":{},"body":{"injectables/NoticeProxy.html":{},"coverage.html":{}}}],["src/application/services/proxies/notice.proxy.ts:13",{"_index":826,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["src/application/services/proxies/notice.proxy.ts:4",{"_index":824,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["src/application/services/proxies/notice.proxy.ts:7",{"_index":829,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["src/application/services/proxies/process",{"_index":838,"title":{},"body":{"injectables/ProcessBookProxy.html":{},"coverage.html":{}}}],["src/application/services/queries/get",{"_index":654,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"coverage.html":{}}}],["src/application/services/queries/index.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/application/use",{"_index":413,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/models/entities/base.entity.ts",{"_index":6,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/domain/models/entities/base.entity.ts:5",{"_index":30,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/models/entities/base.entity.ts:6",{"_index":28,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/models/entities/base.entity.ts:7",{"_index":32,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/models/entities/base.entity.ts:8",{"_index":20,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/models/entities/book",{"_index":221,"title":{},"body":{"classes/BookRequestEntity.html":{},"coverage.html":{}}}],["src/domain/models/entities/index.ts",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/models/schemas/base.schema.ts",{"_index":166,"title":{},"body":{"classes/BaseSchema.html":{},"coverage.html":{}}}],["src/domain/models/schemas/base.schema.ts:11",{"_index":178,"title":{},"body":{"classes/BaseSchema.html":{}}}],["src/domain/models/schemas/base.schema.ts:14",{"_index":177,"title":{},"body":{"classes/BaseSchema.html":{}}}],["src/domain/models/schemas/base.schema.ts:5",{"_index":169,"title":{},"body":{"classes/BaseSchema.html":{}}}],["src/domain/models/schemas/base.schema.ts:8",{"_index":173,"title":{},"body":{"classes/BaseSchema.html":{}}}],["src/domain/models/schemas/book",{"_index":396,"title":{},"body":{"classes/BookRequestSchema.html":{},"coverage.html":{}}}],["src/domain/models/schemas/index.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/services/factories/base.factory.ts",{"_index":52,"title":{},"body":{"classes/BaseFactory.html":{},"coverage.html":{}}}],["src/domain/services/factories/base.factory.ts:14",{"_index":66,"title":{},"body":{"classes/BaseFactory.html":{}}}],["src/domain/services/factories/base.factory.ts:22",{"_index":74,"title":{},"body":{"classes/BaseFactory.html":{}}}],["src/domain/services/factories/base.factory.ts:39",{"_index":76,"title":{},"body":{"classes/BaseFactory.html":{}}}],["src/domain/services/factories/base.factory.ts:43",{"_index":71,"title":{},"body":{"classes/BaseFactory.html":{}}}],["src/domain/services/factories/base.factory.ts:8",{"_index":62,"title":{},"body":{"classes/BaseFactory.html":{}}}],["src/domain/services/factories/book",{"_index":255,"title":{},"body":{"injectables/BookRequestFactory.html":{},"coverage.html":{}}}],["src/domain/services/factories/index.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/services/mappers/base.mapper.ts",{"_index":107,"title":{},"body":{"interfaces/BaseMapper.html":{},"coverage.html":{}}}],["src/domain/services/mappers/base.mapper.ts:2",{"_index":115,"title":{},"body":{"interfaces/BaseMapper.html":{}}}],["src/domain/services/mappers/base.mapper.ts:4",{"_index":112,"title":{},"body":{"interfaces/BaseMapper.html":{}}}],["src/domain/services/mappers/book",{"_index":272,"title":{},"body":{"injectables/BookRequestMapper.html":{},"coverage.html":{}}}],["src/domain/services/mappers/index.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/services/repositories/base.repository.ts",{"_index":119,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/domain/services/repositories/base.repository.ts:10",{"_index":125,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/base.repository.ts:16",{"_index":129,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/base.repository.ts:20",{"_index":127,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/base.repository.ts:26",{"_index":135,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/base.repository.ts:32",{"_index":137,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/base.repository.ts:38",{"_index":132,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/domain/services/repositories/book",{"_index":306,"title":{},"body":{"injectables/BookRequestRepository.html":{},"coverage.html":{}}}],["src/domain/services/repositories/index.ts",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/config/app.config.ts",{"_index":881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/config/mongo.config.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/config/node",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/config/rabbit.config.ts",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/config/redis.config.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/constants/amqp",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/constants/bull.constant.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/database/filter.ts",{"_index":595,"title":{},"body":{"interfaces/FilterType.html":{},"coverage.html":{}}}],["src/infrastructure/database/find",{"_index":1021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/infrastructure/enum/order.enum.ts",{"_index":932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/enum/reservation",{"_index":934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/interfaces/book",{"_index":182,"title":{},"body":{"interfaces/BookProcessResultInterface.html":{},"interfaces/BookRequestInterface.html":{},"coverage.html":{}}}],["src/library.module.ts",{"_index":754,"title":{},"body":{"modules/LibraryModule.html":{}}}],["src/main.ts",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/presentation/controllers/index.ts",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/presentation/controllers/library",{"_index":805,"title":{},"body":{"controllers/LibraryProcessController.html":{},"coverage.html":{}}}],["src/presentation/controllers/library.controller.ts",{"_index":693,"title":{},"body":{"controllers/LibraryController.html":{},"coverage.html":{}}}],["src/presentation/controllers/library.controller.ts:112",{"_index":700,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/presentation/controllers/library.controller.ts:163",{"_index":706,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/presentation/controllers/library.controller.ts:237",{"_index":698,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/presentation/controllers/library.controller.ts:61",{"_index":703,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/presentation/dtos/book",{"_index":191,"title":{},"body":{"classes/BookRequestDto.html":{},"coverage.html":{}}}],["start",{"_index":959,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":962,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":964,"title":{},"body":{"index.html":{}}}],["started",{"_index":942,"title":{"index.html":{}},"body":{}}],["starter",{"_index":953,"title":{},"body":{"index.html":{}}}],["statements",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":274,"title":{},"body":{"injectables/BookRequestMapper.html":{},"classes/BookRequestSchema.html":{}}}],["status",{"_index":227,"title":{},"body":{"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{}}}],["status.command",{"_index":550,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["status.command.ts",{"_index":488,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{},"coverage.html":{}}}],["status.command.ts:4",{"_index":491,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{}}}],["status.command.ts:6",{"_index":492,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{}}}],["status.command.ts:7",{"_index":493,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{}}}],["status.command.ts:8",{"_index":494,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{}}}],["status.enum.ts",{"_index":931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status.event",{"_index":502,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"coverage.html":{}}}],["status.event.ts",{"_index":497,"title":{},"body":{"classes/ChangeBookRequestStatusEvent.html":{},"coverage.html":{}}}],["status.event.ts:3",{"_index":498,"title":{},"body":{"classes/ChangeBookRequestStatusEvent.html":{}}}],["status.event.ts:4",{"_index":499,"title":{},"body":{"classes/ChangeBookRequestStatusEvent.html":{}}}],["status.handler.ts",{"_index":537,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{}}}],["status.handler.ts:12",{"_index":543,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["status.handler.ts:18",{"_index":545,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["status.handler.ts:39",{"_index":547,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["status/change",{"_index":487,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"coverage.html":{}}}],["stay",{"_index":985,"title":{},"body":{"index.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestRepository.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsQuery.html":{},"controllers/LibraryController.html":{},"injectables/NoticeProxy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":831,"title":{},"body":{"injectables/NoticeProxy.html":{}}}],["super",{"_index":38,"title":{},"body":{"classes/BaseEntity.html":{}}}],["super(bookrequestmapper",{"_index":270,"title":{},"body":{"injectables/BookRequestFactory.html":{},"injectables/BookRequestRepository.html":{}}}],["super(initial",{"_index":240,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["super.findall",{"_index":332,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["super.findone(where",{"_index":337,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["support",{"_index":978,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":609,"title":{},"body":{"interfaces/FilterType.html":{}}}],["svg",{"_index":996,"title":{},"body":{"modules.html":{}}}],["table",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":14,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookReservationUseCase.html":{},"controllers/LibraryController.html":{}}}],["task",{"_index":1008,"title":{},"body":{"properties.html":{}}}],["test",{"_index":967,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":970,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":969,"title":{},"body":{"index.html":{}}}],["tests",{"_index":966,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":976,"title":{},"body":{"index.html":{}}}],["this.amqpclient.emit('book.request",{"_index":851,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["this.amqpclient.emit('book.return",{"_index":852,"title":{},"body":{"injectables/ProcessBookProxy.html":{}}}],["this.bookrequestfactory.create(bookrequestentity",{"_index":591,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["this.bookrequestfactory.updateonebyid(bookrequestentity",{"_index":557,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{}}}],["this.bookrequestrepository.findall",{"_index":668,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["this.bookrequestrepository.findbyrequestedbook",{"_index":667,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["this.bookrequestrepository.findbyrequestername",{"_index":666,"title":{},"body":{"classes/GetAllBookRequestsHandler.html":{}}}],["this.bookrequestrepository.findonebyid(bookrequest.id",{"_index":682,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["this.bookrequestrepository.findonerequest",{"_index":683,"title":{},"body":{"classes/GetBookRequestHandler.html":{}}}],["this.bookrequestusecase.getmyrequests(name",{"_index":739,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.bookrequestusecase.getrequestbyid(id",{"_index":733,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.bookrequestusecase.requestonebook(bookrequest",{"_index":726,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.bookreservationusecase.reserveonebook(bookrequest",{"_index":814,"title":{},"body":{"controllers/LibraryProcessController.html":{}}}],["this.bookreservationusecase.returnbook(id",{"_index":736,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.checkbookrequeststatus(bookrequestentity",{"_index":553,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["this.commandbus.execute",{"_index":376,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["this.createdat",{"_index":43,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.eventpublisher.mergeobjectcontext(result",{"_index":558,"title":{},"body":{"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{}}}],["this.id",{"_index":39,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.mapper.convertentitytoschema(entity",{"_index":86,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.mapper.convertschematoentity(data",{"_index":99,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.mapper.convertschematoentity(res",{"_index":91,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.mapper.convertschematoentity(result",{"_index":148,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.mapper.convertschematoentity(x",{"_index":165,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model",{"_index":155,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.countdocuments(filter.where",{"_index":162,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.countdocuments(where",{"_index":143,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.create(schema",{"_index":89,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.model.findbyid(id",{"_index":150,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.findone",{"_index":145,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.findone(where",{"_index":147,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.model.findoneanddelete",{"_index":103,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.model.findoneandupdate",{"_index":96,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.noticeproxy.sendrejectrequestnotification",{"_index":535,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["this.noticeproxy.sendreservenotification",{"_index":533,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["this.processbookproxy.processrequestbook(bookrequest",{"_index":454,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["this.processbookproxy.processrequestbook(request",{"_index":384,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["this.processbookproxy.processreturnbook",{"_index":481,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["this.querybus.execute",{"_index":374,"title":{},"body":{"injectables/BookRequestRetryJob.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{}}}],["this.querybus.execute(new",{"_index":455,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["this.requestedbook",{"_index":243,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["this.requestername",{"_index":241,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["this.reservedat",{"_index":248,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["this.retryqueue.add(remove_no_result_job",{"_index":386,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["this.retryqueue.add(retry_request_job",{"_index":449,"title":{},"body":{"injectables/BookRequestUseCase.html":{}}}],["this.retryqueue.getjob(bookprocessresult.id",{"_index":471,"title":{},"body":{"injectables/BookReservationUseCase.html":{}}}],["this.retryqueue.getjob(request.id)).remove",{"_index":372,"title":{},"body":{"injectables/BookRequestRetryJob.html":{}}}],["this.returnedat",{"_index":250,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["this.status",{"_index":245,"title":{},"body":{"classes/BookRequestEntity.html":{}}}],["this.tags",{"_index":47,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.updatedat",{"_index":45,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.updateone(entity",{"_index":100,"title":{},"body":{"classes/BaseFactory.html":{}}}],["throeerror",{"_index":489,"title":{},"body":{"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusHandler.html":{}}}],["throw",{"_index":438,"title":{},"body":{"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestHandler.html":{},"controllers/LibraryController.html":{}}}],["throws",{"_index":583,"title":{},"body":{"classes/CreateBookRequestHandler.html":{}}}],["touch",{"_index":986,"title":{},"body":{"index.html":{}}}],["transport",{"_index":776,"title":{},"body":{"modules/LibraryModule.html":{}}}],["transport.rmq",{"_index":801,"title":{},"body":{"modules/LibraryModule.html":{}}}],["true",{"_index":98,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"interfaces/FilterType.html":{},"modules/LibraryModule.html":{}}}],["true})@arrayminsize(0",{"_index":204,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["try",{"_index":470,"title":{},"body":{"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{}}}],["twitter",{"_index":992,"title":{},"body":{"index.html":{}}}],["two",{"_index":640,"title":{},"body":{"interfaces/FilterType.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"interfaces/BaseMapper.html":{},"classes/BaseRepository.html":{},"classes/BaseSchema.html":{},"interfaces/BookProcessResultInterface.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestFactory.html":{},"interfaces/BookRequestInterface.html":{},"injectables/BookRequestMapper.html":{},"injectables/BookRequestRepository.html":{},"injectables/BookRequestRetryJob.html":{},"classes/BookRequestSchema.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"classes/ChangeBookRequestStatusEvent.html":{},"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestCommand.html":{},"classes/CreateBookRequestEvent.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"interfaces/FilterType.html":{},"classes/GetAllBookRequestsHandler.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestHandler.html":{},"classes/GetBookRequestQuery.html":{},"controllers/LibraryController.html":{},"controllers/LibraryProcessController.html":{},"injectables/NoticeProxy.html":{},"injectables/ProcessBookProxy.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1016,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":35,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseFactory.html":{},"classes/BaseSchema.html":{},"injectables/BookRequestMapper.html":{}}}],["types.objectid",{"_index":168,"title":{},"body":{"classes/BaseSchema.html":{}}}],["types.objectid().tostring",{"_index":42,"title":{},"body":{"classes/BaseEntity.html":{}}}],["types.objectid(entity.id",{"_index":102,"title":{},"body":{"classes/BaseFactory.html":{}}}],["types.objectid(entity?.id",{"_index":284,"title":{},"body":{"injectables/BookRequestMapper.html":{}}}],["types.objectid(id",{"_index":104,"title":{},"body":{"classes/BaseFactory.html":{}}}],["typescript",{"_index":521,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"index.html":{}}}],["undefined",{"_index":174,"title":{},"body":{"classes/BaseSchema.html":{},"classes/BookRequestDto.html":{},"classes/BookRequestSchema.html":{},"controllers/LibraryController.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":203,"title":{},"body":{"classes/BookRequestDto.html":{}}}],["unique",{"_index":401,"title":{},"body":{"classes/BookRequestSchema.html":{}}}],["unit",{"_index":965,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{},"injectables/BookRequestUseCase.html":{},"injectables/BookReservationUseCase.html":{},"controllers/LibraryController.html":{}}}],["unlicensed",{"_index":1015,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":523,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["up",{"_index":614,"title":{},"body":{"interfaces/FilterType.html":{}}}],["update",{"_index":530,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{}}}],["updated_at",{"_index":97,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BaseSchema.html":{}}}],["updatedat",{"_index":15,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BookRequestEntity.html":{},"injectables/BookRequestMapper.html":{},"controllers/LibraryController.html":{}}}],["updateone",{"_index":57,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["updateone(entity",{"_index":72,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["updateonebyid",{"_index":58,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["updateonebyid(entity",{"_index":75,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BookRequestFactory.html":{}}}],["uri",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":802,"title":{},"body":{"modules/LibraryModule.html":{}}}],["usecases",{"_index":773,"title":{},"body":{"modules/LibraryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":791,"title":{},"body":{"modules/LibraryModule.html":{}}}],["username",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":604,"title":{},"body":{"interfaces/FilterType.html":{}}}],["validator",{"_index":211,"title":{},"body":{"classes/BookRequestDto.html":{},"dependencies.html":{}}}],["value",{"_index":317,"title":{},"body":{"injectables/BookRequestRepository.html":{},"classes/ChangeBookRequestStatusCommand.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1023,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":524,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/CreateBookRequestEventHandler.html":{}}}],["version",{"_index":1002,"title":{},"body":{"properties.html":{}}}],["void",{"_index":512,"title":{},"body":{"classes/ChangeBookRequestStatusEventHandler.html":{},"classes/ChangeBookRequestStatusHandler.html":{},"classes/CreateBookRequestEventHandler.html":{},"classes/CreateBookRequestHandler.html":{},"injectables/NoticeProxy.html":{}}}],["watch",{"_index":960,"title":{},"body":{"index.html":{}}}],["way",{"_index":646,"title":{},"body":{"interfaces/FilterType.html":{}}}],["website",{"_index":990,"title":{},"body":{"index.html":{}}}],["where['requested_book",{"_index":333,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["where['requester_name",{"_index":331,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["where['status",{"_index":336,"title":{},"body":{"injectables/BookRequestRepository.html":{}}}],["wrapped",{"_index":639,"title":{},"body":{"interfaces/FilterType.html":{}}}],["write",{"_index":576,"title":{},"body":{"classes/CreateBookRequestEventHandler.html":{}}}],["x.hasmany(y",{"_index":616,"title":{},"body":{"interfaces/FilterType.html":{}}}],["y",{"_index":623,"title":{},"body":{"interfaces/FilterType.html":{}}}],["yes",{"_index":324,"title":{},"body":{"injectables/BookRequestRepository.html":{},"classes/GetAllBookRequestsQuery.html":{},"classes/GetBookRequestQuery.html":{}}}],["you'd",{"_index":981,"title":{},"body":{"index.html":{}}}],["z",{"_index":617,"title":{},"body":{"interfaces/FilterType.html":{}}}],["zoom",{"_index":751,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/entities/base.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/domain/models/entities/base.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/base.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/base.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/base.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from '@nestjs/cqrs';\nimport { Types } from 'mongoose';\n\nexport class BaseEntity extends AggregateRoot {\n  public id: string;\n  public createdAt: Date;\n  public updatedAt: Date;\n  public tags: Array;\n\n  constructor(initial: Partial) {\n    super();\n\n    this.id = initial?.id || new Types.ObjectId().toString();\n    this.createdAt = initial?.createdAt || new Date();\n    this.updatedAt = initial?.updatedAt || new Date();\n    this.tags = initial?.tags || [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/factories/base.factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                destroyeOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: BaseMapper, model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/factories/base.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        BaseMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(entity: EntityType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/factories/base.factory.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        EntityType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        destroyeOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    destroyeOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/factories/base.factory.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(entity: Partial, where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/factories/base.factory.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/factories/base.factory.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, BaseSchema } from 'domain/models';\nimport { BaseMapper } from '../mappers';\nimport { FilterQuery, Model, Types } from 'mongoose';\n\nexport abstract class BaseFactory {\n  constructor(\n    protected readonly mapper: BaseMapper,\n    protected readonly model: Model,\n  ) {}\n\n  async create(entity: EntityType): Promise {\n    const schema = this.mapper.convertEntityToSchema(entity);\n\n    const res = await this.model.create(schema);\n\n    return this.mapper.convertSchemaToEntity(res as SchemeType);\n  }\n\n  async updateOne(\n    entity: Partial,\n    where: FilterQuery,\n  ): Promise {\n    const model = this.mapper.convertEntityToSchema(entity as EntityType);\n\n    delete model._id;\n\n    const data = await this.model.findOneAndUpdate(\n      where,\n      { ...model, updated_at: new Date() },\n      { new: true },\n    );\n\n    return this.mapper.convertSchemaToEntity(data);\n  }\n\n  async updateOneById(entity: Partial) {\n    return this.updateOne(entity, { _id: new Types.ObjectId(entity.id) });\n  }\n\n  async destroyeOne(id: string): Promise {\n    const data = await this.model.findOneAndDelete({\n      _id: new Types.ObjectId(id),\n    });\n\n    return this.mapper.convertSchemaToEntity(data as any);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseMapper.html":{"url":"interfaces/BaseMapper.html","title":"interface - BaseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/mappers/base.mapper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            convertRequestToEntity\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        convertEntityToSchema\n                                    \n                                \n                                \n                                    \n                                        convertSchemaToEntity\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertEntityToSchema\n                        \n                    \n                \n            \n            \n                \nconvertEntityToSchema(entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/mappers/base.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Scheme\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertSchemaToEntity\n                        \n                    \n                \n            \n            \n                \nconvertSchemaToEntity(schema: Scheme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/mappers/base.mapper.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                        Scheme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Entity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        convertRequestToEntity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        convertRequestToEntity:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BaseMapper {\n  convertSchemaToEntity(schema: Scheme): Entity;\n\n  convertEntityToSchema(entity: Entity): Scheme;\n\n  convertRequestToEntity?: (request: Partial) => Entity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/repositories/base.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkExistById\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: BaseMapper, model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/repositories/base.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        BaseMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkExistById\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkExistById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/base.repository.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/base.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filter: FilterType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/base.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/base.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/base.repository.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, BaseSchema } from 'domain/models';\nimport { BaseMapper } from '../mappers';\nimport { FilterQuery, Model } from 'mongoose';\nimport { FilterType, findAndCountAll } from 'infrastructure/database';\nimport { OrderEnum } from 'infrastructure/enum';\n\nexport abstract class BaseRepository {\n  constructor(\n    private readonly mapper: BaseMapper,\n    private readonly model: Model,\n  ) {}\n\n  async count(where: FilterQuery): Promise {\n    return this.model.countDocuments(where);\n  }\n\n  async checkExistById(id: string): Promise {\n    const result = await this.model.findOne({ _id: id }, { _id: 1 });\n\n    return !!result;\n  }\n\n  async findOne(where: FilterQuery): Promise {\n    const result = await this.model.findOne(where);\n\n    return this.mapper.convertSchemaToEntity(result as ModelType);\n  }\n\n  async findOneById(id: string): Promise {\n    const result = await this.model.findById(id);\n\n    return this.mapper.convertSchemaToEntity(result as ModelType);\n  }\n\n  async findAll(\n    filter: FilterType,\n  ): Promise> {\n    if (!filter.where) filter.where = {};\n\n    if (!filter.order) filter.order = [];\n\n    filter.order.push(['_id', OrderEnum.DESC]);\n\n    const result = await this.model\n      .find(filter.where, filter.include)\n      .sort(filter.order)\n      .skip(filter.skip)\n      .limit(filter.limit)\n      .populate(filter.populate || []);\n    const count = await this.model.countDocuments(filter.where);\n\n    return {\n      rows: result.map((x) =>\n        this.mapper.convertSchemaToEntity(x as ModelType),\n      ),\n      count: count,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseSchema.html":{"url":"classes/BaseSchema.html","title":"class - BaseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/schemas/base.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/base.schema.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, index: true, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/base.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false, index: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/base.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/base.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types } from 'mongoose';\n\nexport class BaseSchema {\n  _id: Types.ObjectId;\n\n  @Prop({ type: Date, index: true, default: () => new Date() })\n  created_at: Date;\n\n  @Prop({ type: Date, default: () => new Date() })\n  updated_at: Date;\n\n  @Prop({ type: [String], required: false, index: true, default: [] })\n  tags?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookProcessResultInterface.html":{"url":"interfaces/BookProcessResultInterface.html","title":"interface - BookProcessResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookProcessResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/interfaces/book-process-result.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BookRequestInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exists:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BookRequestInterface } from './book-request.interface';\n\nexport interface BookProcessResultInterface extends BookRequestInterface {\n  exists: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookRequestDto.html":{"url":"classes/BookRequestDto.html","title":"class - BookRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presentation/DTOs/book-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                requested_book\n                            \n                            \n                                    \n                                    \n                                    \n                                requester_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        requested_book\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, example: 'Mastering NestJS'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/presentation/DTOs/book-request.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        requester_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, example: 'Hamid Sekandari'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/presentation/DTOs/book-request.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, example: undefined})@IsOptional()@IsArray()@IsString({each: true})@ArrayMinSize(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/presentation/DTOs/book-request.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMinSize,\n  IsArray,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class BookRequestDto {\n  @ApiProperty({ type: String, required: true, example: 'Hamid Sekandari' })\n  @IsString()\n  @IsNotEmpty()\n  requester_name: string;\n\n  @ApiProperty({ type: String, required: true, example: 'Mastering NestJS' })\n  @IsString()\n  @IsNotEmpty()\n  requested_book: string;\n\n  @ApiProperty({\n    type: [String],\n    required: false,\n    example: ['programming', '2023'],\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @ArrayMinSize(0)\n  tags?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookRequestEntity.html":{"url":"classes/BookRequestEntity.html","title":"class - BookRequestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookRequestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/entities/book-request.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestedBook\n                            \n                            \n                                    Public\n                                requesterName\n                            \n                            \n                                    Public\n                                reservedAt\n                            \n                            \n                                    Public\n                                returnedAt\n                            \n                            \n                                status\n                            \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/domain/models/entities/book-request.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestedBook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/book-request.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requesterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/book-request.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reservedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/book-request.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        returnedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/book-request.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatusEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/entities/book-request.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from './base.entity';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\nexport class BookRequestEntity extends BaseEntity {\n  public requesterName: string;\n  public requestedBook: string;\n  status: ReservationStatusEnum;\n  public reservedAt: Date;\n  public returnedAt: Date;\n\n  constructor(initial: Partial) {\n    super(initial);\n\n    this.requesterName = initial?.requesterName;\n    this.requestedBook = initial?.requestedBook;\n    this.status = initial?.status || ReservationStatusEnum.Pending;\n    this.reservedAt = initial?.reservedAt;\n    this.returnedAt = initial?.returnedAt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRequestFactory.html":{"url":"injectables/BookRequestFactory.html","title":"injectable - BookRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/factories/book-request.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseFactory\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                destroyeOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestMapper: BookRequestMapper, bookRequestModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/factories/book-request.factory.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestMapper\n                                                  \n                                                        \n                                                                        BookRequestMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookRequestModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(entity: EntityType)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseFactory\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        EntityType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        destroyeOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    destroyeOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseFactory\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseFactory:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(entity: Partial, where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseFactory\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseFactory:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseFactory\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseFactory:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { BookRequestSchema, BookRequestEntity } from 'domain/models';\nimport { BaseFactory } from './base.factory';\nimport { BookRequestMapper } from '../mappers';\n\n@Injectable()\nexport class BookRequestFactory extends BaseFactory {\n  constructor(\n    protected readonly bookRequestMapper: BookRequestMapper,\n    @InjectModel(BookRequestSchema.name)\n    private bookRequestModel: Model,\n  ) {\n    super(bookRequestMapper, bookRequestModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookRequestInterface.html":{"url":"interfaces/BookRequestInterface.html","title":"interface - BookRequestInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookRequestInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/interfaces/book-request.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            requested_book\n                                        \n                                \n                                \n                                        \n                                            requester_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requested_book\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requested_book:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requester_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requester_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BookRequestInterface {\n  requester_name: string;\n  requested_book: string;\n  tags?: Array;\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRequestMapper.html":{"url":"injectables/BookRequestMapper.html","title":"injectable - BookRequestMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookRequestMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/mappers/book-request.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertEntityToSchema\n                            \n                            \n                                    Static\n                                convertRequestToEntity\n                            \n                            \n                                    Public\n                                convertSchemaToEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/mappers/book-request.mapper.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        convertEntityToSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertEntityToSchema(entity: BookRequestEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/mappers/book-request.mapper.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            BookRequestEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BookRequestSchema\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        convertRequestToEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertRequestToEntity(request: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/mappers/book-request.mapper.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BookRequestEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        convertSchemaToEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertSchemaToEntity(schema: BookRequestSchema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/mappers/book-request.mapper.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            BookRequestSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BookRequestEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BookRequestEntity, BookRequestSchema } from 'domain/models';\nimport { BaseMapper } from './base.mapper';\nimport { Types } from 'mongoose';\nimport { BookRequestInterface } from 'infrastructure/interfaces';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\n@Injectable()\nexport class BookRequestMapper\n  implements BaseMapper\n{\n  constructor() {}\n\n  public convertEntityToSchema(entity: BookRequestEntity): BookRequestSchema {\n    const schema = new BookRequestSchema();\n\n    schema._id = new Types.ObjectId(entity?.id);\n    schema.requester_name = entity.requesterName;\n    schema.requested_book = entity.requestedBook;\n    schema.status = entity.status;\n    schema.reserved_at = entity.reservedAt;\n    schema.returned_at = entity.returnedAt;\n    schema.created_at = entity.createdAt;\n    schema.updated_at = entity.updatedAt;\n    schema.tags = entity.tags;\n\n    return schema;\n  }\n\n  public convertSchemaToEntity(schema: BookRequestSchema): BookRequestEntity {\n    if (!schema) return;\n\n    return new BookRequestEntity({\n      id: schema._id.toString(),\n      requesterName: schema.requester_name,\n      requestedBook: schema.requested_book,\n      status: schema.status,\n      reservedAt: schema.reserved_at,\n      returnedAt: schema.returned_at,\n      createdAt: schema.created_at,\n      updatedAt: schema.updated_at,\n      tags: schema.tags,\n    });\n  }\n\n  public static convertRequestToEntity(\n    request: BookRequestInterface,\n  ): BookRequestEntity {\n    return new BookRequestEntity({\n      requesterName: request.requester_name,\n      requestedBook: request.requested_book,\n      tags: request.tags,\n      status: ReservationStatusEnum.Pending,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRequestRepository.html":{"url":"injectables/BookRequestRepository.html","title":"injectable - BookRequestRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookRequestRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/repositories/book-request.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByRequestedBook\n                            \n                            \n                                    Async\n                                findByRequesterName\n                            \n                            \n                                    Async\n                                findOneRequest\n                            \n                            \n                                    Async\n                                checkExistById\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestMapper: BookRequestMapper, bookRequestModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/repositories/book-request.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestMapper\n                                                  \n                                                        \n                                                                        BookRequestMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookRequestModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByRequestedBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByRequestedBook(requestedBook: string, skip: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/book-request.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                requestedBook\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    100\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByRequesterName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByRequesterName(requesterName: string, skip: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/book-request.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                requesterName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    100\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneRequest(requestedBook: string, requesterName: string, status?: ReservationStatusEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/repositories/book-request.repository.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestedBook\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requesterName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            ReservationStatusEnum\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkExistById\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkExistById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filter: FilterType)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(where: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterQuery, Model } from 'mongoose';\nimport { BookRequestSchema, BookRequestEntity } from 'domain/models';\nimport { BaseRepository } from './base.repository';\nimport { BookRequestMapper } from '../mappers';\nimport { findAndCountAll } from 'infrastructure/database';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\n@Injectable()\nexport class BookRequestRepository extends BaseRepository {\n  constructor(\n    protected readonly bookRequestMapper: BookRequestMapper,\n    @InjectModel(BookRequestSchema.name)\n    private bookRequestModel: Model,\n  ) {\n    super(bookRequestMapper, bookRequestModel);\n  }\n\n  async findByRequesterName(\n    requesterName: string,\n    skip = 0,\n    limit = 100,\n  ): Promise> {\n    const where: FilterQuery = {};\n    where['requester_name'] = requesterName;\n\n    return super.findAll({\n      skip,\n      limit,\n      where,\n    });\n  }\n\n  async findByRequestedBook(\n    requestedBook: string,\n    skip = 0,\n    limit = 100,\n  ): Promise> {\n    const where: FilterQuery = {};\n    where['requested_book'] = { $regex: requestedBook, $options: 'i' };\n\n    return super.findAll({\n      skip,\n      limit,\n      where,\n    });\n  }\n\n  async findOneRequest(\n    requestedBook: string,\n    requesterName: string,\n    status?: ReservationStatusEnum,\n  ): Promise {\n    const where: FilterQuery = {};\n    where['requested_book'] = requestedBook;\n    where['requester_name'] = requesterName;\n    if (status) where['status'] = status;\n\n    return super.findOne(where);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRequestRetryJob.html":{"url":"injectables/BookRequestRetryJob.html","title":"injectable - BookRequestRetryJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookRequestRetryJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/jobs/book-request-retry.job.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                processRemoveNoResultJob\n                            \n                            \n                                    \n                                    Async\n                                processRetryJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(processBookProxy: ProcessBookProxy, commandBus: CommandBus, queryBus: QueryBus, retryQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/jobs/book-request-retry.job.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processBookProxy\n                                                  \n                                                        \n                                                                        ProcessBookProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processRemoveNoResultJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    processRemoveNoResultJob(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process(REMOVE_NO_RESULT_JOB)\n                \n            \n\n                    \n                        \n                            Defined in src/application/services/jobs/book-request-retry.job.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                            Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processRetryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    processRetryJob(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process(RETRY_REQUEST_JOB)\n                \n            \n\n                    \n                        \n                            Defined in src/application/services/jobs/book-request-retry.job.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                            Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  REMOVE_NO_RESULT_JOB,\n  REQUEST_FAILED_QUEUE,\n  RETRY_REQUEST_JOB,\n} from 'infrastructure/constants/bull.constant';\n\nimport {\n  ChangeBookRequestStatusCommand,\n  GetBookRequestQuery,\n  ProcessBookProxy,\n} from 'application/services';\nimport { InjectQueue, Process, Processor } from '@nestjs/bull';\nimport { Job, Queue } from 'bull';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { BookRequestInterface } from 'infrastructure/interfaces';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { BookRequestEntity } from 'domain/models';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\n@Processor(REQUEST_FAILED_QUEUE)\n@Injectable()\nexport class BookRequestRetryJob {\n  constructor(\n    private readonly processBookProxy: ProcessBookProxy,\n    private readonly commandBus: CommandBus,\n    private readonly queryBus: QueryBus,\n    @InjectQueue(REQUEST_FAILED_QUEUE)\n    private readonly retryQueue: Queue,\n  ) {}\n\n  @Process(REMOVE_NO_RESULT_JOB)\n  async processRemoveNoResultJob(job: Job) {\n    const request = job.data;\n    await (await this.retryQueue.getJob(request.id)).remove();\n    const bookRequest = await this.queryBus.execute(\n      new GetBookRequestQuery({\n        id: request.id,\n      }),\n    );\n\n    if (bookRequest) {\n      await this.commandBus.execute(\n        new ChangeBookRequestStatusCommand(\n          bookRequest,\n          ReservationStatusEnum.Rejected,\n        ),\n      );\n    }\n  }\n\n  @Process(RETRY_REQUEST_JOB)\n  async processRetryJob(job: Job) {\n    const request = job.data;\n    Logger.error(\n      `no response for processing book: ${request.requested_book} with id: ${request.id} retrying... attempts: ${job.attemptsMade + 1}`,\n    );\n    this.processBookProxy.processRequestBook(request);\n    if (job.attemptsMade + 1 === job.opts.attempts) {\n      await this.retryQueue.add(REMOVE_NO_RESULT_JOB, request, {\n        delay: 180 * 1000, // 3 minutes\n        removeOnComplete: true,\n        attempts: 5,\n        backoff: 180 * 1000, // 3 minutes\n      });\n    } else {\n      await job.retry();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookRequestSchema.html":{"url":"classes/BookRequestSchema.html","title":"class - BookRequestSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookRequestSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/schemas/book-request.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                requested_book\n                            \n                            \n                                    \n                                requester_name\n                            \n                            \n                                    \n                                reserved_at\n                            \n                            \n                                    \n                                returned_at\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requested_book\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, index: true, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/book-request.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        requester_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, index: true, unique: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/book-request.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reserved_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/book-request.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        returned_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/book-request.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: ReservationStatusEnum, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/models/schemas/book-request.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/models/schemas/book-request.schema.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { BaseSchema } from './base.schema';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\n@Schema({\n  id: true,\n})\nexport class BookRequestSchema extends BaseSchema {\n  @Prop({ type: String, required: true, index: true, unique: false })\n  requester_name: string;\n\n  @Prop({ type: String, required: true, index: true, unique: false })\n  requested_book: string;\n\n  @Prop({\n    type: String,\n    enum: ReservationStatusEnum,\n    required: true,\n    default: ReservationStatusEnum.Pending,\n  })\n  status: ReservationStatusEnum;\n\n  @Prop({ type: Date, required: false })\n  reserved_at: Date;\n\n  @Prop({ type: Date, required: false })\n  returned_at: Date;\n\n  static getSchema() {\n    const schema = SchemaFactory.createForClass(this);\n    return schema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRequestUseCase.html":{"url":"injectables/BookRequestUseCase.html","title":"injectable - BookRequestUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookRequestUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/book-request.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMyRequests\n                            \n                            \n                                    Async\n                                getRequestById\n                            \n                            \n                                    Async\n                                requestOneBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus, processBookProxy: ProcessBookProxy, retryQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/book-request.use-case.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processBookProxy\n                                                  \n                                                        \n                                                                        ProcessBookProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyRequests(requesterName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-cases/book-request.use-case.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requesterName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRequestById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequestById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-cases/book-request.use-case.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        requestOneBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestOneBook(bookRequest: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-cases/book-request.use-case.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotAcceptableException } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { BookRequestMapper } from 'domain/services';\nimport { BookRequestInterface } from 'infrastructure/interfaces';\nimport { BookRequestEntity } from 'domain/models';\nimport {\n  CreateBookRequestCommand,\n  GetBookRequestQuery,\n  GetAllBookRequestsQuery,\n} from 'application/services';\nimport { ProcessBookProxy } from 'application/services/proxies';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\nimport { InjectQueue } from '@nestjs/bull';\nimport { Queue } from 'bull';\nimport {\n  REQUEST_FAILED_QUEUE,\n  RETRY_REQUEST_JOB,\n} from 'infrastructure/constants';\nimport { findAndCountAll } from 'infrastructure/database';\n\n@Injectable()\nexport class BookRequestUseCase {\n  constructor(\n    private readonly commandBus: CommandBus,\n    private readonly queryBus: QueryBus,\n    private readonly processBookProxy: ProcessBookProxy,\n    @InjectQueue(REQUEST_FAILED_QUEUE)\n    private readonly retryQueue: Queue,\n  ) {}\n\n  async requestOneBook(bookRequest: BookRequestInterface) {\n    const reservedBook = await this.queryBus.execute(\n      new GetBookRequestQuery(\n        {\n          requested_book: bookRequest.requested_book,\n          requester_name: bookRequest.requester_name,\n        },\n        ReservationStatusEnum.Reserved,\n      ),\n    );\n    if (reservedBook) {\n      throw new NotAcceptableException('Book already reserved for you');\n    }\n\n    const pendingRequest = await this.queryBus.execute(\n      new GetBookRequestQuery(\n        {\n          requested_book: bookRequest.requested_book,\n          requester_name: bookRequest.requester_name,\n        },\n        ReservationStatusEnum.Pending,\n      ),\n    );\n    if (pendingRequest) {\n      throw new NotAcceptableException(\n        'Book already requested for you and pending to process.',\n      );\n    }\n\n    const newRequest = await this.commandBus.execute(\n      new CreateBookRequestCommand(\n        BookRequestMapper.convertRequestToEntity(bookRequest),\n      ),\n    );\n    bookRequest.id = newRequest.id;\n    await this.retryQueue.add(RETRY_REQUEST_JOB, bookRequest, {\n      delay: 120 * 1000, // 2 minutes\n      removeOnComplete: false,\n      jobId: bookRequest.id,\n      attempts: 10,\n      backoff: 120 * 1000, // 2 minutes\n    });\n    this.processBookProxy.processRequestBook(bookRequest);\n    return newRequest;\n  }\n\n  async getRequestById(id: string) {\n    const request = await this.queryBus.execute(new GetBookRequestQuery({ id }));\n    if (!request) {\n      throw new NotAcceptableException('Book request not found');\n    }\n    return request;\n  }\n\n  async getMyRequests(requesterName: string) {\n    const requests = await this.queryBus.execute\n    >(new GetAllBookRequestsQuery(requesterName));\n    return requests;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookReservationUseCase.html":{"url":"injectables/BookReservationUseCase.html","title":"injectable - BookReservationUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookReservationUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/book-reservation.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ReserveOneBook\n                            \n                            \n                                    Async\n                                ReturnBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus, processBookProxy: ProcessBookProxy, retryQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/book-reservation.use-case.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processBookProxy\n                                                  \n                                                        \n                                                                        ProcessBookProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ReserveOneBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    ReserveOneBook(bookProcessResult: BookProcessResultInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-cases/book-reservation.use-case.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookProcessResult\n                                            \n                                                            BookProcessResultInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ReturnBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    ReturnBook(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/use-cases/book-reservation.use-case.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { BookProcessResultInterface } from 'infrastructure/interfaces';\nimport { BookRequestEntity } from 'domain/models';\nimport {\n  ChangeBookRequestStatusCommand,\n  GetBookRequestQuery,\n} from 'application/services';\nimport { ProcessBookProxy } from 'application/services/proxies';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\nimport { InjectQueue } from '@nestjs/bull';\nimport { REQUEST_FAILED_QUEUE } from 'infrastructure/constants';\nimport { Queue } from 'bull';\n\n@Injectable()\nexport class BookReservationUseCase {\n  constructor(\n    private readonly commandBus: CommandBus,\n    private readonly queryBus: QueryBus,\n    private readonly processBookProxy: ProcessBookProxy,\n    @InjectQueue(REQUEST_FAILED_QUEUE)\n    private readonly retryQueue: Queue,\n  ) {}\n\n  async ReserveOneBook(bookProcessResult: BookProcessResultInterface) {\n    try {\n      (await this.retryQueue.getJob(bookProcessResult.id))\n        .remove()\n        .then()\n        .catch();\n    } catch {}\n\n    const bookRequest = await this.queryBus.execute(\n      new GetBookRequestQuery({\n        id: bookProcessResult.id,\n      }),\n    );\n\n    if (bookRequest) {\n      let newStatus = ReservationStatusEnum.Rejected;\n      if (bookProcessResult.exists) {\n        newStatus = ReservationStatusEnum.Reserved;\n      }\n      await this.commandBus.execute(\n        new ChangeBookRequestStatusCommand(bookRequest, newStatus, false),\n      );\n    }\n  }\n\n  async ReturnBook(id: string) {\n    const bookRequest = await this.queryBus.execute(\n      new GetBookRequestQuery({\n        id,\n      }),\n    );\n    if (!bookRequest) {\n      throw new NotFoundException('Book reservation not found');\n    }\n    const result = await this.commandBus.execute(\n      new ChangeBookRequestStatusCommand(\n        bookRequest,\n        ReservationStatusEnum.Returned,\n      ),\n    );\n    this.processBookProxy.processReturnBook({\n      id: bookRequest.id.toString(),\n      requested_book: bookRequest.requestedBook,\n      requester_name: bookRequest.requesterName,\n      tags: bookRequest.tags,\n    });\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeBookRequestStatusCommand.html":{"url":"classes/ChangeBookRequestStatusCommand.html","title":"class - ChangeBookRequestStatusCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeBookRequestStatusCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/commands/change-book-request-status/change-book-request-status.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookRequestEntity\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                throeError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestEntity: BookRequestEntity, status: ReservationStatusEnum, throeError)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/commands/change-book-request-status/change-book-request-status.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestEntity\n                                                  \n                                                        \n                                                                        BookRequestEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ReservationStatusEnum\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        throeError\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookRequestEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookRequestEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/commands/change-book-request-status/change-book-request-status.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatusEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/commands/change-book-request-status/change-book-request-status.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        throeError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/application/services/commands/change-book-request-status/change-book-request-status.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BookRequestEntity } from 'domain/models';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\nexport class ChangeBookRequestStatusCommand {\n  constructor(\n    public bookRequestEntity: BookRequestEntity,\n    public status: ReservationStatusEnum,\n    public throeError = true,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeBookRequestStatusEvent.html":{"url":"classes/ChangeBookRequestStatusEvent.html","title":"class - ChangeBookRequestStatusEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeBookRequestStatusEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/events/change-book-request-status/change-book-request-status.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookRequestEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestEntity: BookRequestEntity)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/events/change-book-request-status/change-book-request-status.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestEntity\n                                                  \n                                                        \n                                                                        BookRequestEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookRequestEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookRequestEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/events/change-book-request-status/change-book-request-status.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BookRequestEntity } from 'domain/models';\n\nexport class ChangeBookRequestStatusEvent {\n  constructor(public bookRequestEntity: BookRequestEntity) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeBookRequestStatusEventHandler.html":{"url":"classes/ChangeBookRequestStatusEventHandler.html","title":"class - ChangeBookRequestStatusEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeBookRequestStatusEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/events/change-book-request-status/change-book-request-status.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(noticeProxy: NoticeProxy)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/events/change-book-request-status/change-book-request-status.event-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        noticeProxy\n                                                  \n                                                        \n                                                                        NoticeProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ChangeBookRequestStatusEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/events/change-book-request-status/change-book-request-status.event-handler.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            ChangeBookRequestStatusEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ChangeBookRequestStatusEvent } from './change-book-request-status.event';\nimport { Logger } from '@nestjs/common';\nimport { NoticeProxy } from 'application/services';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\n@EventsHandler(ChangeBookRequestStatusEvent)\nexport class ChangeBookRequestStatusEventHandler\n  implements IEventHandler\n{\n  constructor(private readonly noticeProxy: NoticeProxy) {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handle(event: ChangeBookRequestStatusEvent) {\n    Logger.log(\n      `status of book request with id ${event.bookRequestEntity.id} changed to ${event.bookRequestEntity.status}. Assumed to update read database ...`,\n    );\n    if (event.bookRequestEntity.status === ReservationStatusEnum.Reserved) {\n      this.noticeProxy.sendReserveNotification(\n        event.bookRequestEntity.requesterName,\n      );\n    }\n    if (event.bookRequestEntity.status === ReservationStatusEnum.Rejected) {\n      this.noticeProxy.sendRejectRequestNotification(\n        event.bookRequestEntity.requesterName,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeBookRequestStatusHandler.html":{"url":"classes/ChangeBookRequestStatusHandler.html","title":"class - ChangeBookRequestStatusHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeBookRequestStatusHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/commands/change-book-request-status/change-book-request-status.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBookRequestStatus\n                            \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestFactory: BookRequestFactory, eventPublisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/commands/change-book-request-status/change-book-request-status.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestFactory\n                                                  \n                                                        \n                                                                        BookRequestFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventPublisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBookRequestStatus\n                        \n                    \n                \n            \n            \n                \ncheckBookRequestStatus(bookRequestEntity: BookRequestEntity, newStatus: ReservationStatusEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/commands/change-book-request-status/change-book-request-status.handler.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequestEntity\n                                            \n                                                            BookRequestEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            ReservationStatusEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: ChangeBookRequestStatusCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/commands/change-book-request-status/change-book-request-status.handler.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            ChangeBookRequestStatusCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from '@nestjs/cqrs';\nimport { BookRequestEntity } from 'domain/models';\nimport { BookRequestFactory } from 'domain/services';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\nimport { BadRequestException } from '@nestjs/common';\nimport { ChangeBookRequestStatusEvent } from 'application/services';\nimport { ChangeBookRequestStatusCommand } from './change-book-request-status.command';\n\n@CommandHandler(ChangeBookRequestStatusCommand)\nexport class ChangeBookRequestStatusHandler\n  implements ICommandHandler\n{\n  constructor(\n    private readonly bookRequestFactory: BookRequestFactory,\n    private readonly eventPublisher: EventPublisher,\n  ) {}\n\n  checkBookRequestStatus(\n    bookRequestEntity: BookRequestEntity,\n    newStatus: ReservationStatusEnum,\n  ) {\n    if (\n      newStatus === ReservationStatusEnum.Returned &&\n      bookRequestEntity.status !== ReservationStatusEnum.Reserved\n    ) {\n      throw new BadRequestException(\n        'you can not return a book that is not reserved',\n      );\n    }\n    if (\n      newStatus !== ReservationStatusEnum.Returned &&\n      bookRequestEntity.status !== ReservationStatusEnum.Pending\n    ) {\n      throw new BadRequestException(\n        `you can not change book request status from ${bookRequestEntity.status} to ${newStatus}`,\n      );\n    }\n  }\n  async execute({\n    bookRequestEntity,\n    status,\n    throeError,\n  }: ChangeBookRequestStatusCommand): Promise {\n    try {\n      this.checkBookRequestStatus(bookRequestEntity, status);\n    } catch (error) {\n      if (throeError) throw error;\n      return;\n    }\n    bookRequestEntity.status = status;\n    if (status === ReservationStatusEnum.Returned) {\n      bookRequestEntity.returnedAt = new Date();\n    }\n    if (status === ReservationStatusEnum.Reserved) {\n      bookRequestEntity.reservedAt = new Date();\n    }\n    const result =\n      await this.bookRequestFactory.updateOneById(bookRequestEntity);\n    const bookRequest = this.eventPublisher.mergeObjectContext(result);\n    const bookRequestRejectEvent = new ChangeBookRequestStatusEvent(\n      bookRequest,\n    );\n    bookRequest.apply(bookRequestRejectEvent);\n    bookRequest.commit();\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookRequestCommand.html":{"url":"classes/CreateBookRequestCommand.html","title":"class - CreateBookRequestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookRequestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/commands/create-book-request/create-book-request.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookRequestEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestEntity: BookRequestEntity)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/commands/create-book-request/create-book-request.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestEntity\n                                                  \n                                                        \n                                                                        BookRequestEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookRequestEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookRequestEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/commands/create-book-request/create-book-request.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BookRequestEntity } from 'domain/models';\n\nexport class CreateBookRequestCommand {\n  constructor(public bookRequestEntity: BookRequestEntity) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookRequestEvent.html":{"url":"classes/CreateBookRequestEvent.html","title":"class - CreateBookRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/events/create-book-request/create-book-request.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookRequestEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestEntity: BookRequestEntity)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/events/create-book-request/create-book-request.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestEntity\n                                                  \n                                                        \n                                                                        BookRequestEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookRequestEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookRequestEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/events/create-book-request/create-book-request.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BookRequestEntity } from 'domain/models';\n\nexport class CreateBookRequestEvent {\n  constructor(public bookRequestEntity: BookRequestEntity) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookRequestEventHandler.html":{"url":"classes/CreateBookRequestEventHandler.html","title":"class - CreateBookRequestEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookRequestEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/events/create-book-request/create-book-request.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: CreateBookRequestEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/events/create-book-request/create-book-request.event-handler.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            CreateBookRequestEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateBookRequestEvent } from './create-book-request.event';\nimport { Logger } from '@nestjs/common';\n\n@EventsHandler(CreateBookRequestEvent)\nexport class CreateBookRequestEventHandler\n  implements IEventHandler\n{\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handle(event: CreateBookRequestEvent) {\n    Logger.log(\n      'New book request created. Assumed to write in read database ...',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookRequestHandler.html":{"url":"classes/CreateBookRequestHandler.html","title":"class - CreateBookRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/commands/create-book-request/create-book-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBookRequestStatus\n                            \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestFactory: BookRequestFactory, eventPublisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/commands/create-book-request/create-book-request.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestFactory\n                                                  \n                                                        \n                                                                        BookRequestFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventPublisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBookRequestStatus\n                        \n                    \n                \n            \n            \n                \ncheckBookRequestStatus(bookRequestEntity: BookRequestEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/commands/create-book-request/create-book-request.handler.ts:23\n                        \n                    \n\n\n            \n                \n                        Checks the status of a book request.  It checks if the status of the bookRequestEntity is not equal to \"Pending\". If it is not \"Pending\", it throws a BadRequestException\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bookRequestEntity\n                                            \n                                                            BookRequestEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe book request entity to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(undefined: CreateBookRequestCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/commands/create-book-request/create-book-request.handler.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateBookRequestCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventPublisher, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateBookRequestCommand } from './create-book-request.command';\nimport { BookRequestEntity } from 'domain/models';\nimport { BookRequestFactory } from 'domain/services';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\nimport { BadRequestException } from '@nestjs/common';\nimport { CreateBookRequestEvent } from 'application/services';\n\n@CommandHandler(CreateBookRequestCommand)\nexport class CreateBookRequestHandler\n  implements ICommandHandler\n{\n  constructor(\n    private readonly bookRequestFactory: BookRequestFactory,\n    private readonly eventPublisher: EventPublisher,\n  ) {}\n\n  /**\n   * Checks the status of a book request.  It checks if the status of the bookRequestEntity is not equal to \"Pending\". If it is not \"Pending\", it throws a BadRequestException\n   *\n   * @param {BookRequestEntity} bookRequestEntity - The book request entity to check.\n   */\n  checkBookRequestStatus(bookRequestEntity: BookRequestEntity) {\n    if (bookRequestEntity.status !== ReservationStatusEnum.Pending) {\n      throw new BadRequestException(\n        'You can not request book with specific status',\n      );\n    }\n  }\n  async execute({\n    bookRequestEntity,\n  }: CreateBookRequestCommand): Promise {\n    this.checkBookRequestStatus(bookRequestEntity);\n    const result = await this.bookRequestFactory.create(bookRequestEntity);\n    const bookRequest = this.eventPublisher.mergeObjectContext(result);\n    const bookRequestCreateEvent = new CreateBookRequestEvent(bookRequest);\n    bookRequest.apply(bookRequestCreateEvent);\n    bookRequest.commit();\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterType.html":{"url":"interfaces/FilterType.html","title":"interface - FilterType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            include\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            populate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            where\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        include\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        include:     ProjectionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of associations to eagerly load using a left join (a single association is also supported). Supported is either\n{ include: Model1 }, { include: [ Model1, Model2, ...]}, { include: [{ model: Model1, as: 'Alias' }]} or\n{ include: [{ all: true }]}.\nIf your association are set up with an as (eg. X.hasMany(Y, { as: 'Z }, you need to specify Z in\nthe as attribute when eager loading Y).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Limits how many items will be retrieved by the operation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specifies an ordering. If a string is provided, it will be escaped. Using an array, you can provide\nseveral columns / functions to order by. Each element can be further wrapped in a two-element array. The\nfirst element is the column / function to order by, the second is the direction. For example:\norder: [['name', 'DESC']]. In this way the column will be escaped, but the direction will not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        populate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        populate:     PopulateOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PopulateOptions[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     populate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Skip the results;\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        where\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        where:     FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Attribute has to be matched for rows to be selected for the given action.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ProjectionType,\n  FilterQuery,\n  SortOrder,\n  PopulateOptions,\n} from 'mongoose';\n\nexport interface FilterType {\n  /**\n   * A list of associations to eagerly load using a left join (a single association is also supported). Supported is either\n   * `{ include: Model1 }`, `{ include: [ Model1, Model2, ...]}`, `{ include: [{ model: Model1, as: 'Alias' }]}` or\n   * `{ include: [{ all: true }]}`.\n   * If your association are set up with an `as` (eg. `X.hasMany(Y, { as: 'Z }`, you need to specify Z in\n   * the as attribute when eager loading Y).\n   */\n  include?: ProjectionType;\n\n  /**\n   * Attribute has to be matched for rows to be selected for the given action.\n   */\n  where?: FilterQuery;\n\n  /**\n   * Specifies an ordering. If a string is provided, it will be escaped. Using an array, you can provide\n   * several columns / functions to order by. Each element can be further wrapped in a two-element array. The\n   * first element is the column / function to order by, the second is the direction. For example:\n   * `order: [['name', 'DESC']]`. In this way the column will be escaped, but the direction will not.\n   */\n  order?: [string, SortOrder][];\n\n  /**\n   * Limits how many items will be retrieved by the operation.\n   */\n  limit?: number;\n\n  /**\n   * Skip the results;\n   */\n  skip?: number;\n\n  /**\n   *  populate\n   */\n  populate?: PopulateOptions[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllBookRequestsHandler.html":{"url":"classes/GetAllBookRequestsHandler.html","title":"class - GetAllBookRequestsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllBookRequestsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/queries/get-all-book-requests/get-all-book-requests.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestRepository: BookRequestRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestRepository\n                                                  \n                                                        \n                                                                        BookRequestRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(query: GetAllBookRequestsQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.handler.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            GetAllBookRequestsQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QueryHandler, IQueryHandler } from '@nestjs/cqrs';\nimport { BookRequestEntity } from 'domain/models';\nimport { BookRequestRepository } from 'domain/services';\nimport { GetAllBookRequestsQuery } from './get-all-book-requests.query';\nimport { findAndCountAll } from 'infrastructure/database';\n\n@QueryHandler(GetAllBookRequestsQuery)\nexport class GetAllBookRequestsHandler\n  implements\n    IQueryHandler>\n{\n  constructor(private readonly bookRequestRepository: BookRequestRepository) {}\n\n  async execute(\n    query: GetAllBookRequestsQuery,\n  ): Promise> {\n    const { requestedBook, requesterName, skip, limit } = query;\n    let requests: findAndCountAll;\n    if (requesterName)\n      requests = await this.bookRequestRepository.findByRequesterName(\n        requesterName,\n        skip,\n        limit,\n      );\n    else if (requestedBook)\n      requests = await this.bookRequestRepository.findByRequestedBook(\n        requestedBook,\n        skip,\n        limit,\n      );\n    else requests = await this.bookRequestRepository.findAll({ skip, limit });\n\n    return requests;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllBookRequestsQuery.html":{"url":"classes/GetAllBookRequestsQuery.html","title":"class - GetAllBookRequestsQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllBookRequestsQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                limit\n                            \n                            \n                                    Public\n                                    Optional\n                                requestedBook\n                            \n                            \n                                    Public\n                                    Optional\n                                requesterName\n                            \n                            \n                                    Public\n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requesterName?: string, requestedBook?: string, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requesterName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        requestedBook\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        requestedBook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        requesterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllBookRequestsQuery {\n  constructor(\n    public requesterName?: string,\n    public requestedBook?: string,\n    public skip?: number,\n    public limit?: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetBookRequestHandler.html":{"url":"classes/GetBookRequestHandler.html","title":"class - GetBookRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetBookRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/queries/get-book-request/get-book-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequestRepository: BookRequestRepository)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/queries/get-book-request/get-book-request.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequestRepository\n                                                  \n                                                        \n                                                                        BookRequestRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(query: GetBookRequestQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/queries/get-book-request/get-book-request.handler.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            GetBookRequestQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QueryHandler, IQueryHandler } from '@nestjs/cqrs';\nimport { BookRequestEntity } from 'domain/models';\nimport { BookRequestRepository } from 'domain/services';\nimport { GetBookRequestQuery } from './get-book-request.query';\n\n@QueryHandler(GetBookRequestQuery)\nexport class GetBookRequestHandler\n  implements IQueryHandler\n{\n  constructor(private readonly bookRequestRepository: BookRequestRepository) {}\n\n  async execute(query: GetBookRequestQuery): Promise {\n    const bookRequest = query.bookRequest;\n    let request: BookRequestEntity;\n    if (bookRequest.id)\n      request = await this.bookRequestRepository.findOneById(bookRequest.id);\n    else\n      request = await this.bookRequestRepository.findOneRequest(\n        bookRequest.requested_book,\n        bookRequest.requester_name,\n        query.status,\n      );\n\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetBookRequestQuery.html":{"url":"classes/GetBookRequestQuery.html","title":"class - GetBookRequestQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetBookRequestQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/queries/get-book-request/get-book-request.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookRequest\n                            \n                            \n                                    Public\n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRequest: Partial, status?: ReservationStatusEnum)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/queries/get-book-request/get-book-request.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRequest\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ReservationStatusEnum\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-book-request/get-book-request.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatusEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/application/services/queries/get-book-request/get-book-request.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BookRequestInterface } from 'infrastructure/interfaces';\nimport { ReservationStatusEnum } from 'infrastructure/enum';\n\nexport class GetBookRequestQuery {\n  constructor(\n    public bookRequest: Partial,\n    public status?: ReservationStatusEnum,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibraryController.html":{"url":"controllers/LibraryController.html","title":"controller - LibraryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibraryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presentation/controllers/library.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getMyRequests\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getRequestById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                request\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                returnBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getMyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyRequests(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('my-requests/:name')@ApiResponse({schema: undefined, status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/presentation/controllers/library.controller.ts:237\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getRequestById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequestById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('request/:id')@HttpCode(HttpStatus.OK)@ApiResponse({schema: undefined, status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/presentation/controllers/library.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        request\n                        \n                    \n                \n            \n            \n                \n                        \n                    request(bookRequest: BookRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/request')@HttpCode(HttpStatus.OK)@ApiResponse({schema: undefined, status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/presentation/controllers/library.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        returnBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    returnBook(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/return-book/:id')@HttpCode(HttpStatus.OK)@ApiResponse({schema: undefined, status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/presentation/controllers/library.controller.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags, ApiResponse } from '@nestjs/swagger';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { BookRequestDto } from 'presentation/DTOs';\nimport {\n  BookRequestUseCase,\n  BookReservationUseCase,\n} from 'application/use-cases';\n\n@ApiTags('library')\n@Controller('/')\nexport class LibraryController {\n  constructor(\n    private readonly bookRequestUseCase: BookRequestUseCase,\n    private readonly bookReservationUseCase: BookReservationUseCase,\n  ) {}\n\n  @Post('/request')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    schema: {\n      type: 'object',\n      required: ['id', 'status', 'requesterName', 'requestedBook', 'createdAt'],\n      properties: {\n        id: {\n          type: 'string',\n        },\n        status: {\n          type: 'string',\n          enum: ['pending', 'reserved', 'rejected', 'returned'],\n        },\n        requesterName: {\n          type: 'string',\n        },\n        requestedBook: {\n          type: 'string',\n        },\n        createdAt: {\n          type: 'string',\n        },\n        updatedAt: {\n          type: 'string',\n        },\n        tags: {\n          type: 'array',\n          items: { type: 'string' },\n        },\n      },\n    },\n    status: HttpStatus.OK,\n  })\n  async request(@Body() bookRequest: BookRequestDto) {\n    try {\n      return this.bookRequestUseCase.requestOneBook(bookRequest);\n    } catch (error) {\n      throw new HttpException(\n        (error.response ? error.response : error.message) ?? error,\n        error.status ?? HttpStatus.EXPECTATION_FAILED,\n      );\n    }\n  }\n\n  @Get('request/:id')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    schema: {\n      type: 'object',\n      required: ['id', 'status', 'requesterName', 'requestedBook', 'createdAt'],\n      properties: {\n        id: {\n          type: 'string',\n        },\n        status: {\n          type: 'string',\n          enum: ['pending', 'reserved', 'rejected', 'returned'],\n        },\n        requesterName: {\n          type: 'string',\n        },\n        requestedBook: {\n          type: 'string',\n        },\n        createdAt: {\n          type: 'string',\n        },\n        updatedAt: {\n          type: 'string',\n        },\n        reservedAt: {\n          type: 'string',\n        },\n        returnedAt: {\n          type: 'string',\n        },\n        tags: {\n          type: 'array',\n          items: { type: 'string' },\n        },\n      },\n    },\n    status: HttpStatus.OK,\n  })\n  async getRequestById(@Param('id') id: string) {\n    try {\n      return this.bookRequestUseCase.getRequestById(id);\n    } catch (error) {\n      throw new HttpException(\n        (error.response ? error.response : error.message) ?? error,\n        error.status ?? HttpStatus.EXPECTATION_FAILED,\n      );\n    }\n  }\n\n  @Patch('/return-book/:id')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    schema: {\n      type: 'object',\n      required: ['id', 'status', 'requesterName', 'requestedBook', 'createdAt'],\n      properties: {\n        id: {\n          type: 'string',\n        },\n        status: {\n          type: 'string',\n          enum: ['pending', 'reserved', 'rejected', 'returned'],\n        },\n        requesterName: {\n          type: 'string',\n        },\n        requestedBook: {\n          type: 'string',\n        },\n        createdAt: {\n          type: 'string',\n        },\n        updatedAt: {\n          type: 'string',\n        },\n        reservedAt: {\n          type: 'string',\n        },\n        returnedAt: {\n          type: 'string',\n        },\n        tags: {\n          type: 'array',\n          items: { type: 'string' },\n        },\n      },\n    },\n    status: HttpStatus.OK,\n  })\n  async returnBook(@Param('id') id: string) {\n    try {\n      return this.bookReservationUseCase.ReturnBook(id);\n    } catch (error) {\n      throw new HttpException(\n        (error.response ? error.response : error.message) ?? error,\n        error.status ?? HttpStatus.EXPECTATION_FAILED,\n      );\n    }\n  }\n\n  @Get('my-requests/:name')\n  @ApiResponse({\n    schema: {\n      type: 'object',\n      required: [\n        'rows',\n        'count',\n        'requesterName',\n        'requestedBook',\n        'createdAt',\n      ],\n      properties: {\n        rows: {\n          type: 'array',\n          items: {\n            type: 'object',\n            required: [\n              'id',\n              'status',\n              'requesterName',\n              'requestedBook',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'string',\n              },\n              status: {\n                type: 'string',\n                enum: ['pending', 'reserved', 'rejected', 'returned'],\n              },\n              requesterName: {\n                type: 'string',\n              },\n              requestedBook: {\n                type: 'string',\n              },\n              createdAt: {\n                type: 'string',\n              },\n              updatedAt: {\n                type: 'string',\n              },\n              reservedAt: {\n                type: 'string',\n              },\n              returnedAt: {\n                type: 'string',\n              },\n              tags: {\n                type: 'array',\n                items: { type: 'string' },\n              },\n            },\n          },\n        },\n        count: {\n          type: 'number',\n        },\n      },\n    },\n    status: HttpStatus.OK,\n  })\n  async getMyRequests(@Param('name') name: string) {\n    try {\n      return this.bookRequestUseCase.getMyRequests(name);\n    } catch (error) {\n      throw new HttpException(\n        (error.response ? error.response : error.message) ?? error,\n        error.status ?? HttpStatus.EXPECTATION_FAILED,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryModule.html":{"url":"modules/LibraryModule.html","title":"module - LibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    LibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_providers\n\n\n\n\nBookRequestFactory\n\nBookRequestFactory\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nBookRequestFactory->LibraryModule\n\n\n\n\n\nBookRequestMapper\n\nBookRequestMapper\n\nLibraryModule -->\n\nBookRequestMapper->LibraryModule\n\n\n\n\n\nBookRequestRepository\n\nBookRequestRepository\n\nLibraryModule -->\n\nBookRequestRepository->LibraryModule\n\n\n\n\n\nBookRequestRetryJob\n\nBookRequestRetryJob\n\nLibraryModule -->\n\nBookRequestRetryJob->LibraryModule\n\n\n\n\n\nBookRequestUseCase\n\nBookRequestUseCase\n\nLibraryModule -->\n\nBookRequestUseCase->LibraryModule\n\n\n\n\n\nBookReservationUseCase\n\nBookReservationUseCase\n\nLibraryModule -->\n\nBookReservationUseCase->LibraryModule\n\n\n\n\n\nNoticeProxy\n\nNoticeProxy\n\nLibraryModule -->\n\nNoticeProxy->LibraryModule\n\n\n\n\n\nProcessBookProxy\n\nProcessBookProxy\n\nLibraryModule -->\n\nProcessBookProxy->LibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/library.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookRequestFactory\n                        \n                        \n                            BookRequestMapper\n                        \n                        \n                            BookRequestRepository\n                        \n                        \n                            BookRequestRetryJob\n                        \n                        \n                            BookRequestUseCase\n                        \n                        \n                            BookReservationUseCase\n                        \n                        \n                            NoticeProxy\n                        \n                        \n                            ProcessBookProxy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LibraryController\n                        \n                        \n                            LibraryProcessController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { controllers } from 'presentation/controllers';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { schemas } from 'domain/models';\nimport { mongoConfig, REDIS_OPTIONS, RMQ_CONFIG } from 'infrastructure/config';\nimport { factories, mappers, repositories } from 'domain/services';\nimport {\n  commandHandlers,\n  proxies,\n  queryHandlers,\n  events,\n  jobs,\n} from 'application/services';\nimport { useCases } from 'application/use-cases';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport {\n  LIBRARY_PROCESS_SERVICE,\n  PROCESS_QUEUE,\n  REQUEST_FAILED_QUEUE,\n} from 'infrastructure/constants';\nimport { BullModule } from '@nestjs/bull';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env${\n        process.env.NODE_ENV ? '.' + process.env.NODE_ENV : ''\n      }`,\n      ignoreEnvFile: process.env.ENV_FILES\n        ? process.env.ENV_FILES !== 'true'\n        : false,\n    }),\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: mongoConfig,\n    }),\n    MongooseModule.forFeature(schemas),\n    CqrsModule.forRoot(),\n    BullModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        redis: REDIS_OPTIONS(configService),\n        defaultJobOptions: {\n          removeOnComplete: true,\n          removeOnFail: false,\n        },\n      }),\n    }),\n    BullModule.registerQueue({\n      name: REQUEST_FAILED_QUEUE,\n    }),\n    ClientsModule.register([\n      {\n        name: LIBRARY_PROCESS_SERVICE,\n        transport: Transport.RMQ,\n        options: {\n          urls: [RMQ_CONFIG()],\n          queue: PROCESS_QUEUE,\n          queueOptions: {\n            durable: true,\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [...controllers],\n  providers: [\n    ...factories,\n    ...mappers,\n    ...repositories,\n    ...commandHandlers,\n    ...useCases,\n    ...proxies,\n    ...queryHandlers,\n    ...events,\n    ...jobs,\n  ],\n})\nexport class LibraryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibraryProcessController.html":{"url":"controllers/LibraryProcessController.html","title":"controller - LibraryProcessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibraryProcessController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/presentation/controllers/library-process.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        request\n                        \n                    \n                \n            \n            \n                \n                        \n                    request(bookRequest: BookProcessResultInterface, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('book.process.result')\n                \n            \n\n                    \n                        \n                            Defined in src/presentation/controllers/library-process.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookProcessResultInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger } from '@nestjs/common';\nimport {\n  Ctx,\n  MessagePattern,\n  Payload,\n  RmqContext,\n} from '@nestjs/microservices';\nimport { BookProcessResultInterface } from 'infrastructure/interfaces';\nimport { BookReservationUseCase } from 'application/use-cases';\n\n@Controller()\nexport class LibraryProcessController {\n  constructor(\n    private readonly bookReservationUseCase: BookReservationUseCase,\n  ) {}\n\n  @MessagePattern('book.process.result')\n  async request(\n    @Payload() bookRequest: BookProcessResultInterface,\n    @Ctx() context: RmqContext,\n  ) {\n    try {\n      await this.bookReservationUseCase.ReserveOneBook(bookRequest);\n      const channel = context.getChannelRef();\n      const orginalMessage = context.getMessage();\n      channel.ack(orginalMessage);\n    } catch (error) {\n      Logger.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoticeProxy.html":{"url":"injectables/NoticeProxy.html","title":"injectable - NoticeProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoticeProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/proxies/notice.proxy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendRejectRequestNotification\n                            \n                            \n                                    Public\n                                sendReserveNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/application/services/proxies/notice.proxy.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendRejectRequestNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRejectRequestNotification(requester: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/proxies/notice.proxy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requester\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendReserveNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendReserveNotification(requester: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/proxies/notice.proxy.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requester\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\n\n@Injectable()\nexport class NoticeProxy {\n  constructor() {}\n\n  public sendReserveNotification(requester: string) {\n    Logger.log(\n      `Sending Success Reservation notification to ${requester}... Email, SMS, Push Notification, In App Notification, etc`,\n    );\n  }\n\n  public sendRejectRequestNotification(requester: string) {\n    Logger.log(\n      `Sending Rejected notification to ${requester}... Email, SMS, Push Notification, In App Notification, etc`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessBookProxy.html":{"url":"injectables/ProcessBookProxy.html","title":"injectable - ProcessBookProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessBookProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/services/proxies/process-book.proxy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                processRequestBook\n                            \n                            \n                                    Public\n                                processReturnBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/application/services/proxies/process-book.proxy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        processRequestBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processRequestBook(bookRequest: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/proxies/process-book.proxy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        processReturnBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    processReturnBook(bookRequest: BookRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/application/services/proxies/process-book.proxy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookRequest\n                                            \n                                                            BookRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { LIBRARY_PROCESS_SERVICE } from 'infrastructure/constants';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { BookRequestInterface } from 'infrastructure/interfaces';\n\n@Injectable()\nexport class ProcessBookProxy {\n  constructor(\n    @Inject(LIBRARY_PROCESS_SERVICE) private amqpClient: ClientProxy,\n  ) {}\n\n  public processRequestBook(bookRequest: BookRequestInterface) {\n    return this.amqpClient.emit('book.request', bookRequest);\n  }\n\n  public processReturnBook(bookRequest: BookRequestInterface) {\n    return this.amqpClient.emit('book.return', bookRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/services/commands/change-book-request-status/change-book-request-status.command.ts\n            \n            class\n            ChangeBookRequestStatusCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/application/services/commands/change-book-request-status/change-book-request-status.handler.ts\n            \n            class\n            ChangeBookRequestStatusHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/services/commands/create-book-request/create-book-request.command.ts\n            \n            class\n            CreateBookRequestCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/commands/create-book-request/create-book-request.handler.ts\n            \n            class\n            CreateBookRequestHandler\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/application/services/commands/index.ts\n            \n            variable\n            commandHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/services/events/change-book-request-status/change-book-request-status.event-handler.ts\n            \n            class\n            ChangeBookRequestStatusEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/events/change-book-request-status/change-book-request-status.event.ts\n            \n            class\n            ChangeBookRequestStatusEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/events/create-book-request/create-book-request.event-handler.ts\n            \n            class\n            CreateBookRequestEventHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/application/services/events/create-book-request/create-book-request.event.ts\n            \n            class\n            CreateBookRequestEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/events/index.ts\n            \n            variable\n            events\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/services/jobs/book-request-retry.job.ts\n            \n            injectable\n            BookRequestRetryJob\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/services/jobs/index.ts\n            \n            variable\n            jobs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/services/proxies/index.ts\n            \n            variable\n            proxies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/services/proxies/notice.proxy.ts\n            \n            injectable\n            NoticeProxy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/services/proxies/process-book.proxy.ts\n            \n            injectable\n            ProcessBookProxy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/services/queries/get-all-book-requests/get-all-book-requests.handler.ts\n            \n            class\n            GetAllBookRequestsHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/queries/get-all-book-requests/get-all-book-requests.query.ts\n            \n            class\n            GetAllBookRequestsQuery\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/application/services/queries/get-book-request/get-book-request.handler.ts\n            \n            class\n            GetBookRequestHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/application/services/queries/get-book-request/get-book-request.query.ts\n            \n            class\n            GetBookRequestQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/services/queries/index.ts\n            \n            variable\n            queryHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/application/use-cases/book-request.use-case.ts\n            \n            injectable\n            BookRequestUseCase\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/application/use-cases/book-reservation.use-case.ts\n            \n            injectable\n            BookReservationUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/application/use-cases/index.ts\n            \n            variable\n            useCases\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/models/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/models/entities/book-request.entity.ts\n            \n            class\n            BookRequestEntity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/domain/models/entities/index.ts\n            \n            variable\n            entities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/models/schemas/base.schema.ts\n            \n            class\n            BaseSchema\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/models/schemas/book-request.schema.ts\n            \n            class\n            BookRequestSchema\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/models/schemas/index.ts\n            \n            variable\n            schemas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/services/factories/base.factory.ts\n            \n            class\n            BaseFactory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/services/factories/book-request.factory.ts\n            \n            injectable\n            BookRequestFactory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/services/factories/index.ts\n            \n            variable\n            factories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/services/mappers/base.mapper.ts\n            \n            interface\n            BaseMapper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/services/mappers/book-request.mapper.ts\n            \n            injectable\n            BookRequestMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/services/mappers/index.ts\n            \n            variable\n            mappers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/services/repositories/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/services/repositories/book-request.repository.ts\n            \n            injectable\n            BookRequestRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/domain/services/repositories/index.ts\n            \n            variable\n            repositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/app.config.ts\n            \n            variable\n            APP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/mongo.config.ts\n            \n            variable\n            mongoConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/node-env.config.ts\n            \n            function\n            NODE_ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/rabbit.config.ts\n            \n            function\n            RMQ_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/redis.config.ts\n            \n            variable\n            REDIS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/redis.config.ts\n            \n            variable\n            REDIS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/redis.config.ts\n            \n            variable\n            RedisConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/amqp-queue.constant.ts\n            \n            variable\n            LIBRARY_PROCESS_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/amqp-queue.constant.ts\n            \n            variable\n            LIBRARY_REQUEST_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/amqp-queue.constant.ts\n            \n            variable\n            PROCESS_QUEUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/amqp-queue.constant.ts\n            \n            variable\n            PROCESS_RESULT_QUEUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/bull.constant.ts\n            \n            variable\n            REMOVE_NO_RESULT_JOB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/bull.constant.ts\n            \n            variable\n            REQUEST_FAILED_QUEUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/constants/bull.constant.ts\n            \n            variable\n            RETRY_REQUEST_JOB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/database/filter.ts\n            \n            interface\n            FilterType\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/infrastructure/interfaces/book-process-result.interface.ts\n            \n            interface\n            BookProcessResultInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/interfaces/book-request.interface.ts\n            \n            interface\n            BookRequestInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presentation/DTOs/book-request.dto.ts\n            \n            class\n            BookRequestDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/presentation/controllers/index.ts\n            \n            variable\n            controllers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/presentation/controllers/library-process.controller.ts\n            \n            controller\n            LibraryProcessController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/presentation/controllers/library.controller.ts\n            \n            controller\n            LibraryController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @bull-monitor/express : ^5.4.0\n        \n            @nestjs/bull : ^10.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/microservices : ^10.3.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.3\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderEnum   (src/.../order.enum.ts)\n                        \n                        \n                            ReservationStatusEnum   (src/.../reservation-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/enum/order.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderEnum\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    src/infrastructure/enum/reservation-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReservationStatusEnum\n                    \n                \n                        \n                            \n                                 Pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 Reserved\n                            \n                        \n                        \n                            \n                                Value : reserved\n                            \n                        \n                        \n                            \n                                 Rejected\n                            \n                        \n                        \n                            \n                                Value : rejected\n                            \n                        \n                        \n                            \n                                 Returned\n                            \n                        \n                        \n                            \n                                Value : returned\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            NODE_ENV   (src/.../node-env.config.ts)\n                        \n                        \n                            RMQ_CONFIG   (src/.../rabbit.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/infrastructure/config/node-env.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NODE_ENV\n                        \n                    \n                \n            \n            \n                \nNODE_ENV(defenv: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defenv\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'development'\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/infrastructure/config/rabbit.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RMQ_CONFIG\n                        \n                    \n                \n            \n            \n                \nRMQ_CONFIG()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_providers\n\n\n\n\nBookRequestFactory\n\nBookRequestFactory\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nBookRequestFactory->LibraryModule\n\n\n\n\n\nBookRequestMapper\n\nBookRequestMapper\n\nLibraryModule -->\n\nBookRequestMapper->LibraryModule\n\n\n\n\n\nBookRequestRepository\n\nBookRequestRepository\n\nLibraryModule -->\n\nBookRequestRepository->LibraryModule\n\n\n\n\n\nBookRequestRetryJob\n\nBookRequestRetryJob\n\nLibraryModule -->\n\nBookRequestRetryJob->LibraryModule\n\n\n\n\n\nBookRequestUseCase\n\nBookRequestUseCase\n\nLibraryModule -->\n\nBookRequestUseCase->LibraryModule\n\n\n\n\n\nBookReservationUseCase\n\nBookReservationUseCase\n\nLibraryModule -->\n\nBookReservationUseCase->LibraryModule\n\n\n\n\n\nNoticeProxy\n\nNoticeProxy\n\nLibraryModule -->\n\nNoticeProxy->LibraryModule\n\n\n\n\n\nProcessBookProxy\n\nProcessBookProxy\n\nLibraryModule -->\n\nProcessBookProxy->LibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Simple library for Part Company!This is a task for Part Company.It is developed to evaluate my nodejs/nestjs knowledge and programming skills\n        \n            License : UNLICENSED\n        \n            Author : Hamid Sekandari\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            findAndCountAll   (src/.../find-and-count-all.ts)\n                        \n                        \n                            IOutput   (src/.../find-and-count-all.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/database/find-and-count-all.ts\n    \n    \n        \n            \n                \n                    \n                    findAndCountAll\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_PORT   (src/.../app.config.ts)\n                        \n                        \n                            commandHandlers   (src/.../index.ts)\n                        \n                        \n                            controllers   (src/.../index.ts)\n                        \n                        \n                            entities   (src/.../index.ts)\n                        \n                        \n                            events   (src/.../index.ts)\n                        \n                        \n                            factories   (src/.../index.ts)\n                        \n                        \n                            jobs   (src/.../index.ts)\n                        \n                        \n                            LIBRARY_PROCESS_SERVICE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            LIBRARY_REQUEST_SERVICE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            mappers   (src/.../index.ts)\n                        \n                        \n                            mongoConfig   (src/.../mongo.config.ts)\n                        \n                        \n                            PROCESS_QUEUE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            PROCESS_RESULT_QUEUE   (src/.../amqp-queue.constant.ts)\n                        \n                        \n                            proxies   (src/.../index.ts)\n                        \n                        \n                            queryHandlers   (src/.../index.ts)\n                        \n                        \n                            REDIS_CONFIG   (src/.../redis.config.ts)\n                        \n                        \n                            REDIS_OPTIONS   (src/.../redis.config.ts)\n                        \n                        \n                            RedisConfig   (src/.../redis.config.ts)\n                        \n                        \n                            REMOVE_NO_RESULT_JOB   (src/.../bull.constant.ts)\n                        \n                        \n                            repositories   (src/.../index.ts)\n                        \n                        \n                            REQUEST_FAILED_QUEUE   (src/.../bull.constant.ts)\n                        \n                        \n                            RETRY_REQUEST_JOB   (src/.../bull.constant.ts)\n                        \n                        \n                            schemas   (src/.../index.ts)\n                        \n                        \n                            useCases   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/config/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : +process.env.PORT || 3000\n                    \n                \n\n\n        \n    \n\n    src/application/services/commands/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commandHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CreateBookRequestHandler,\n  ChangeBookRequestStatusHandler,\n]\n                    \n                \n\n\n        \n    \n\n    src/presentation/controllers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        controllers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [LibraryController, LibraryProcessController]\n                    \n                \n\n\n        \n    \n\n    src/domain/models/entities/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestEntity]\n                    \n                \n\n\n        \n    \n\n    src/application/services/events/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CreateBookRequestEventHandler,\n  ChangeBookRequestStatusEventHandler,\n]\n                    \n                \n\n\n        \n    \n\n    src/domain/services/factories/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        factories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestFactory]\n                    \n                \n\n\n        \n    \n\n    src/application/services/jobs/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestRetryJob]\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/constants/amqp-queue.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LIBRARY_PROCESS_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LIBRARY_PROCESS_SERVICE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LIBRARY_REQUEST_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LIBRARY_REQUEST_SERVICE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROCESS_QUEUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'process_queue'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROCESS_RESULT_QUEUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'process_result_queue'\n                    \n                \n\n\n        \n    \n\n    src/domain/services/mappers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mappers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestMapper]\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/config/mongo.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongoConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  configService: ConfigService,\n): MongooseModuleFactoryOptions => {\n  const username = configService.get('MONGO_USER');\n  const password = configService.get('MONGO_PASS');\n  const database = configService.get('MONGO_DB', 'reservation');\n\n  const host = configService.get('MONGO_HOST', '127.0.0.1:27017');\n  const query = configService.get('MONGO_QUERY', 'authSource=admin');\n\n  let uri = null;\n  if (!username && !password) {\n    uri = `mongodb://${host}/${database}?${query}`;\n  } else {\n    uri = `mongodb://${username}:${password}@${host}/${database}?${query}`;\n  }\n\n  return {\n    uri: configService.get('MONGO_URI', uri),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/application/services/proxies/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        proxies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ProcessBookProxy, NoticeProxy]\n                    \n                \n\n\n        \n    \n\n    src/application/services/queries/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        queryHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [GetBookRequestHandler, GetAllBookRequestsHandler]\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/config/redis.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  const password = process.env.REDIS_PASS;\n  const host = process.env.REDIS_HOST;\n  const port = parseInt(process.env.REDIS_PORT);\n\n  let uri = null;\n  if (!password) {\n    uri = `redis://${host}:${port}`;\n  } else {\n    uri = `redis://:${password}@${host}:${port}`;\n  }\n\n  return uri;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REDIS_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  configService: ConfigService,\n): {\n  host: string;\n  port: number;\n  password?: string;\n} => {\n  const password = configService.get('REDIS_PASS', '');\n  const host = configService.get('REDIS_HOST', 'localhost');\n  const port = configService.get('REDIS_PORT', 6379);\n\n  return {\n    host,\n    port,\n    ...(password ? { password } : {}),\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RedisConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService: ConfigService): string => {\n  const { host, port, password } = REDIS_OPTIONS(configService);\n  let url = null;\n  if (!password) {\n    url = `redis://${host}:${port}`;\n  } else {\n    url = `redis://:${password}@${host}:${port}`;\n  }\n  return url;\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/constants/bull.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REMOVE_NO_RESULT_JOB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove_no_result_job'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_FAILED_QUEUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'request_failed_queue'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RETRY_REQUEST_JOB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'retry_request_job'\n                    \n                \n\n\n        \n    \n\n    src/domain/services/repositories/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repositories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestRepository]\n                    \n                \n\n\n        \n    \n\n    src/domain/models/schemas/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schemas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: BookRequestSchema.name,\n    schema: BookRequestSchema.getSchema(),\n    collection: 'book_requests',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/application/use-cases/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        useCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [BookRequestUseCase, BookReservationUseCase]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
